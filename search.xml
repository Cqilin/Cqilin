<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>0-serial_number</title>
    <url>/1-(0~50)/0-%E5%BA%8F%E5%8F%B7/</url>
    <content><![CDATA[<h2 id="1-序号"><a href="#1-序号" class="headerlink" title="1. 序号"></a>1. 序号</h2><h3 id="1-typescript-introduction"><a href="#1-typescript-introduction" class="headerlink" title="1-typescript_introduction"></a>1-typescript_introduction</h3><p>ts入门</p>
<hr>
<h3 id="2-ts-first-item"><a href="#2-ts-first-item" class="headerlink" title="2-ts_first_item"></a>2-ts_first_item</h3><p>ts第一个项目</p>
<a id="more"></a>

<hr>
<h3 id="3-ts-problem"><a href="#3-ts-problem" class="headerlink" title="3-ts problem"></a>3-ts problem</h3><p>ts问题</p>
<hr>
<h3 id="4-css-private-note"><a href="#4-css-private-note" class="headerlink" title="4-css_private_note"></a>4-css_private_note</h3><p>css个人笔记</p>
<hr>
<h3 id="5-md语法与技巧note"><a href="#5-md语法与技巧note" class="headerlink" title="5-md语法与技巧note"></a>5-md语法与技巧note</h3><hr>
<h3 id="6-github-amp-amp-gitee-problem"><a href="#6-github-amp-amp-gitee-problem" class="headerlink" title="6-github&amp;&amp;gitee problem"></a>6-github&amp;&amp;gitee problem</h3><hr>
<h3 id="7-blog’s-problem-set"><a href="#7-blog’s-problem-set" class="headerlink" title="7-blog’s problem set"></a>7-blog’s problem set</h3><hr>
<h3 id="8-blog’s-function-add"><a href="#8-blog’s-function-add" class="headerlink" title="8-blog’s function add"></a>8-blog’s function add</h3><hr>
<h3 id="9-Function-website"><a href="#9-Function-website" class="headerlink" title="9-Function_website"></a>9-Function_website</h3><hr>
<h3 id="10-PicGo"><a href="#10-PicGo" class="headerlink" title="10-PicGo"></a>10-PicGo</h3><hr>
<h3 id="11-git"><a href="#11-git" class="headerlink" title="11-git"></a>11-git</h3><hr>
<h3 id="12-html-css-introdiction-pink"><a href="#12-html-css-introdiction-pink" class="headerlink" title="12-html+css_introdiction-pink"></a>12-html+css_introdiction-pink</h3><hr>
<h3 id="13-VPN"><a href="#13-VPN" class="headerlink" title="13-VPN"></a>13-VPN</h3><hr>
<h3 id="14-galgame"><a href="#14-galgame" class="headerlink" title="14-galgame"></a>14-galgame</h3><hr>
<h3 id="15-node-js"><a href="#15-node-js" class="headerlink" title="15-node.js"></a>15-node.js</h3><hr>
<h3 id="16-Python-collect-收藏"><a href="#16-Python-collect-收藏" class="headerlink" title="16-Python-collect_收藏"></a>16-Python-collect_收藏</h3><hr>
<h3 id="17-VPN"><a href="#17-VPN" class="headerlink" title="17-VPN"></a>17-VPN</h3><hr>
<h3 id="18-typora"><a href="#18-typora" class="headerlink" title="18-typora"></a>18-typora</h3><hr>
<h3 id="19-谷歌扩展"><a href="#19-谷歌扩展" class="headerlink" title="19-谷歌扩展"></a>19-谷歌扩展</h3><hr>
<h3 id="20-Pixiv"><a href="#20-Pixiv" class="headerlink" title="20-Pixiv"></a>20-Pixiv</h3><hr>
<h3 id="21-windows；"><a href="#21-windows；" class="headerlink" title="21-windows；"></a>21-windows；</h3><p>2020-9-7 06:04:22</p>
<hr>
<h2 id="2-更新日志"><a href="#2-更新日志" class="headerlink" title="2. 更新日志"></a>2. 更新日志</h2><h3 id="2-1-2020-9-7-06-00-31"><a href="#2-1-2020-9-7-06-00-31" class="headerlink" title="2.1 2020-9-7 06:00:31"></a>2.1 2020-9-7 06:00:31</h3><h4 id="2-1-1-文章8"><a href="#2-1-1-文章8" class="headerlink" title="2.1.1 文章8"></a>2.1.1 文章8</h4><p>1.更新了15，16，17；</p>
<h4 id="2-1-2-文章7"><a href="#2-1-2-文章7" class="headerlink" title="2.1.2 文章7"></a>2.1.2 文章7</h4><p>1.更新了11</p>
<h4 id="2-1-3-文章6"><a href="#2-1-3-文章6" class="headerlink" title="2.1.3 文章6"></a>2.1.3 文章6</h4><p>1.更新了2，2.2，2.3；2020-9-7 06:02:45</p>
<hr>
<h4 id="2-1-4-文章21"><a href="#2-1-4-文章21" class="headerlink" title="2.1.4 文章21"></a>2.1.4 文章21</h4><p>1.新建21，1，1.1，1.2；2020-9-7 06:03:36</p>
<hr>
<h3 id="2-2-2020-9-9-18-50-15"><a href="#2-2-2020-9-9-18-50-15" class="headerlink" title="2.2 2020-9-9 18:50:15"></a>2.2 2020-9-9 18:50:15</h3><h4 id="2-2-1-文章8-bfa"><a href="#2-2-1-文章8-bfa" class="headerlink" title="2.2.1 文章8-bfa"></a>2.2.1 文章8-bfa</h4><ul>
<li>8-blog’s_function_add-文章加密；2020-9-9 18:51:01</li>
<li>7-blog’s_problem_set-12. 不能显示css；2020-9-10 05:22:12</li>
</ul>
<hr>
<h3 id="2-3-2020-9-11-23-55-51"><a href="#2-3-2020-9-11-23-55-51" class="headerlink" title="2.3 2020-9-11 23:55:51"></a>2.3 2020-9-11 23:55:51</h3><ul>
<li>12-8.3.3 三角强化；2020-9-11 23:56:09</li>
</ul>
]]></content>
      <tags>
        <tag>xuhao</tag>
      </tags>
  </entry>
  <entry>
    <title>1-typescript</title>
    <url>/1-(0~50)/1-typescript_introduction/</url>
    <content><![CDATA[<h2 id="1-TypeScript初体验"><a href="#1-TypeScript初体验" class="headerlink" title="1. TypeScript初体验"></a>1. TypeScript初体验</h2><h3 id="1-1-ts概述"><a href="#1-1-ts概述" class="headerlink" title="1.1 ts概述"></a>1.1 ts概述</h3><ul>
<li>JavaScript 是什么</li>
<li>TypeScript 是什么</li>
<li>TypeScript 相比 JavaScript 的优势</li>
</ul>
<a id="more"></a>

<h4 id="1-1-1-JavaScript是什么"><a href="#1-1-1-JavaScript是什么" class="headerlink" title="1.1.1 JavaScript是什么"></a>1.1.1 JavaScript是什么</h4><p>JavaS Script（缩写：JS）是一种运行在客户端（比如：浏览器）中的编程语言。</p>
<p>当应用于浏览器时，为网站提供动态交互特性，让网页“动”起来。</p>
<p>JavaScript 的运行环境：1 浏览器 2 Node.js。<br>Node.js 让 JavaScript 摆脱了浏览器的束缚，可以实现服务端/桌面端编程等。<br>其他： 微信小程序、微信小游戏 等等。<br>总结：JavaScript 既能运行在 浏览器 中，也可以运行在 Node.js 中，前后端通吃，无所不能。</p>
<h4 id="1-1-2-TypeScript-是什么"><a href="#1-1-2-TypeScript-是什么" class="headerlink" title="1.1.2 TypeScript 是什么"></a>1.1.2 TypeScript 是什么</h4><p>TypeS Script（简称：TS）是 JavaScript 的超集（JS 有的 TS 都有）。</p>
<p>TypeScript =  Type + JavaScript（为 JS 添加了类型系统）。<br>TypeScript 是微软开发的开源编程语言，设计目标是开发大型应用。<br>可以在任何浏览器、任何计算机、任何操作系统上运行。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// TypeScript 代码：有明确的类型，即 : number （数值类型）</span></span><br><span class="line"><span class="keyword">let</span> age: <span class="built_in">number</span> = <span class="number">18</span></span><br><span class="line"><span class="comment">// JavaScript 代码：无明确的类型</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">18</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/03/Eo4aSzBmlvQgTJi.png" alt="形象"></p>
<hr>
<h4 id="1-1-3-TypeScript-相比-JS-的优势"><a href="#1-1-3-TypeScript-相比-JS-的优势" class="headerlink" title="1.1.3 TypeScript  相比 JS 的优势"></a>1.1.3 TypeScript  相比 JS 的优势</h4><p>悲伤的故事：男程序员都是好男人，因为他们总会在电脑前问：我到底又错在哪了？<br>JS 的类型系统存在“先天缺陷” ，绝大部分错误都是类型错误（ Uncaught TypeError ）。<br>l 优势一：类型化思维方式，使得开发更加严谨，提前发现错误，减少改 Bug 时间。<br>l 优势二：类型系统提高了代码可读性，并使维护和重构代码更加容易。<br>l 优势三：补充了接口、枚举等开发大型应用时 JS 缺失的功能。<br>l Vue 3 源码使用 TS 重写，释放出重要信号：TS 是趋势。<br>l Angular 默认支持 TS；React 与 TS 完美配合，是很多大型项目的首选。<br>l 我呼吁：准程序员们，为了发量、为了对象，让我们手拉手一起用 TS 吧！</p>
<hr>
<h3 id="1-2-开发工具准备"><a href="#1-2-开发工具准备" class="headerlink" title="1.2 开发工具准备"></a>1.2 开发工具准备</h3><h4 id="1-2-1-开发工具介绍"><a href="#1-2-1-开发工具介绍" class="headerlink" title="1.2.1 开发工具介绍"></a>1.2.1 开发工具介绍</h4><ol>
<li>写代码的工具：V Visual S Studio  Code（简称：VSCode），微软开发的代码编辑工具。</li>
<li>运行 TS / JS 代码的工具：Node.js，一个基于 Chrome 浏览器 V8 解析引擎的 JavaScript 运行环境。</li>
</ol>
<ul>
<li>说明：本课程中，TypeScript 基础知识，使用 Node.js 来运行。</li>
</ul>
<h4 id="1-2-2-安装-VSCode"><a href="#1-2-2-安装-VSCode" class="headerlink" title="1.2.2  安装 VSCode"></a>1.2.2  安装 VSCode</h4><ol>
<li>按照步骤引导安装即可。</li>
<li>安装中文汉化插件：Chinese (Simplified) Language Pack for Visual Studio Code</li>
<li>点击右下角弹出的对话框，重启（Restart）VSCode。</li>
</ol>
<p><img src="https://i.loli.net/2020/08/05/UJ7Dv4dVjx3o56B.png" alt=""></p>
<center style="font-size:14px;color:#C0C0C0;">图1</center>

<hr>
<h4 id="1-2-3-安装-Node-js"><a href="#1-2-3-安装-Node-js" class="headerlink" title="1.2.3  安装  Node.js"></a>1.2.3  安装  Node.js</h4><ol>
<li>按照步骤引导安装即可。</li>
<li>在终端（黑窗口）中输入：node –version，验证是否安装成功（注意：需要重启VSCode）。</li>
<li>如果打印出版本信息说明安装成功。</li>
</ol>
<p><img src="https://i.loli.net/2020/08/05/KwENhpAfS6yYaDu.png" alt=""></p>
<center style="font-size:14px;color:#C0C0C0;">图1</center>

<hr>
<br />

<h4 id="1-2-4-安装解析-TS-的工具包"><a href="#1-2-4-安装解析-TS-的工具包" class="headerlink" title="1.2.4  安装解析 TS  的工具包"></a>1.2.4  安装解析 TS  的工具包</h4><p>问题：为什么要安装这个工具包？</p>
<p>答案：</p>
<ul>
<li>Node.js/浏览器，只认识 JS 代码，不认识 TS 代码。</li>
<li>需要先将 TS 代码转化为 JS，然后就可以在 Node.js/浏览器中运行了。</li>
</ul>
<p>安装步骤：</p>
<ol>
<li><p>打开 VSCode 终端。</p>
</li>
<li><p>输入安装命令： npm i -g typescript 敲回车，来安装（注意：需要联网）。</p>
<p>typescript：就是用来解析 TS 的工具包。提供了 tsc 命令，实现了 TS -&gt; JS 的转化。</p>
<p>npm：用来安装前端开发中用到的包，是安装 Node.js 时自动安装的。</p>
<p>i（install）：表示安装。</p>
<p>-g（–global）：全局标识，可以在任意目录中使用该工具。</p>
</li>
</ol>
<hr>
<br />

<h3 id="1-3-第一个TS文件"><a href="#1-3-第一个TS文件" class="headerlink" title="1.3 第一个TS文件"></a>1.3 第一个TS文件</h3><ol>
<li><p>创建ts文件：<br>① 在桌面中创建文件夹：code。<br>② 在文件夹上点击鼠标右键，然后点击 Open With Code（用VSCode打开文件夹）。<br>③ 在 VSCode 中新建ts文件：hello.ts（注意：文件后缀名为 .ts）。</p>
</li>
<li><p>写代码：在 hello.ts 文件中，写入以下代码，并保存。</p>
<p><code>console.log(&#39;Hello TS&#39;)</code></p>
</li>
</ol>
<p>问题1：TS 代码能直接在 Node.js 里面运行吗？   不能<br>问题2：该如何处理呢？    1 .TS代码 -&gt; JS代码   2. 执行</p>
<ol start="3">
<li><p>执行代码，分两步：</p>
<p>① TS代码 -&gt; JS代码：在当前目录打开终端，输入命令 tsc hello.ts 敲回车。<br>② 执行JS：输入命令 node hello.js（注意：后缀为 .js）。</p>
<p>解释：</p>
<ul>
<li>tsc hello.ts 会生成一个 hello.js 文件。</li>
<li>node hello.js 表示执行这个 JS 文件中的代码。</li>
</ul>
</li>
</ol>
<hr>
<h2 id="4-ts语句"><a href="#4-ts语句" class="headerlink" title="4. ts语句"></a>4. ts语句</h2><h3 id="4-1-条件语句"><a href="#4-1-条件语句" class="headerlink" title="4.1 条件语句"></a>4.1 条件语句</h3><h4 id="4-1-1-概述"><a href="#4-1-1-概述" class="headerlink" title="4.1.1 概述"></a>4.1.1 概述</h4><p>生活中，打开网站看电影：1 免费电影 2 Vip 电影。<br>播放 Vip 电影时，首先会判断是不是 Vip：<br>l 如果是 Vip，就可以看完整电影；<br>l 如果不是 Vip，只能试看5分钟。</p>
<p><img src="https://i.loli.net/2020/08/06/NxqDCYuLbtyR7nJ.png" alt=""></p>
<center style="font-size:15px;color:#C0C0C0;">图1</center>

<p>条件语句：根据判断条件的结果（真或假），来执行不同的代码，从而实现不同功能。<br>条件执行时，首先判断条件是否满足。<br>l 如果  条 件满足，就做某件事情（情况1）<br>l 如果  条 件不满足，就做另外一件事情（情况2）</p>
<p><img src="https://i.loli.net/2020/08/06/5O8A4xrJ7QVE6Dy.png" alt=""></p>
<center style="font-size:15px;color:#C0C0C0;">图2</center>

<p>条件语句，也叫分支语句，不同的情况就是不同的分支。 </p>
<hr>
<h4 id="4-1-2-if语句"><a href="#4-1-2-if语句" class="headerlink" title="4.1.2 if语句"></a>4.1.2 if语句</h4><p>在 TypeScript 中  if 语句就是实现条件判断的。</p>
<ul>
<li><p>if 语句的语法：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">if ( (判断条件 ) </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">    条件满足时，要做的事情</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"> </span></span><br></pre></td></tr></table></figure>

<p>解释：<br>l 判断条件：布尔类型（true 或 false）。<br>l 如果 判断条件 为真，就执行 要做的事情；<br>l 否则，如果判断条件为假，则不执行花括号中的代码。</p>
</li>
</ul>
<p>补充概念说明：语句，是一个完整的句子，用来使某件事情发生（或实现某个功能）。</p>
<hr>
<h4 id="4-1-3-else语句"><a href="#4-1-3-else语句" class="headerlink" title="4.1.3 else语句"></a>4.1.3 else语句</h4><p>在 TypeScript 中 else 语句必须配合  if 语句来使用。</p>
<p>else 语句表示： 条件不满足，要做的事情（ if 语句的对立面）。</p>
<ul>
<li>else 语句的语法:</li>
</ul>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml">if (判断条件) </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">条件满足时，要做的事情</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml">  else </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">条件不满足，要做的事情</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"> </span></span><br></pre></td></tr></table></figure>

<p>解释：<br>l 否则，如果 判断条件 为假，就执行 条件不满足时要做的事情。</p>
<hr>
<h3 id="4-2-三元运算符"><a href="#4-2-三元运算符" class="headerlink" title="4.2 三元运算符"></a>4.2 三元运算符</h3><p>三元运算符的作用与  if … else 语句类似。</p>
<p>作用：根据判断条件的真假，得到不同的 结 果。</p>
<p>语法：</p>
<p>结果 = 判断条件 ? 值1 : 值2</p>
<p>解释：</p>
<ul>
<li>如果判断条件为真，结果为 值1；</li>
<li>否则，如果判断条件为假，结果为 值2。</li>
</ul>
<p>注意：得到 结果的类型 由 值1 和 值2 的 类型决定 （值1和值2的类型相同）。</p>
<hr>
<h2 id="5、TypeScript数组"><a href="#5、TypeScript数组" class="headerlink" title="5、TypeScript数组"></a>5、TypeScript数组</h2><h3 id="5-1-数组概述"><a href="#5-1-数组概述" class="headerlink" title="5.1 数组概述"></a>5.1 数组概述</h3><p>问题1：存储一个人的名字，怎么存？  声明一个字符串类型的变量<br><code>let name1: string = &#39;迪丽热巴&#39;</code><br>问题2：存储三个人的名字，怎么存？  声明三个字符串类型的变量</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name1: <span class="keyword">string</span> = <span class="string">&#x27;迪丽热巴&#x27;</span></span><br><span class="line"><span class="keyword">let</span> name2: <span class="keyword">string</span> = <span class="string">&#x27;古力娜扎&#x27;</span></span><br><span class="line"><span class="keyword">let</span> name3: <span class="keyword">string</span> = <span class="string">&#x27;马尔扎哈&#x27;</span></span><br></pre></td></tr></table></figure>

<p>问题3：如何是存储一个班级中所有人的名字呢？<br>存储多个数据时，声明多个变量就太繁琐了。</p>
<!--more-->

<hr>
<p>数组，是用于存放多个数据的集合。</p>
<p>有数组：只需要使用一个数组（ [] ），就可以存储任意多个数据。</p>
<p><code>let names: string[] = [&#39;迪丽热巴&#39;, &#39;古力娜扎&#39;, &#39;马尔扎哈&#39;]</code></p>
<p>没有数组：存储三个人的名字，就需要三个字符串类型的变量。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name1: <span class="keyword">string</span> = <span class="string">&#x27;迪丽热巴&#x27;</span></span><br><span class="line"><span class="keyword">let</span> name2: <span class="keyword">string</span> = <span class="string">&#x27;古力娜扎&#x27;</span></span><br><span class="line"><span class="keyword">let</span> name3: <span class="keyword">string</span> = <span class="string">&#x27;马尔扎哈&#x27;</span></span><br></pre></td></tr></table></figure>

<p>注意：数组中，通常是相同类型的数据。</p>
<hr>
<h3 id="5-2-创建数组"><a href="#5-2-创建数组" class="headerlink" title="5.2 创建数组"></a>5.2 创建数组</h3><ol>
<li>创建数组有两种语法形式。</li>
</ol>
<p>语法一（推荐）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let names: string[] &#x3D; []</span><br></pre></td></tr></table></figure>

<p>[ ] (中括号) 表示数组。如果数组中没有内容，就是一个空数组。</p>
<p>数组的类型注解由两部分组成：类型+ [] 。此处表示字符串类型的数组（只能出现字符串类型）。</p>
<p><code>let names: string[] = [&#39;迪丽热巴&#39;]</code></p>
<p>数组，多个元素之间使用逗号（,）分隔。<br>数组中的每一项内容称为：元素。</p>
<ol start="2">
<li>语法二（不推荐）：</li>
</ol>
<p><code>let names: string[] = new Array()</code></p>
<p>功能与 [ ]  相同，但是更加繁琐：</p>
<p><code>let names: string[] = []</code></p>
<p>数组中有数据时：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> names: <span class="built_in">string</span>[] = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;迪丽热巴&#x27;</span>, <span class="string">&#x27;古力娜扎&#x27;</span>, <span class="string">&#x27;马尔扎哈&#x27;</span>)</span><br><span class="line"><span class="comment">// 相当于：</span></span><br><span class="line"><span class="keyword">let</span> names: <span class="built_in">string</span>[] = [<span class="string">&#x27;迪丽热巴&#x27;</span>, <span class="string">&#x27;古力娜扎&#x27;</span>, <span class="string">&#x27;马尔扎哈&#x27;</span>]</span><br></pre></td></tr></table></figure>



<h3 id="5-3-数组长度和索引"><a href="#5-3-数组长度和索引" class="headerlink" title="5.3 数组长度和索引"></a>5.3 数组长度和索引</h3><p>视频链接：<a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?t=4&amp;p=59">https://www.bilibili.com/video/BV1UD4y1m7Gw?t=4&amp;p=59</a></p>
<h4 id="5-3-1-概述"><a href="#5-3-1-概述" class="headerlink" title="5.3.1 概述"></a>5.3.1 概述</h4><p>生活中，我们经常会排队（比如：排队吃饭）。<br>队伍的特征：1 长度 2 顺序和序号（队伍中的每个人）。<br>我们可以把<font color='red'>数组想象成这个队伍</font>，因为<font color='red'>数组也有长度</font>，也有<font color='red'>顺序</font>并且数组中的每个元素也有<font color='red'>序号</font>。</p>
<p><img src="https://i.loli.net/2020/08/06/VaojGhHTAlZcWsC.png" alt=""></p>
<center style="font-size:15px;color:#C0C0C0;">图1</center>

<h4 id="5-3-2-数组长度"><a href="#5-3-2-数组长度" class="headerlink" title="5.3.2 数组长度"></a>5.3.2 数组长度</h4><p>数组长度：表示数组中元素的个数，通过数组的  length  属性来获取。</p>
<p><code>let foods: string[] = [&#39;煎饼&#39;, &#39;馒头&#39;, &#39;米饭&#39;]</code></p>
<p>获取数组长度：</p>
<p><code>console.log(foods.length) // 3</code></p>
<h4 id="5-3-3-数组索引"><a href="#5-3-3-数组索引" class="headerlink" title="5.3.3 数组索引"></a>5.3.3 数组索引</h4><p>数组中的每个元素都有自己的序号。</p>
<p>我们把数组中元素的序号，称为：索引（下标），数组中的元素与索引一一对应。</p>
<p>注意：<strong>数组索引是从 0 开始的。</strong></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foods: <span class="built_in">string</span>[] = [<span class="string">&#x27;煎饼&#x27;</span>, <span class="string">&#x27;馒头&#x27;</span>, <span class="string">&#x27;米饭&#x27;</span>]</span><br><span class="line"><span class="comment">// 数组的索引分别为：       0       1      2 </span></span><br></pre></td></tr></table></figure>

<p>问题：该数组的长度（ length ）和最大索引之间有什么关系？ 最大索引为： length - 1</p>
<p>总结：</p>
<p>数组是有序的集合，用来存储多个数据。</p>
<p>问题1：如何获取数组长度？   foods.length</p>
<p>问题2：数组索引是从几开始的？  索引从 0 0 开始</p>
<h3 id="5-4、取值与存值"><a href="#5-4、取值与存值" class="headerlink" title="5.4、取值与存值"></a>5.4、取值与存值</h3><h4 id="5-4-1-取值"><a href="#5-4-1-取值" class="headerlink" title="5.4.1 取值"></a>5.4.1 取值</h4><p>从数组中，获取到某一个元素的值，就是从数组中取值。（比如，获取最爱的食物 – 煎饼）</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foods: <span class="built_in">string</span>[] = [<span class="string">&#x27;煎饼&#x27;</span>, <span class="string">&#x27;馒头&#x27;</span>, <span class="string">&#x27;米饭&#x27;</span>]</span><br><span class="line"><span class="comment">// 数组的索引分别为：       0      1       2 </span></span><br></pre></td></tr></table></figure>

<p>数组中的元素与索引是 一 一 对应的，<strong>通过索引获取到某一个元素的值</strong>。<br>语法：<br><code>数组名称[索引]</code><br>比如，获取到最爱的食物 – 煎饼：</p>
<p><code>console.log(foods[0]) // 煎饼</code></p>
<h4 id="5-4-2-存值"><a href="#5-4-2-存值" class="headerlink" title="5.4.2 存值"></a>5.4.2 存值</h4><p>如果要修改数组中某个元素的值，就要使用数组存值。（比如，不爱吃馒头，将馒头替换为包子）</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foods: <span class="built_in">string</span>[] = [<span class="string">&#x27;煎饼&#x27;</span>, <span class="string">&#x27;馒头&#x27;</span>, <span class="string">&#x27;米饭&#x27;</span>]</span><br><span class="line"><span class="comment">// 数组的索引分别为：       0      1       2 </span></span><br></pre></td></tr></table></figure>

<p>技巧：先获取到要修改的元素，然后，再存值。<br>语法：</p>
<p><code>数组名称[索引] = 新值</code></p>
<p>比如，将馒头替换为包子：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">foods[<span class="number">1</span>] = <span class="string">&#x27;包子&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(foods) <span class="comment">// [&#x27;煎饼&#x27;, &#x27;包子&#x27;, &#x27;米饭&#x27;]</span></span><br></pre></td></tr></table></figure>

<h4 id="5-4-3-添加元素"><a href="#5-4-3-添加元素" class="headerlink" title="5.4.3 添加元素"></a>5.4.3 添加元素</h4><p>存值的语法是：数组名称[ 索引] = 新值，根据索引是否存在，有两种功能：1 修改元素 2 添加元素。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foods: <span class="built_in">string</span>[] = [<span class="string">&#x27;煎饼&#x27;</span>, <span class="string">&#x27;馒头&#x27;</span>, <span class="string">&#x27;米饭&#x27;</span>]</span><br><span class="line"><span class="comment">// 数组的索引分别为：       0      1       2 </span></span><br></pre></td></tr></table></figure>
<ol>
<li><p>如果索引存在，就表示：修改元素。<br> <code>foods[1] = &#39;包子&#39;</code></p>
</li>
<li><p>如果索引不存在，就表示：添加元素。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">foods[<span class="number">3</span> <span class="number">3</span>] = <span class="string">&#x27;油泼面&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(foods) <span class="comment">// [&#x27;煎饼&#x27;, &#x27;馒头&#x27;, &#x27;米饭&#x27;, &#x27; 油泼面&#x27;]</span></span><br></pre></td></tr></table></figure>

<p>添加元素的通用写法：数组名称[数组长度] = 新值</p>
</li>
</ol>
<h5 id="2-push-添加元素"><a href="#2-push-添加元素" class="headerlink" title="2. push-添加元素"></a>2. push-添加元素</h5><ol start="2">
<li><p>push 方法：添加元素（在数组最后一项元素的后面添加）。</p>
<p><code>songs.push(&#39;痒&#39;)</code></p>
<p>原来的方式：使用数组长度作为索引</p>
<p><code>songs[songs.length] = &#39;痒&#39; // =&gt; songs[3] = &#39;痒&#39;</code></p>
<p>2.1 也可以查文档来学习</p>
<ul>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/push">push</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> animals = [<span class="string">&#x27;pigs&#x27;</span>, <span class="string">&#x27;goats&#x27;</span>, <span class="string">&#x27;sheep&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> count = animals.push(<span class="string">&#x27;cows&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(count);</span><br><span class="line"><span class="comment">// expected output: 4</span></span><br><span class="line"><span class="built_in">console</span>.log(animals);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;]</span></span><br><span class="line"></span><br><span class="line">animals.push(<span class="string">&#x27;chickens&#x27;</span>, <span class="string">&#x27;cats&#x27;</span>, <span class="string">&#x27;dogs&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(animals);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;, &quot;chickens&quot;, &quot;cats&quot;, &quot;dogs&quot;]</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<ul>
<li><p>解惑：</p>
<ul>
<li>const 表示常量，常量不能重新赋值；let 是变量，可以在后面二次赋值；</li>
</ul>
</li>
</ul>
<p>   2.2 练习：</p>
<ul>
<li><pre><code class="typescript"><span class="keyword">let</span> songs: <span class="built_in">string</span>[] = [<span class="string">'五环之歌'</span>, <span class="string">'探清水河'</span>, <span class="string">'晴天'</span>]
songs.push(<span class="string">'样'</span>)
<span class="built_in">console</span>.log(songs)
&lt;!--hexoPostRenderEscape:&lt;figure <span class="keyword">class</span>=<span class="string">"highlight xquery"</span>&gt;&lt;table&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>=<span class="string">"gutter"</span>&gt;&lt;pre&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">1</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">3</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">5</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">7</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">9</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;/</span>pre&gt;&lt;<span class="regexp">/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;+ 如果要接受到push返回的数组长度，需要用一个量来接收；&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;  <span class="string">``</span><span class="string">`typescript&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  &lt;span class="keyword"&gt;let&lt;/span&gt; songs:&lt;span class="built_in"&gt; string&lt;/span&gt;[] = [&lt;span class="string"&gt;&amp;#x27;五环之歌&amp;#x27;&lt;/span&gt;, &lt;span class="string"&gt;&amp;#x27;探清水河&amp;#x27;&lt;/span&gt;, &lt;span class="string"&gt;&amp;#x27;晴天&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  &lt;span class="keyword"&gt;let&lt;/span&gt; len:&lt;span class="built_in"&gt; number&lt;/span&gt; = songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  console.log(songs, len)&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  // 也许&lt;span class="keyword"&gt;let&lt;/span&gt; len:&lt;span class="built_in"&gt; number&lt;/span&gt; = songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;) 看着不顺眼;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  // 但确实执行了songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</span>
<span class="string"></span></code></pre>
</li>
</ul>
<hr>
<h4 id="5-4-4-删除元素"><a href="#5-4-4-删除元素" class="headerlink" title="5.4.4 删除元素"></a>5.4.4 删除元素</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">MDN文档介绍</a></p>
<ol>
<li>概述</li>
</ol>
<p><code>pop</code> 方法从一个数组中删除并返回最后一个元素。</p>
<p><code>pop</code> 方法有意具有通用性。该方法和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call"><code>call()</code></a> 或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"><code>apply()</code></a> 一起使用时，可应用在类似数组的对象上。<code>pop</code>方法根据 <code>length</code>属性来确定最后一个元素的位置。如果不包含<code>length</code>属性或<code>length</code>属性不能被转成一个数值，会将<code>length</code>置为0，并返回<code>undefined</code>。</p>
<p>如果你在一个空数组上调用 pop()，它返回  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined"><code>undefined</code></a>。</p>
<ol start="2">
<li><p>示例</p>
<p>例子: 删除掉数组的最后一个元素</p>
</li>
</ol>
<p>下面的代码首先创建了一个拥有四个元素的数组 myFish，然后删除掉它的最后一个元素。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> myFish = [<span class="string">&quot;angel&quot;</span>, <span class="string">&quot;clown&quot;</span>, <span class="string">&quot;mandarin&quot;</span>, <span class="string">&quot;surgeon&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> popped = myFish.pop();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(myFish); </span><br><span class="line"><span class="comment">// [&quot;angel&quot;, &quot;clown&quot;, &quot;mandarin&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(popped); </span><br><span class="line"><span class="comment">// surgeon</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>问题<br>这个方法不能删除指定的元素；<h5 id="2-删除指定元素"><a href="#2-删除指定元素" class="headerlink" title="2. 删除指定元素"></a>2. 删除指定元素</h5></li>
</ol>
<p><a href="https://www.tnblog.net/Shangjin123/article/details/3492">https://www.tnblog.net/Shangjin123/article/details/3492</a></p>
<p>删除数组中指定的元素，原理上是不能直接删除指定的元素 要是可以直接删除的话绝对又bug 但是可以灵活的应用。</p>
<p><strong>自定义函数删除</strong>：只适用在js，如果想在ts里搞这种类似的写法 自己去写 </p>
<p>首先可以给JS的数组对象定义一个函数，用于查找指定的元素在数组中的位置，即索引，代码为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.length; i++) &#123; </span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span>[i] == val) <span class="keyword">return</span> i; </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>

<p>然后使用通过得到这个元素的索引，使用js数组自己固有的函数去删除这个元素：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.remove = <span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> index = <span class="built_in">this</span>.indexOf(val); </span><br><span class="line">  <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123; </span><br><span class="line">  <span class="built_in">this</span>.splice(index, <span class="number">1</span>); </span><br><span class="line">  &#125; </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>

<p>这样就构造了这样一个自定义的函数，好像有点装逼含量，比如我有有一个数组：</p>
<p>var emp = [‘abs’,’dsf’,’sdf’,’fd’];</p>
<p>假如我们要删除其中的 ‘fd’ ,就可以使用：</p>
<p>emp.remove(‘fd’);</p>
<p>输出结果：console.log(emp)</p>
<p>[‘abs’,’dsf’,’sdf’]</p>
<p>ok 被删求掉了</p>
<p><strong>splice删除</strong>：js或ts都可以</p>
<p>var arr=new Array(“aa”,”bb”,”cc”,”dd”,”ee”,”ff”,”gg”);</p>
<p>console.log(“原数组”,arr);//<strong>[“aa”, “bb”, “cc”, “dd”, “ee”, “ff”, “gg”]</strong></p>
<p>console.log(“找到指定元素的下标”arr.indexOf(“ff”));//5</p>
<p>arr.splice(arr.indexOf(“ff”),1);//后边的1代表删除这个位置开始删除1一个元素</p>
<p>console.log(“删除后”,arr);console.log(“删除后”,arr);//[“aa”, “bb”, “cc”, “dd”, “ee”, “gg”]</p>
<p>然后指定元素ff就被删求掉了撒 我的天啊 这种方法困扰了我一个下午</p>
<hr>
<h3 id="5-5-遍历数组"><a href="#5-5-遍历数组" class="headerlink" title="5.5 遍历数组"></a>5.5 遍历数组</h3><p>遍历数组，也就是把数组中的所有元素挨个获取一次（比如，计算数组中所有数字的和）。</p>
<p><code>let nums: number[] = [100, 200, 300]</code></p>
<p>通过数组取值的方式，就可以一个个取出来：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(nums[<span class="number">0</span>]) <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">console</span>.log(nums[<span class="number">1</span>]) <span class="comment">// 200</span></span><br><span class="line"><span class="built_in">console</span>.log(nums[<span class="number">2</span>]) <span class="comment">// 300</span></span><br></pre></td></tr></table></figure>

<p>存在问题：太繁琐，相似的代码重复多次。</p>
<p>重复做某件事情，可以使用  for 循环。<br>重复取值的规律：索引号自增（每次加1 ），而  for 循环的计数器i i也是自增的。</p>
<p>推荐，使用 for 循环遍历数组：</p>
<p>for (let i: number = ?; i &lt;= ? ; i++) {<br>console.log(nums[i])<br>}</p>
<p>这里的 ？ 应该怎么填呢？</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span> <span class="number">0</span>; i &lt;= nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(nums[i i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意1：因为数组索引是从0 0开始的，所以计数器i i的默认值为0 0。<br>注意2：应该根据数组长度来计算，公式为数组长度减一，也就是：nums.length – 1（最大索引）。<br>优势：不管数组中元素的数量怎么变化，for循环的判断条件不需要改动。</p>
<p>简化判断条件（计数器i的值为整数，所以， i&lt;=2 与  i&lt;3 作用相同）：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(nums[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结：<br>遍历数组，也就是把数组中的所有元素挨个获取一次。<br>问题1：如果要遍历数组应该使用什么语句？   for 循环语句<br>问题2：for循环计数器的默认值是多少？    默认值为： 0</p>
<p>问题3：for循环的判断条件是什么？  i &lt; nums.length</p>
<h3 id="5-6-数组练习"><a href="#5-6-数组练习" class="headerlink" title="5.6 数组练习"></a>5.6 数组练习</h3><h4 id="5-6-1-求数组中所有元素的和"><a href="#5-6-1-求数组中所有元素的和" class="headerlink" title="5.6.1 求数组中所有元素的和"></a>5.6.1 求数组中所有元素的和</h4><p>例如：[200,20,3]</p>
<p>思路：</p>
<ol>
<li>准备一个变量来存储和（sum）</li>
<li>使用for循环遍历数组，拿到数组中的每一个元素</li>
<li>在for循环中让sum+=数组的每一个元素</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums: <span class="built_in">number</span>[] = [<span class="number">200</span>,<span class="number">30</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">// 思路：</span></span><br><span class="line"><span class="comment">// 1. 准备一个变量来存储和（sum）</span></span><br><span class="line"><span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"><span class="comment">// 2. 使用for循环遍历数组，拿到数组中的每一个元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class="line">    sum += nums[i]</span><br><span class="line">    <span class="comment">// nums[i]拿到每一个元素，每循环一次，拿到一个新元素，从索引0开始</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3. 在for循环中让sum+=数组的每一个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(sum)</span><br><span class="line"><span class="comment">// 打印值</span></span><br></pre></td></tr></table></figure>

<p>无注释版：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums: <span class="built_in">number</span>[] = [<span class="number">200</span>,<span class="number">30</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class="line">    sum += nums[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum)</span><br></pre></td></tr></table></figure>



<hr>
<h4 id="5-6-2-找出数组中最大的数"><a href="#5-6-2-找出数组中最大的数" class="headerlink" title="5.6.2-找出数组中最大的数"></a>5.6.2-找出数组中最大的数</h4><p>视频教学：<a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=67">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=67</a></p>
<p>例如：[1,9,3]</p>
<p>思路：</p>
<ol>
<li>创建变量max，来存储最大值</li>
<li>假设数组中的第一个元素为最大值，作为max的默认值</li>
<li>用for循环遍历数组，获取到数组中的每一个元素</li>
<li>在for循环中，判断每一个元素是否大于max</li>
<li>如果大于，就把该元素存储到max中（max一直都是最大值）</li>
<li>如果小于或等于，不做任何处理（因为找的是最大值）</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums1: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">9</span>,<span class="number">3</span>]</span><br><span class="line"><span class="comment">// 1. 创建变量max，来存储最大值</span></span><br><span class="line"><span class="comment">// 2. 假设数组中的第一个元素为最大值，作为max的默认值</span></span><br><span class="line"><span class="keyword">let</span> max: <span class="built_in">number</span> = num1[<span class="number">0</span>]</span><br><span class="line"><span class="comment">// 3. 用for循环遍历数组，获取到数组中的每一个元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">1</span>; i&lt;nums1.length; i++)&#123;</span><br><span class="line">    <span class="comment">// 4. 在for循环中，判断每一个元素是否大于max</span></span><br><span class="line">    <span class="comment">// 5. 如果大于，就把该元素存储到max中（max一直都是最大值）</span></span><br><span class="line">    <span class="comment">// 6. 如果小于或等于，不做任何处理（因为找的是最大值）</span></span><br><span class="line">    <span class="comment">// 当前环境，已经把num1[0]使用，所以i可以从1开始，而不是0，当仅限一定条件下</span></span><br><span class="line">    <span class="keyword">if</span>(nums1[i] &gt; max)&#123;</span><br><span class="line">        max = nums1[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(max)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>没有注释版本：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums1: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">9</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> max: <span class="built_in">number</span> = num1[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">1</span>; i&lt;nums1.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums1[i] &gt; max)&#123;</span><br><span class="line">        max = nums1[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(max)</span><br></pre></td></tr></table></figure>

<p><strong>思路是编程的基础之一，它非常重要，能让你下笔</strong></p>
<hr>
<h4 id="5-6-3-找出数组中所有不为x的元素，放到一个新的数组中"><a href="#5-6-3-找出数组中所有不为x的元素，放到一个新的数组中" class="headerlink" title="5.6.3 找出数组中所有不为x的元素，放到一个新的数组中"></a>5.6.3 找出数组中所有不为x的元素，放到一个新的数组中</h4><p> 例如：</p>
<p>找出数组中所有不为0的元素，放到一个新的数组中</p>
<p>[1,3,0,10,33,0,0,6] </p>
<p>思路：</p>
<ol>
<li>创建一个新数组（newArr），存储不为0的元素</li>
<li>使用for循环遍历数组，拿到数组中的每一个元素</li>
<li>在for循环中判断每一个元素是否为0</li>
<li>如果不为0，那么，将该元素存储到新数组中</li>
<li>如果为0，就不做任何处理  </li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums2: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">33</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>]</span><br><span class="line"><span class="comment">// 1. 创建一个新数组（newArr），存储不为0的元素</span></span><br><span class="line"><span class="keyword">let</span> newArr: <span class="built_in">number</span>[] = []</span><br><span class="line"><span class="comment">// 2. 使用for循环遍历数组，拿到数组中的每一个元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">1</span>; i&lt;nums2.length; i++)&#123;</span><br><span class="line">    <span class="comment">// 3. 在for循环中判断每一个元素是否为0</span></span><br><span class="line">    <span class="keyword">if</span>(nums2[i] !== <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 4. 如果不为0，那么，将该元素存储到新数组中</span></span><br><span class="line">        newArr[newArr.length] = nums2[i]</span><br><span class="line">        <span class="comment">// 说明：当newArr为空数组时，里面啥数据都没有，它的长度为0和第一个索引0是一样的。但当有一个数据时，比如，这里nums2[i]=1，不为0。马上要存入数组newArr，存进去后，长度变为了1，但数据1对应的索引还是0，而这时长度已经是1了，新的数据存入的位置是索引1。没问题。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 5. 如果为0，就不做任何处理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newArr)</span><br></pre></td></tr></table></figure>

<p>没有注释版：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums2: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">33</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>]</span><br><span class="line"><span class="keyword">let</span> newArr: <span class="built_in">number</span>[] = []</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">1</span>; i&lt;nums2.length; i++)&#123;    </span><br><span class="line">    <span class="keyword">if</span>(nums2[i] !== <span class="number">0</span>)&#123;        </span><br><span class="line">        newArr[newArr.length] = nums2[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newArr)</span><br></pre></td></tr></table></figure>

<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=55">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=55</a></p>
<hr>
<h2 id="6-函数基础"><a href="#6-函数基础" class="headerlink" title="6. 函数基础"></a>6. 函数基础</h2><h3 id="6-1-函数概述"><a href="#6-1-函数概述" class="headerlink" title="6.1 函数概述"></a>6.1 函数概述</h3><ol>
<li><p>需求： 计算数组nums中所有元素的和。</p>
<p><code>let nums: number[] = [1, 3, 5]</code> </p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">sum += nums[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum)</span><br></pre></td></tr></table></figure>


</li>
</ol>
<p>   问题：如果还要计算其他数组（nums2）中所有元素的和呢？ 拷贝一份代码，修改吗？</p>
<p>   例如num2</p>
<p>   <code>let nums2: number[] = [2, 4, 6]</code>  </p>
<p>   存在的问题：相似的代码重复写，代码冗余。[^冗]</p>
<ol start="2">
<li><p>正确的姿势：使用函数来包装（封装）相似的代码，在需要的时候调用函数，相似的代码不再重复写。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">nums: <span class="built_in">number</span>[]</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">    sum += nums[i]</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">console</span>.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">getSum(nums1) <span class="comment">// 计算nums1中所有元素的和</span></span><br><span class="line">getSum(nums2) <span class="comment">// 计算nums2中所有元素的和</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<p>所谓函数，就是声明一次但却可以调用任意多次的一段代码。<br>封装：将一段代码包装起来，隐藏细节。<br><strong>意义：实现代码 复用，提升开发效率</strong>。</p>
<hr>
<h3 id="6-2-函数的使用"><a href="#6-2-函数的使用" class="headerlink" title="6.2 函数的使用"></a>6.2 函数的使用</h3><p>函数的使用分为两步：1 声明函数 2 调用函数 （类比变量）。</p>
<ul>
<li>第一步：声明函数</li>
</ul>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名称(<span class="params"></span>) </span>&#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  解释：</p>
<p>​        函数名称：推荐以动词开头，因为函数表示做一件事情，实现一个功能。</p>
<p>​        函数体：表示要实现功能的代码，复用的代码。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;五环之歌&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用 song( )也是可以的，但就是建议用动词，表示在动在做。</p>
<p>嗯，我有感觉，我信他；</p>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?t=5&amp;p=71">https://www.bilibili.com/video/BV1UD4y1m7Gw?t=5&amp;p=71</a>  2min07s</p>
<ul>
<li><p>第二步：调用函数</p>
<p><code>函数名称()</code></p>
<p>比如，调用sing函数：</p>
<p><code>sing()</code></p>
<p>注意：只有调用函数后，函数中的代码才会执行。</p>
<ul>
<li><p>如果没有调用就不会使用函数；例如：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;五环之歌&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ts-node xxx(文件名)是打印不出 五环的；</p>
<p>得加上<code>sing()</code>才有用；</p>
</li>
</ul>
</li>
<li><p>总结</p>
<ol>
<li>函数的基本使用分为哪两步？   1 声明函数 2 调用函数</li>
<li>声明函数的关键字是什么？    function</li>
<li>不调用函数，函数中的代码会执行吗？   不会</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1 声明函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;五环之歌&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2 调用函数</span></span><br><span class="line">sing()</span><br></pre></td></tr></table></figure>

</li>
</ul>
<hr>
<h4 id="6-2-1-函数使用练习"><a href="#6-2-1-函数使用练习" class="headerlink" title="6.2.1 函数使用练习"></a>6.2.1 函数使用练习</h4><ol>
<li><p>创建一个函数sum，计算两个变量num1、num2的和（比如：10和20）</p>
<p>思路：</p>
<p>创建函数sum</p>
<p>在函数体中，计算两个变量num1、num2的和</p>
<p>调用函数sum</p>
</li>
<li><p>编写</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建函数sum</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//在函数体中，计算两个变量num1、num2的和</span></span><br><span class="line">    <span class="keyword">let</span> num1: <span class="built_in">number</span> = <span class="number">10</span></span><br><span class="line">    <span class="keyword">let</span> num2: <span class="built_in">number</span> = <span class="number">20</span></span><br><span class="line">    <span class="keyword">let</span> result: <span class="built_in">number</span> = num1 + num2</span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数sum</span></span><br><span class="line">sum()</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：在typescript中没句结尾可以不写”；“，但是在javascript中要严格写；  </p>
</li>
</ol>
<hr>
<h3 id="6-3-函数参数"><a href="#6-3-函数参数" class="headerlink" title="6.3 函数参数"></a>6.3 函数参数</h3><h4 id="6-3-1-概述"><a href="#6-3-1-概述" class="headerlink" title="6.3.1 概述"></a>6.3.1 概述</h4><ol>
<li><p>需求：让唱歌的函数（sing），每次调用时，“唱”不同的歌。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;五环之歌&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">sing() <span class="comment">// 五环之歌</span></span><br><span class="line">sing() <span class="comment">// 五环之歌</span></span><br></pre></td></tr></table></figure>

<p>存在的问题：函数（sing）只能“唱”固定的歌，太死板，没有体现出函数复用的灵活性。</p>
<p>原因：函数（sing）中歌曲名称是固定值。</p>
<hr>
<p>怎么才能唱不同的歌呢？</p>
</li>
<li><p>使用<font color='red'>函数参数</font>来实现</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用函数时，告诉函数要唱的歌曲名称</span></span><br><span class="line">sing(<span class="string">&#x27;五环之歌&#x27;</span>)</span><br><span class="line">sing(<span class="string">&#x27;探清水河&#x27;</span>)</span><br><span class="line"><span class="comment">// 声明函数时，接收传入的歌曲名称</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params">songName: <span class="built_in">string</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(songName)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>五环之歌就变成了songName，应该是说 五环之歌 传入了 songName;(emmm)</p>
<p>函数（sing）中歌曲名称：固定值→动态传入的值。<br>函数参数的作用：增加了函数的灵活性、通用性，针对相同的功能，能够适应更多的数据（值）。</p>
</li>
</ol>
<hr>
<h4 id="6-3-2-形参与实参"><a href="#6-3-2-形参与实参" class="headerlink" title="6.3.2 形参与实参"></a>6.3.2 形参与实参</h4><p>函数参数分为两部分：1 形参 2 实参。</p>
<ol>
<li><p><font color='red'>形参</font>：声明函数时指定的参数，放在声明函数的小括号中（挖坑）。</p>
<p><code>function sing(songName: string) &#123; &#125;</code></p>
<p><font color='red'>songName: string</font></p>
<ul>
<li><p>语法：形参名称: 类型注解，类似于变量声明，但是没有赋值。</p>
<blockquote>
<p>估计在js里面，形参的语法，就只有一个形参名称</p>
</blockquote>
</li>
<li><p>作用：指定函数可接收的数据。</p>
</li>
</ul>
<p>然后，就可以在函数体中，像使用变量一样使用形参了。</p>
</li>
<li><p>实参：调用函数时传入的参数，放在调用函数的小括号中（填坑）。</p>
<p><code>sing(&#39;五环之歌&#39;)</code>      五环之歌</p>
<ul>
<li>实参是一个具体的值（比如：‘字符串’、18、[]等），用来赋值给形参。</li>
</ul>
</li>
<li><p>总结</p>
<ul>
<li><p>声明函数时的参数，叫什么？作用？     形参，指定函数能够接收什么数据。</p>
</li>
<li><p>调用函数时的参数，叫什么？作用？    实参，是一个具体的值，用来赋值给形参。</p>
<p><code>function sing(songName: string) &#123; &#125;</code></p>
<p><code>sing(&#39;五环之歌&#39;)</code></p>
<p>通过形参和实参的配合，函数可以接收动态数据，从而让函数变得更加灵活、强大。</p>
</li>
</ul>
</li>
</ol>
<hr>
<h4 id="6-3-3-其他说明"><a href="#6-3-3-其他说明" class="headerlink" title="6.3.3 其他说明"></a>6.3.3 其他说明</h4><ol>
<li><p>根据具体的功能，函数参数可以有多个，参数之间使用逗号（,）来分隔。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>) </span>&#123; &#125;</span><br><span class="line">fn(<span class="string">&#x27;刘老师&#x27;</span>, <span class="number">18</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p><font color='red'>实参和形参按照顺序，一一对应。</font></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">name: <span class="built_in">string</span>, age: <span class="built_in">number</span></span>) </span>&#123; &#125;</span><br><span class="line">fn(<span class="string">&#x27;刘老师&#x27;</span>, <span class="number">18</span>) <span class="comment">// name -&gt; &#x27;刘老师&#x27;, age -&gt; 18</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/06/c67WbDSoVgYdUCz.png" alt="图一"></p>
<center style="font-size:15px;color:#C0C0C0;">图1</center>
</li>
<li><p>实参必须符合形参的类型要求，否则会报错！</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span>(<span class="params">songName: <span class="built_in">string</span></span>) </span>&#123;&#125;</span><br><span class="line">sing(<span class="number">18</span>) <span class="comment">// 报错！ 形参要求是 string 类型，但是，实参是 number 类型。</span></span><br></pre></td></tr></table></figure>

<p>技巧：调用函数时，鼠标放在函数名称上，会显示该函数的参数以及类型。</p>
</li>
</ol>
<hr>
<h4 id="6-3-4-总结"><a href="#6-3-4-总结" class="headerlink" title="6.3.4 总结"></a>6.3.4 总结</h4><ul>
<li><p>函数形参是 string 类型，调用该函数时传入 18 对吗？    不对，因为实参不符合形参的类型要求</p>
</li>
<li><p>函数有多个参数时，多个参数之间用什么符号分隔？   逗号</p>
</li>
<li><p>以下代码会报错吗？</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span><span class="params">(songName: <span class="keyword">string</span>)</span> <span class="comment">&#123; &#125;</span></span></span><br><span class="line"><span class="function"><span class="title">sing</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>

<p>报错！因为函数sing要求有一个参数，但是没有传</p>
</li>
</ul>
<hr>
<h4 id="6-3-5-函数参数练习"><a href="#6-3-5-函数参数练习" class="headerlink" title="6.3.5 函数参数练习"></a>6.3.5 函数参数练习</h4><ol>
<li>改造函数（sum），实现计算任意两个数字的和</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 改造函数（sum），实现计算任意两个数字的和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> num1: <span class="built_in">number</span> = <span class="number">10</span></span><br><span class="line">    <span class="keyword">let</span> num2: <span class="built_in">number</span> = <span class="number">20</span></span><br><span class="line">    <span class="keyword">let</span> result: <span class="built_in">number</span> = num1 + num2</span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">&#125;</span><br><span class="line">sum()</span><br><span class="line">sum()</span><br></pre></td></tr></table></figure>

<p>这个函数写死，只能得出30，如何改造？</p>
<ul>
<li>这个时候就要使用函数参数了</li>
<li>在sum里面设置参数：funtion sum(num1: number, num2: number){}</li>
<li>计算哪两个数的和，由你的实参决定。例如：sum(88,99)</li>
</ul>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result: <span class="built_in">number</span> = num1+num2</span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">&#125;</span><br><span class="line">sum(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">sum(<span class="number">1</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure>



<ol start="2">
<li><p>第二个练习：</p>
<p>封装函数（getsum），计算任意数组中所有元素的和。</p>
<p>说明：数组中的元素为数值类型</p>
<p>比如：let nums1: number[ ] = [1, 3, 5]</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">getsum</span>(<span class="params">nums1: <span class="built_in">number</span>[]</span>)</span>&#123;</span><br><span class="line">       <span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i&lt;nums1.length; i++)&#123;</span><br><span class="line">       sum += nums1[i]</span><br><span class="line">    &#125;</span><br><span class="line">       <span class="built_in">console</span>.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">   getsum([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br><span class="line">   getsum([<span class="number">10</span>, <span class="number">30</span>, <span class="number">50</span>])</span><br><span class="line">   <span class="comment">// 直接把数组作为实参是可以的，视频原话</span></span><br></pre></td></tr></table></figure>

<p>结合5.6.1来看，就能体会到，函数的感觉，封装的感觉；</p>
<p>于普通的 求数组和相比</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums:<span class="built_in"> number</span>[] = [<span class="number">200</span>,<span class="number">30</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span><span class="built_in"> sum</span>:<span class="built_in"> number</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i:<span class="built_in"> number</span> = <span class="number">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class="line">   <span class="built_in"> sum</span> += nums[i]</span><br><span class="line">&#125;</span><br><span class="line">console.log<span class="built_in">(sum</span>)</span><br></pre></td></tr></table></figure>

<p>只多了，function，形参，实参。理解”封装”2字，即可完成函数；2020-8-3 09:23:40</p>
</li>
</ol>
<hr>
<h3 id="6-4-函数返回值"><a href="#6-4-函数返回值" class="headerlink" title="6.4 函数返回值"></a>6.4 函数返回值</h3><h4 id="6-4-1-概述"><a href="#6-4-1-概述" class="headerlink" title="6.4.1 概述"></a>6.4.1 概述</h4><p>函数返回值的作用：将函数内部计算的结果返回，以便于使用该结果继续参与其他的计算。<br>需求：计算以下两次调用结果的和。</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">getSum</span>([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]) // <span class="number">9</span></span><br><span class="line"><span class="attribute">getSum</span>([<span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>]) // <span class="number">1110</span></span><br><span class="line"><span class="attribute">getSum</span>([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>]) + getSum([<span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>]) // <span class="number">9</span> + <span class="number">1110</span> =&gt; <span class="number">1119</span></span><br></pre></td></tr></table></figure>

<p>但是：</p>
<p><img src="https://note.youdao.com/yws/public/resource/23eefae7798f03b72803fd5849e1f53d/xmlnote/6C226AB01EF24C5D8935A5130B4D378E/39708" alt="报错"></p>
<p>getSum([1, 3, 5]) + getSum([10, 100, 1000])  是要报错的；</p>
<p>关键点：拿到函数（getSum）内部计算出来的结果，然后，才能进行后续的加法计算。<br>注意：如果没有指定函数的返回值，那么，函数返回值的默认类型为  [^void]（空，什么都没有）。</p>
<hr>
<h4 id="6-4-2-基本使用"><a href="#6-4-2-基本使用" class="headerlink" title="6.4.2 基本使用"></a>6.4.2 基本使用</h4><p>步骤：1 指定返回值类型 2 指定返回值</p>
<ol>
<li><p>指定返回值类型</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>): 类型注解 </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>在声明函数的小括号后面，通过 : <font color="red">类型注解</font> 指定。</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span><span class="params">()</span>: number </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>指定返回值</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>): 类型注解 </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>在函数体中，使用 <font color="red"> return </font>关键字来返回函数执行的结果。</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span><span class="params">()</span>: number </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>注意：返回值必须符合返回值类型的类型要求，否则会报错！</li>
</ul>
</li>
</ul>
</li>
</ol>
<hr>
<ol>
<li>使用变量接收函数返回值</li>
</ol>
<figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">let</span> <span class="variable"><span class="class">result</span></span>: 类型注解 = <span class="function"><span class="title">fn</span>()</span></span><br></pre></td></tr></table></figure>

<p>​    使用变量接收函数返回值的时候，相当于：直接将返回值赋值给变量。</p>
<p>​    <code>let result: number = 18</code></p>
<p>​    注意：变量（result）的类型与函数（fn）的返回值类型要一致。</p>
<p>​    然后，就可以使用这个变量（返回值），继续进行其他计算了。</p>
<p>实验：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>): <span class="title">number</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result: <span class="built_in">number</span> = fn()</span><br><span class="line"><span class="built_in">console</span>.log(result)</span><br></pre></td></tr></table></figure>

<p>let result: number = fn()  约等于  let result: number = 18</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">// 进行其他计算</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">result</span> * <span class="number">10</span>)</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">result</span> / <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 看到这，我有点明白了，这个返回值，似乎是给函数名称赋值似的。</p>
</blockquote>
<blockquote>
<p>也就是说，正常情况下，函数名称没有值，封装封装，哦，一般情况下它只是一个包装。含义在里面包装本身没多少意思；</p>
</blockquote>
<blockquote>
<p>但有时，需要包装有意思，人们用包装名词代替某个意思，交流更方便。2020-8-3 10:14:38</p>
</blockquote>
<ol start="2">
<li><p>直接使用函数调用的结果（返回值），进行其他计算</p>
<p><code>console.log( fn() * 10 )</code></p>
<p>不需要变量去接收，直接调用函数。（视频原话）</p>
<blockquote>
<p>调用函数，而不是 使用函数名称么，emmm。</p>
</blockquote>
</li>
</ol>
<hr>
<p>总结：</p>
<ul>
<li><p>使用哪个关键字来指定返回值？    return</p>
</li>
<li><p>以下代码是否正确？</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span>: string </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>错误，返回值18不符合返回值类型string的要求</p>
</li>
<li><p>如果函数（getSum）返回了数组中所有元素的和，以下代码表示什么？</p>
<p><code>getSum([1, 3, 5]) + getSum([10, 100, 1000])</code></p>
<p>表示：计算两个结果的和</p>
</li>
</ul>
<hr>
<h4 id="6-4-3-函数返回值练习"><a href="#6-4-3-函数返回值练习" class="headerlink" title="6.4.3 函数返回值练习"></a>6.4.3 函数返回值练习</h4><h5 id="3-1-计算数组中所有元素的和并返回"><a href="#3-1-计算数组中所有元素的和并返回" class="headerlink" title="3.1 计算数组中所有元素的和并返回"></a>3.1 计算数组中所有元素的和并返回</h5><ol>
<li><p>改造函数（getSum），计算数组中所有元素的和并返回</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">nums: <span class="built_in">number</span>[]</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class="line">        sum +=nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">getSum([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br></pre></td></tr></table></figure>

<p>改造：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params">nums: <span class="built_in">number</span>[]</span>): <span class="title">number</span></span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sum: <span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i:<span class="built_in">number</span> = <span class="number">0</span>; i&lt;nums.length; i++)&#123;</span><br><span class="line">        sum +=nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(sum)</span></span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> res: <span class="built_in">number</span> = getSum([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br><span class="line"><span class="comment">// 难道不return,这里的 res就得不到getSum([1, 3, 5])的值吗？</span></span><br><span class="line"><span class="built_in">console</span>.log(res)</span><br><span class="line"><span class="comment">// 其他运算也没问题</span></span><br><span class="line"><span class="built_in">console</span>.log(res - <span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>难道不return,这里的 res就得不到getSum([1, 3, 5])的值吗？</p>
</li>
<li><p>实验：</p>
<p>光是取消 return sum，在上面的number会报错；</p>
<p><img src="https://note.youdao.com/yws/public/resource/23eefae7798f03b72803fd5849e1f53d/xmlnote/AF452FD059F947CF8080A0D64FFDB9A6/39716" alt="报错"></p>
<p>那么把声明返回类型也取消；</p>
<figure class="highlight irpf90"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span></span> getSum(nums: <span class="keyword">number</span>[])&#123;</span><br><span class="line">    let <span class="built_in">sum</span>: <span class="keyword">number</span> = <span class="number">0</span></span><br><span class="line">    for(let i:<span class="keyword">number</span> = <span class="number">0</span>; i&lt;nums<span class="number">.</span>length; i++)&#123;</span><br><span class="line">        <span class="built_in">sum</span> +=nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">    //console<span class="number">.</span><span class="built_in">log</span>(<span class="built_in">sum</span>)</span><br><span class="line">    //<span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line">&#125;</span><br><span class="line">let res: <span class="keyword">number</span> = getSum([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br><span class="line">console<span class="number">.</span><span class="built_in">log</span>(res)</span><br></pre></td></tr></table></figure>

<p>emmm,赋值的机会都没有，非常棒；</p>
<p><img src="https://note.youdao.com/yws/public/resource/23eefae7798f03b72803fd5849e1f53d/xmlnote/093E3ED5485B43A098F770C02ACFCD34/39719" alt="必须返回值"></p>
</li>
</ul>
</li>
</ol>
<hr>
<h5 id="3-2-计算任意三角形面积并返回"><a href="#3-2-计算任意三角形面积并返回" class="headerlink" title="3.2 计算任意三角形面积并返回"></a>3.2 计算任意三角形面积并返回</h5><ol start="2">
<li><p>公式： 1/2x底x高，[^calc_Area]</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc_Area</span>(<span class="params">a: <span class="built_in">number</span>, h: <span class="built_in">number</span></span>): <span class="title">number</span></span>&#123;</span><br><span class="line">    <span class="keyword">let</span> area: <span class="built_in">number</span> = <span class="number">1</span>/<span class="number">2</span> * a * h</span><br><span class="line">    <span class="keyword">return</span> area</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(calc_Area(<span class="number">10</span>,<span class="number">10</span>))</span><br></pre></td></tr></table></figure>

<p>代码优化：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc_Area</span>(<span class="params">a: <span class="built_in">number</span>, h: <span class="built_in">number</span></span>): <span class="title">number</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>/<span class="number">2</span> * a * h</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(calc_Area(<span class="number">10</span>,<span class="number">10</span>))</span><br></pre></td></tr></table></figure>



</li>
</ol>
<hr>
<h5 id="3-3-得到任意两个数中的最大数并返回"><a href="#3-3-得到任意两个数中的最大数并返回" class="headerlink" title="3.3 得到任意两个数中的最大数并返回"></a>3.3 得到任意两个数中的最大数并返回</h5><ol start="3">
<li><p>封装函数(getMax)，得到任意两个数中的最大数并返回</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMax</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>): <span class="title">number</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a&gt;b)&#123;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">10</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>

<p>优化：三元运算符</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getMax</span>(<span class="params">a: <span class="built_in">number</span>, b: <span class="built_in">number</span></span>): <span class="title">number</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 &gt; num2 ? num1 : num2</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">console</span>.log(getMax(<span class="number">10</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>




</li>
</ol>
<hr>
<h4 id="6-4-4-return的说明"><a href="#6-4-4-return的说明" class="headerlink" title="6.4.4  return的说明"></a>6.4.4  return的说明</h4><ol>
<li><p>将函数内部的计算结果返回。</p>
</li>
<li><p>终止函数代码执行，即：return 后面的代码不会执行。</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span><span class="params">()</span>: number </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">18</span></span><br><span class="line">    console.log(<span class="string">&#x27;我不会执行，放在这，没有意义&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>return 只能在函数中使用，否则会报错。</p>
</li>
<li><p>return 可以单独使用（后面可以不跟内容），用来刻意终止函数的执行。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params">age: <span class="built_in">number</span></span>): <span class="title">void</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;网吧上网好爽啊，王者、吃鸡两不误&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">play(<span class="number">16</span>) <span class="comment">// 情况1：进入if后return，后续代码不执行</span></span><br><span class="line">play(<span class="number">20</span>) <span class="comment">// 情况2：不进if，直接打印内容： 网吧上网好爽啊，王者、吃鸡两不误</span></span><br></pre></td></tr></table></figure>

<p>注意：如果函数没有返回值，默认返回值类型是： void （空），可省略不写。虽然写了return但后面没有内容，默认是没有返回值的。</p>
<p><code>function play(age: number) &#123; /* ... */ &#125;</code></p>
<hr>
</li>
<li><p>return  的总结：</p>
<ul>
<li>能否在函数外面使用 return？     不能</li>
<li>return 后面的代码会执行吗？    不会执行</li>
<li>return 后面不跟内容，单独使用，表示什么？   刻意终止函数执行</li>
<li>函数没有返回值，默认返回值类型是什么？   void</li>
</ul>
</li>
</ol>
<hr>
<h3 id="6-5-函数基础总结"><a href="#6-5-函数基础总结" class="headerlink" title="6.5 函数基础总结"></a>6.5 函数基础总结</h3><p>函数，即：声明一次但却可以调用任意多次的一段代码。<br>通过将要实现的功能，使用函数封装起来，实现代码 复用，提升开发效率。</p>
<p>函数的三种主要内容： 1 参数 2 函数体 3 返回值。</p>
<p>简化过程：</p>
<ol>
<li>输入（参数） – 可选</li>
<li>处理（函数体）</li>
<li>输出（返回值）– 可选</li>
</ol>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=84">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=84</a></p>
<hr>
<h2 id="7-typescript-函数进阶"><a href="#7-typescript-函数进阶" class="headerlink" title="7. typescript 函数进阶"></a>7. typescript 函数进阶</h2><p>目标：</p>
<ul>
<li>能够调试函数</li>
<li>能知道什么是变量作用域</li>
<li>能区分全局变量和局部变量</li>
</ul>
<h3 id="7-1-函数调试"><a href="#7-1-函数调试" class="headerlink" title="7.1 函数调试"></a>7.1 函数调试</h3><h4 id="7-1-1-基本操作"><a href="#7-1-1-基本操作" class="headerlink" title="7.1.1 基本操作"></a>7.1.1 基本操作</h4><p>借助断点调试，观察代码的执行过程。</p>
<p>关键点：1 在哪个位置打断点？ 2 如何调试？</p>
<p>一．断点位置：函数调用所在位置。</p>
<p>二．调试函数常用按钮：</p>
<p>7.1 函数调试 直接看视频，不方便笔记，正好也没啥笔记的；2020-8-3 21:42:03</p>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=86">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=86</a></p>
<h4 id="7-1-2-函数的执行过程；"><a href="#7-1-2-函数的执行过程；" class="headerlink" title="7.1.2 函数的执行过程；"></a>7.1.2 函数的执行过程；</h4><p>示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;早上9点开始工作&#x27;</span>)</span><br><span class="line">play()</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;晚上6点结束工作&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">play</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;早上9:30开始吃鸡&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;晚上5:30结束吃鸡&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">work()</span><br></pre></td></tr></table></figure>

<p>结论1：函数里面，还可以继续调用其他函数。<br>结论2：函数，按照顺序一行行的执行代码，当遇到调用其他函数时，先完成该函数调用，再继续执行代码。</p>
<p>所以：</p>
<ul>
<li>work()里面console.log(‘早上9点开始工作’)后</li>
<li>就执行调用函数play()</li>
<li>执行完了，回来再继续；</li>
</ul>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=87">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=87</a></p>
<hr>
<h3 id="7-2-变量作用域"><a href="#7-2-变量作用域" class="headerlink" title="7.2 变量作用域"></a>7.2 变量作用域</h3><p>一个变量的作用域指的是：代码中定义变量的区域，它决定了变量的使用范围。</p>
<p>在 TS（或JS）中，函数可以形成作用域，叫做：函数作用域。</p>
<p>根据范围的不同，变量可以分为两种：1 局部变量 2 全局变量。</p>
<ul>
<li><p>局部变量：表示在函数内部声明的变量，该变量只能在函数内部使用（局部地区有雨）。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 变量 num 是局部变量</span></span><br><span class="line">    <span class="keyword">let</span> num: <span class="built_in">number</span> = <span class="number">1</span></span><br><span class="line">    <span class="built_in">console</span>.log(num) <span class="comment">// 此处能访问到变量 num</span></span><br><span class="line">&#125;</span><br><span class="line">fn()</span><br><span class="line"><span class="built_in">console</span>.log(num) <span class="comment">// 问题：此处能访问到变量 num 吗？ 不能</span></span><br></pre></td></tr></table></figure>

<ol>
<li>在函数里面申明的变量，就是局部变量</li>
<li>所以才有return，函数里面申明的变量，和计算的结果，是作用不到外面的</li>
</ol>
</li>
<li><p>全局变量：表示在函数外部声明的变量，该变量在当前 ts 文件的任何地方都可以使用。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 变量 num 是全局变量</span></span><br><span class="line"><span class="keyword">let</span> num: <span class="built_in">number</span> = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num) <span class="comment">// 问题：此处能访问到变量 num 吗？能</span></span><br><span class="line">&#125;</span><br><span class="line">fn()</span><br><span class="line"><span class="built_in">console</span>.log(num) <span class="comment">// 问题：此处能访问到变量 num 吗？能</span></span><br></pre></td></tr></table></figure>


</li>
</ul>
<hr>
<h2 id="8-TypeScript对象"><a href="#8-TypeScript对象" class="headerlink" title="8. TypeScript对象"></a>8. TypeScript对象</h2><p>目标：</p>
<ul>
<li>能说出对象是什么</li>
<li>能创建对象</li>
<li>能使用TS接口</li>
<li>能获取对象中的属性</li>
<li>能使用数组的常用方法</li>
</ul>
<h3 id="8-1-对象概述"><a href="#8-1-对象概述" class="headerlink" title="8.1 对象概述"></a>8.1 对象概述</h3><ol>
<li>生活中，对象是一个具体的事物，比如：你的电脑、你的手机、古力娜扎、周杰伦（周董）等都是对象。</li>
</ol>
<p>程序员都知道：万物皆对象。</p>
<p>这些具体的事物，都有自己的特征和行为：</p>
<p>特征：</p>
<blockquote>
<p>你的电脑：尺寸、重量、价格等<br>你的手机：品牌、屏幕大小、颜色等<br>古力娜扎：年龄、身高、三围等</p>
</blockquote>
<p>行为：</p>
<blockquote>
<p>你的电脑：浏览网页、写代码等<br>你的手机：播放视频、吃鸡等<br>古力娜扎：演电影、配音等</p>
</blockquote>
<p>TypeScript 中的对象，是对生活中具体事物的抽象，使得我们可以通过代码来描述具体的事物。</p>
<p>TS 中的对象，也是由特征和行为组成的，它们有各自专业的名称：<strong>属性</strong>（特征）和<strong>方法</strong>（行为）。</p>
<ul>
<li><p>理解 TS 中的对象：<strong>一组相关属性和方法的 集合，并且是 无序的</strong>。</p>
<blockquote>
<p>​    对象更有点想是一坨数据；2020-8-5 05:56:12</p>
</blockquote>
</li>
</ul>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 演示对象：</span></span><br><span class="line">&#123;</span><br><span class="line">    name: <span class="string">&#x27;周杰伦&#x27;</span>,</span><br><span class="line">    gender: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    height: <span class="number">175</span>,</span><br><span class="line">    sing: funtion () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;故事的小黄花 从出生那年就飘着&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对象的语法：花括号开头，花括号结束。{}（不知道为啥它叫花括号，百度也没百度到明确的指示）</p>
<hr>
<br />

<h4 id="8-1-2-疑问：为什么要有对象？"><a href="#8-1-2-疑问：为什么要有对象？" class="headerlink" title="8.1.2 疑问：为什么要有对象？"></a>8.1.2 疑问：为什么要有对象？</h4><ol start="2">
<li><p>疑问：为什么要有对象？</p>
<p>需求：使用 TS 代码描述周杰伦。</p>
<ul>
<li>方案一：使用多个变量</li>
</ul>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name: <span class="built_in">string</span> = <span class="string">&#x27;周杰伦&#x27;</span></span><br><span class="line"><span class="keyword">let</span> gender: <span class="built_in">string</span> = <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">let</span> heigh<span class="variable">t:</span> <span class="keyword">number</span> = <span class="number">175</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sing</span><span class="params">()</span> &#123; ... &#125;</span></span><br></pre></td></tr></table></figure>

<p>缺点：一个变量只能存储一个数据，多个变量之间没有任何关联（相关性）。</p>
<ul>
<li><p>方案二：使用数组，一次可以存储多个数据：</p>
<p><code>[&#39;周杰伦&#39;, &#39;男&#39;, 175, function sing() &#123; ... &#125;]</code></p>
<p>缺点：不知道数组中的每个元素表示什么。</p>
</li>
</ul>
</li>
<li><p>正确姿势：使用对象，对象在描述事物（一组相关数据）时，结构更加清晰、明了</p>
<p>{ name: ‘周杰伦’, gender: ‘男’, height: 175, sing: function () { … }}</p>
</li>
<li><p>总结：</p>
<p>对象：一组相关属性和方法的 集合，并且是 无序的。</p>
<p>在 TS 中，如果要描述一个事物或一组相关数据，就可以使用对象来实现。</p>
</li>
</ol>
<hr>
<h3 id="8-2-创建对象"><a href="#8-2-创建对象" class="headerlink" title="8.2 创建对象"></a>8.2 创建对象</h3><h4 id="8-2-1-语法"><a href="#8-2-1-语法" class="headerlink" title="8.2.1 语法"></a>8.2.1 语法</h4><ol>
<li><p>注意：先学习对象的基本使用，再学习对象的类型注解（对象的类型注解类似于对象自身的语法）。<br>对象的语法：</p>
<p><code>let person = &#123;&#125;</code></p>
<p>此处的  {} （花括号、大括号）表示对象。而对象中没有属性或方法时，称为：空对象。</p>
<p>对象中的属性或方法，采用 键值对 的形式，键、值之间使用冒号（ : ）来配对。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">let person = &#123;</span><br><span class="line">       键<span class="number">1</span>: 值<span class="number">1</span>,</span><br><span class="line">       键<span class="number">2</span>: 值<span class="number">2</span></span><br><span class="line">   &#125;</span><br><span class="line">   let person = &#123;</span><br><span class="line">       name: <span class="string">&#x27;刘老师&#x27;</span>,</span><br><span class="line">       age: <span class="number">18</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>键（key）—&gt;名称 ，值（value）—-&gt;具体的数据。</p>
<p>多个键值对之间，通过逗号（,）来分隔（类比数组）。</p>
<hr>
<h4 id="8-2-2-方法与函数，区分"><a href="#8-2-2-方法与函数，区分" class="headerlink" title="8.2.2 方法与函数，区分"></a>8.2.2 方法与函数，区分</h4></li>
<li><p>现在，对象person具有两个属性：</p>
<p><code>let person = &#123; name: &#39;刘老师&#39;, age: 18 &#125;</code></p>
<p>属性和方法的区别：值是不是函数，如果是，就称为方法；否则，就是普通属性。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;大家好，我是一个方法&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如果值不是函数，就是属性；什么是函数，可以看6.2 函数的使用；</p>
<ul>
<li><p>什么是值？</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">let person = &#123;</span><br><span class="line">    键<span class="number">1</span>: 值<span class="number">1</span>,</span><br><span class="line">    键<span class="number">2</span>: 值<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<p>2.1 注意：函数用作方法时可以省略function后面的函数名称，也叫做匿名函数。</p>
<p><img src="https://i.loli.net/2020/08/05/J82odURScnrvyOf.png" alt="图一"></p>
<center style="font-size:14px;color:#C0C0C0;">26-8.2-图一</center>

<p>2.2 函数没有名称，如何调用？ 此处的sayHi相当于函数名称，将来通过对象的sayHi就可以调用了。<br>如果一个函数是单独出现的，没有与对象关联，我们称为函数；否则，称为方法。</p>
<p>2.3 问:谁是方法，谁是函数；</p>
<p>2.3.1 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;大家好，我是一个方法&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>2.3.2</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">y:<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;大家好，我是一个方法&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>答：2.3.1 是函数，2.3.2 是方法；</p>
<blockquote>
<p>一下为自己的想法：</p>
<p>函数就像一个个单独的方法，方法不在对象里面，就叫做函数；</p>
<p>当然不是这么笼统。函数和方法的创建的语法都是不一样的；</p>
<p>但从效果来看，方法有点像是把一个个函数集中起来的感觉。</p>
</blockquote>
<hr>
</li>
</ol>
<h4 id="8-2-3-总结"><a href="#8-2-3-总结" class="headerlink" title="8.2.3 总结"></a>8.2.3 总结</h4><p>总结：<br>对象中的属性或方法，采用 键值对 的形式，因此，<strong>对象是无序键值对的集合</strong>。</p>
<ul>
<li>使用什么符号创建对象？   花括号（{}）</li>
<li>键（key）、值（value）之间通过什么符号配对？   冒号（:）</li>
<li>多个属性或方法之间使用什么符号分隔？   逗号（,）</li>
<li>属性和方法的区别？   值是不是函数</li>
</ul>
<hr>
<h3 id="8-3-接口"><a href="#8-3-接口" class="headerlink" title="8.3 接口"></a>8.3 接口</h3><h4 id="8-3-1-对象的类型注解"><a href="#8-3-1-对象的类型注解" class="headerlink" title="8.3.1 对象的类型注解"></a>8.3.1 对象的类型注解</h4><p>接口：为对象的类型注解命名，并为你的代码建立契约来约束对象的结构。</p>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=92">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=92</a></p>
<p>TS 中的对象是结构化的，结构简单来说就是对象有什么属性或方法。<br>在使用对象前，就可以根据需求，提前设计好对象的结构。<br>比如，创建一个对象，包含姓名、年龄两个属性。</p>
<p>思考过程：</p>
<p>1 对象的结构包含姓名、年龄两个属性 </p>
<p>2 姓名→字符串类型，年龄 →数值类型 </p>
<p>3 创建对象。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person: &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>→→</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">person = &#123;</span><br><span class="line">    name: <span class="string">&#x27;刘老师&#x27;</span>,</span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这就是对象的结构化类型（左侧），即：对该对象值（右侧）的结构进行类型约束。<br>或者说：<font color="red">建立一种契约，约束对象的结构</font>。</p>
<ul>
<li><p>首先1：</p>
<p>person:，这里有个冒号；上面都是没有的，这里有，也是严格的；</p>
<p>作用是申明person的类型，虽然这里没写类型。</p>
<ul>
<li>为什么这里又需要申明类型了呢？</li>
</ul>
</li>
<li><p>name: string;  而这里 接的 ； 分号，也需要严格执行；</p>
<ul>
<li>嗯，虽然资料故意后讲类型注解，但先思考类型注解，后再想创建对象似乎才顺畅。不然脑壳有点搅；</li>
</ul>
</li>
<li><p><font color="red">在这里，我先假设一下</font></p>
<ul>
<li>编码时，肯定是先类型注解，再创建对象；2020-8-5 04:30:21</li>
</ul>
</li>
</ul>
<hr>
<ol start="2">
<li><p>在视频的11：46处，说 ； 可以去掉。我勒个去；</p>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=92">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=92</a></p>
<p><del>name: string;  而这里 接的 ； 分号，也需要严格执行；</del></p>
</li>
</ol>
<hr>
<ol start="3">
<li><p>不过我的假设是正确的；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person: &#123;</span><br><span class="line">    name: <span class="built_in">string</span>;</span><br><span class="line">    age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line">person = &#123;</span><br><span class="line">    name: <span class="string">&#x27;刘老师&#x27;</span>,</span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>视频里也是这么写的。若以后有什么不同，再做修改。目前按照此概念执行；</p>
</li>
</ol>
<hr>
<h5 id="8-3-1-2-总结"><a href="#8-3-1-2-总结" class="headerlink" title="8.3.1.2 总结"></a>8.3.1.2 总结</h5><p>总结：<br>TS 中的对象是结构化的，在使用对象前，就可以根据需求，提前设计好对象的结构。</p>
<blockquote>
<p>这么说，还是可以不写结构注解咯；</p>
</blockquote>
<p>对象的结构化类型（类型注解）：建立一种契约，约束对象的结构。</p>
<p>注意点：类型注解中键值对的值为类型！</p>
<hr>
  <br />

<h4 id="8-3-2-对象方法的类型注解"><a href="#8-3-2-对象方法的类型注解" class="headerlink" title="8.3.2 对象方法的类型注解"></a>8.3.2 对象方法的类型注解</h4><ol>
<li><p>问题：如何给对象中的方法，添加类型注解？<br>技巧：鼠标放在变量名称上，VSCode就会给出该变量的类型注解。</p>
<p><img src="https://i.loli.net/2020/08/05/YVo9tMNBzpLZUAm.png" alt=""></p>
<center style="font-size:14px;color:#C0C0C0;">图1</center>

<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p1 = &#123;</span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;哎哟，不错哦~&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p2 = &#123;</span><br><span class="line">    sing: <span class="function"><span class="keyword">function</span>(<span class="params">name: <span class="built_in">string</span></span>)</span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">&#x27;歌曲名称：&#x27;</span> + name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p3 = &#123;</span><br><span class="line">    sum: <span class="function"><span class="keyword">function</span> (<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num1 + num2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
   <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> person: &#123;</span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="built_in">void</span></span><br><span class="line">    sing: <span class="function">(<span class="params">name: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">    sum: <span class="function">(<span class="params">num1: <span class="built_in">number</span>, num2: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">number</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>   箭头（=&gt;）左边小括号中的内容：表示方法的参数类型。</p>
<ul>
<li><p>那么：``sayHi: () =&gt; void` 的左侧是何含义？</p>
<ul>
<li>表示没有参数；没有参数，就只有这个()</li>
<li>05：40处出；</li>
<li><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=93">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=93</a></li>
</ul>
<p>箭头（=&gt;）右边的内容：表示方法的返回值类型。</p>
<p>方法类型注解的关键点：1 参数 2 返回值。</p>
<p>注意：技巧是辅助，更重要的是理解。</p>
</li>
</ul>
<hr>
<p>   1.1 那么我们给方法sayHi添加类型注解吧；</p>
<p>   1.1.1 先删除原先p1的变量声明</p>
   <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> p1 = &#123;</span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;哎哟，不错哦~&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

   <br />

<p>   1.1.2 然后写类型注解；</p>
   <figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">let p1: &#123;</span><br><span class="line">    sayHi: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>   合在一起：</p>
   <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p1: &#123;</span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="keyword">void</span></span><br><span class="line">&#125;</span><br><span class="line"> p1 = &#123;</span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;哎哟，不错哦~&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>   并不是类型注解在后面哦</p>
<p>   1.1.3 p2,p3若给方法添加类型注解同理；</p>
<hr>
<h4 id="8-3-3-接口的使用"><a href="#8-3-3-接口的使用" class="headerlink" title="8.3.3  接口的使用"></a>8.3.3  接口的使用</h4><ol>
<li><p>直接在对象名称后面写类型注解的坏处：1 代码结构不简洁 2 无法复用类型注解。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p1: &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    age: <span class="built_in">number</span></span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125; = &#123;</span><br><span class="line">    name : <span class="string">&#x27;jack&#x27;</span></span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;再见杰克&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p2: &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    age: <span class="built_in">number</span></span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125; = &#123;</span><br><span class="line">    name : <span class="string">&#x27;rose&#x27;</span></span><br><span class="line">    age: <span class="number">17</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;京酱肉丝&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>什么？还有这种写法？你前面不说，这个时候了，突然给我来一句这样的写法；</p>
<p>等等？他的意思应该不是这样的写法，这个只是简写！应该是这样的</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p1: &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    age: <span class="built_in">number</span></span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125; </span><br><span class="line">p1 = &#123;</span><br><span class="line">    name : <span class="string">&#x27;jack&#x27;</span></span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;再见杰克&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>嗯，这样的写法，就和前面一样了，确实，每次都要申明不行；</p>
</blockquote>
<p>接口：为对象的类型注解命名，并为你的代码建立契约来约束对象的结构。</p>
<ul>
<li><p>语法：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="symbol">IUser</span> &#123;</span><br><span class="line">name: <span class="built_in">string</span></span><br><span class="line">age: number</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>\longrightarrow</code>  ⟶  (为什么就是不编译呢<code>\longrightarrow</code>应该变成长箭头啊，百度也百度不到)</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">let <span class="attr">p1:</span> IUser = &#123;</span><br><span class="line"><span class="attr">name:</span> <span class="string">&#x27;jack&#x27;</span>,</span><br><span class="line"><span class="attr">age:</span> <span class="number">18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/interface">interface</a> 表示接口，接口名称约定以I开头。</p>
<ul>
<li><font color='red'>interface </font>是关键词，得用它来申明接口；</li>
<li>可以不 I 开头（但我懂得，一般这么说，其实都要）</li>
</ul>
</li>
<li><p><strong>推荐：使用接口来作为对象的类型注解</strong>。(那应该是必须这么写了)</p>
</li>
</ul>
<p>1.1 语法解释</p>
<p>​    直接拿过来用；</p>
<p><img src="https://i.loli.net/2020/08/05/tfM4evq1iEKX6GA.png" alt=""></p>
<center style="font-size:14px;color:#C0C0C0;">图1</center>

<hr>
</li>
<li><p>好我们在代码中体验一下；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个接口</span></span><br><span class="line"><span class="keyword">interface</span> IUser &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    age: <span class="built_in">number</span></span><br><span class="line">    sayHi: <span class="function">() =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用接口</span></span><br><span class="line"><span class="keyword">let</span> p1: IUser = &#123;</span><br><span class="line">    name : <span class="string">&#x27;jack&#x27;</span></span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;再见杰克&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p1 = &#123;</span><br><span class="line">    name : <span class="string">&#x27;jack&#x27;</span></span><br><span class="line">    age: <span class="number">18</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;再见杰克&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p2 = &#123;</span><br><span class="line">    name : <span class="string">&#x27;rose&#x27;</span></span><br><span class="line">    age: <span class="number">17</span></span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;京酱肉丝&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<br />

<h3 id="8-4-取值与存值"><a href="#8-4-取值与存值" class="headerlink" title="8.4  取值与存值"></a>8.4  取值与存值</h3><h4 id="1-取值"><a href="#1-取值" class="headerlink" title="1 .取值"></a>1 .取值</h4><p>取值，即：拿到对象中的属性或方法并使用。</p>
<p>获取对象中的属性，称为：访问属性。</p>
<p>获取对象中的方法 并调用，称为：调用方法。</p>
<ul>
<li><p>访问属性</p>
<p><code>let jay = &#123; name: &#39;周杰伦&#39;, height: 175 &#125;</code></p>
<ul>
<li><blockquote>
<p>jay  英 [dʒeɪ]   美 [dʒeɪ]       </p>
<p>n.松鸦(见于欧洲，羽毛鲜艳，喜大声鸣叫)</p>
<p>??? 用jay单词的意义何在，也不像是什么缩写；</p>
</blockquote>
</li>
</ul>
<p>需求：获取到对象（jay）的name属性。</p>
<p><code>console.log(jay.name)</code></p>
<p>说明：通过<span id="点语法">点语法</span>（.）就可以访问对象中的属性。</p>
<p>技巧：在输入点语法时，利用VSCode给出来的提示，利用上下键快速选择要访问的属性名称。</p>
</li>
<li><p>来，我们试一试</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建接口</span></span><br><span class="line"><span class="keyword">interface</span> IUser &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    height: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">let</span> jay: IUser = &#123;</span><br><span class="line">    name: <span class="string">&#x27;张虹成&#x27;</span></span><br><span class="line">    height: <span class="number">175</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 访问对象jay的name属性</span></span><br><span class="line"><span class="built_in">console</span>.log(jay.name)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<hr>
<ol start="2">
<li><p>调用方法；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> jay = &#123;</span><br><span class="line">    sing: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;故事的小黄花 从出生那年就飘着&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需求：调用对象（jay）的sing方法，让他唱歌。</p>
<p><code>jay.sing()</code></p>
<p>说明：通过点语法（.）就先拿到方法名称，然后，通过小括号调用方法。</p>
<ul>
<li><p>用访问属性的例子</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建接口</span></span><br><span class="line"><span class="keyword">interface</span> IUser &#123;</span><br><span class="line">    name: <span class="built_in">string</span></span><br><span class="line">    height: <span class="built_in">number</span></span><br><span class="line">    sing: <span class="function">() =&gt;</span> viod</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">let</span> jay: IUser = &#123;</span><br><span class="line">    name: <span class="string">&#x27;张虹成&#x27;</span></span><br><span class="line">    height: <span class="number">175</span></span><br><span class="line">    sing: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;故事的小黄发。&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 访问对象jay的name属性</span></span><br><span class="line"><span class="built_in">console</span>.log(jay.name)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;我叫&#x27;</span>, jay.name)</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">jay.sing()</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<br />

<ol start="3">
<li><p>补充说明：</p>
<p><code>console.log(参数1, 参数2, ...)</code></p>
<ul>
<li><p>没错可以多个</p>
</li>
<li><p>console.log(‘我叫’, jay.name)</p>
<blockquote>
<p>ts-node  xxx.ts   会打印出  我叫张虹成；</p>
</blockquote>
</li>
</ul>
<p>实际上，console是一个对象，而log是该对象提供的一个方法。</p>
<ul>
<li>console这个对象，是浏览器环境提供的，所以可以直接用；</li>
</ul>
<p>并且，log方法可以有多个参数。</p>
<p><code>console.log(&#39;我叫&#39;, jay.name)</code></p>
<p>3.1 不过这样打印出来的，之间会有一个空格，不想要空格，还是的用 “+”号</p>
<img src="https://i.loli.net/2020/08/05/AuUMcvE48fPgG5d.png" style="zoom:150%;" />

<center style="font-size:14px;color:#C0C0C0;">图1</center>

</li>
</ol>
<hr>
<ol start="4">
<li><p>总结</p>
<p>通过什么符号，来访问对象中的属性或方法？    <font color='red'>点语法(.)</font></p>
<p>注意：方法需要调用，所以，通过点语法拿到方法名称后，不要忘记使用小括号调用！</p>
<p>技巧：通过点语法，访问对象属性时，利用VSCode出来的提示，快速选择要访问的属性或方法。</p>
<p>该技巧很实用，特别是访问别人创建的对象时（比如：console对象）。</p>
<br />

</li>
</ol>
<hr>
<h4 id="2-存值"><a href="#2-存值" class="headerlink" title="2.  存值"></a>2.  存值</h4><ol>
<li><p>存值，即修改（设置）对象中属性的值。</p>
<p><code>let jay = &#123; name: &#39;周杰伦&#39;, height: 175 &#125;</code></p>
<p>需求：将对象（jay）的name属性的值修改为’周董’。</p>
<p><code>jay.name = &#39;周董&#39;</code></p>
<p>解释：先通过点语法获取到name属性，然后，将新值’周董’赋值给该属性。</p>
<p><code>console.log(jay.name) // 周董</code></p>
<p>注意：设置的新值，也必须符合该属性的类型要求！</p>
<p>注意：几乎不会修改对象中的方法。</p>
<blockquote>
<p>视频里说，若要修改，新写方法覆盖。好像是这么说的，但具体操作没说</p>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=97">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=97</a></p>
</blockquote>
<br />

<hr>
</li>
</ol>
<br />

<h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h4><p>对象是对现实生活中具体事物（特征和行为）的抽象，可以使用对象来描述这些具体的事物。</p>
<p>对象包含：1 属性 2 方法。<br>简单来说：对象就是无序键值对的集合。</p>
<p>对象是结构化的，它的类型注解就是从对象的结构（属性、方法）出发，进行类型约束和检查。<br>推荐：使用<font color='red'>接口</font>来作为对象的类型注解，<font color='red'>建立一种契约，约束对象的结构。</font></p>
<p>TS中的数据类型分为两大类：1 原始类型（基本数据类型） 2 对象类型（复杂数据类型）。</p>
<p>常用的基本数据类型有 5 个： number  /  string  /  boolean  / undefined / null。</p>
<p><font color='red'>复杂数据类型</font>：object（对象、数组）、function（函数）。</p>
<hr>
<br />

<h3 id="8-5-内置对象"><a href="#8-5-内置对象" class="headerlink" title="8.5 内置对象"></a>8.5 内置对象</h3><h4 id="8-5-1-概述"><a href="#8-5-1-概述" class="headerlink" title="8.5.1 概述"></a>8.5.1 概述</h4><p>对象的两种来源：1 自己创建 2 其他人创建（编程语言自带或第三方）。</p>
<p>内置对象，是 TS/JS 自带的一些基础对象，提供了TS开发时所需的基础或必要的能力。</p>
<ul>
<li>比如手机，手机会自带一些软件，如文件管理，照相。</li>
</ul>
<p>已经用过的内置对象：数组。</p>
<ol>
<li><p>学习内置对象，需要学什么？   常用属性和方法</p>
</li>
<li><p>怎么学？   查文档</p>
<hr>
</li>
</ol>
<h4 id="8-5-2-学习方式-查文档"><a href="#8-5-2-学习方式-查文档" class="headerlink" title="8.5.2 学习方式 - 查文档"></a>8.5.2 学习方式 - 查文档</h4><p>注意：内置对象中提供了非常多的方法或属性，以满足开发中各种各样的需求。</p>
<p>编程不是死记硬背，而是掌握一定的技巧，<font color='red'>查文档</font>就是最重要的一个。</p>
<blockquote>
<ul>
<li>视频里说的是，太多了，记不住，也费时，好多用不上，要用的时候去查…..</li>
</ul>
</blockquote>
<p>文档地址：<a href="https://developer.mozilla.org/zh-CN/">MDN</a>（更标准） / W3school（国内）</p>
<ul>
<li><p>例如在MDN里查到的一个方法</p>
<ol>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/max">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Math/max</a></p>
</li>
<li><p><code>**Math.max()**</code> 函数返回一组数中的最大值。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>));</span><br><span class="line"><span class="comment">// expected output: 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">-1</span>, <span class="number">-3</span>, <span class="number">-2</span>));</span><br><span class="line"><span class="comment">// expected output: -1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> array1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(...array1));</span><br><span class="line"><span class="comment">// expected output: 3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
</li>
<li><p>总结</p>
</li>
</ul>
<p>内置对象，是 TS/JS 自带的一些基础对象，提供了TS开发时所需的基础或必要的能力。</p>
<p>学什么？学内置对象中的属性或方法。<br>怎么学？查文档，文档地址：MDN（更标准） / W3school（国内）</p>
<hr>
<h4 id="8-5-3-数组对象"><a href="#8-5-3-数组对象" class="headerlink" title="8.5.3  数组对象"></a>8.5.3  数组对象</h4><p>数组是 TS 中最常用、最重要的内置对象之一，掌握数组的常用操作能够显著提升开发效率。<br>数组的常用操作：添加、删除、遍历、过滤等。<br>重点学习：1 属性（length） 2 方法（push、forEach、some）。</p>
<ol>
<li><p>length 属性：获取数组长度。</p>
<p><code>let songs: string[] = [&#39;五环之歌&#39;, &#39;探清水河&#39;, &#39;晴天&#39;]</code></p>
<p>获取数组长度：</p>
<p><code>songs.length</code></p>
<p>原来length是 一个 名为 ”数组“的对象里面的 一个 名为”length“的键。然后它的值是一个属性。</p>
</li>
</ol>
<h5 id="2-push-添加元素-1"><a href="#2-push-添加元素-1" class="headerlink" title="2. push-添加元素"></a>2. push-添加元素</h5><ol start="2">
<li><p>push 方法：添加元素（在数组最后一项元素的后面添加）。</p>
<p><code>songs.push(&#39;痒&#39;)</code></p>
<p>原来的方式：使用数组长度作为索引</p>
<p><code>songs[songs.length] = &#39;痒&#39; // =&gt; songs[3] = &#39;痒&#39;</code></p>
<p>2.1 也可以查文档来学习</p>
<ul>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/push">push</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> animals = [<span class="string">&#x27;pigs&#x27;</span>, <span class="string">&#x27;goats&#x27;</span>, <span class="string">&#x27;sheep&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> count = animals.push(<span class="string">&#x27;cows&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(count);</span><br><span class="line"><span class="comment">// expected output: 4</span></span><br><span class="line"><span class="built_in">console</span>.log(animals);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;]</span></span><br><span class="line"></span><br><span class="line">animals.push(<span class="string">&#x27;chickens&#x27;</span>, <span class="string">&#x27;cats&#x27;</span>, <span class="string">&#x27;dogs&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(animals);</span><br><span class="line"><span class="comment">// expected output: Array [&quot;pigs&quot;, &quot;goats&quot;, &quot;sheep&quot;, &quot;cows&quot;, &quot;chickens&quot;, &quot;cats&quot;, &quot;dogs&quot;]</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ol>
<ul>
<li><p>解惑：</p>
<ul>
<li>const 表示常量，常量不能重新赋值；let 是变量，可以在后面二次赋值；</li>
</ul>
</li>
</ul>
<p>   2.2 练习：</p>
<ul>
<li><pre><code class="typescript"><span class="keyword">let</span> songs: <span class="built_in">string</span>[] = [<span class="string">'五环之歌'</span>, <span class="string">'探清水河'</span>, <span class="string">'晴天'</span>]
songs.push(<span class="string">'样'</span>)
<span class="built_in">console</span>.log(songs)
&lt;!--hexoPostRenderEscape:&lt;figure <span class="keyword">class</span>=<span class="string">"highlight xquery"</span>&gt;&lt;table&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>=<span class="string">"gutter"</span>&gt;&lt;pre&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">1</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">3</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">5</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">7</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;<span class="number">9</span>&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;/</span>pre&gt;&lt;<span class="regexp">/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;+ 如果要接受到push返回的数组长度，需要用一个量来接收；&lt;<span class="regexp">/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/</span>span&gt;&lt;br&gt;&lt;span <span class="keyword">class</span>=<span class="string">"line"</span>&gt;  <span class="string">``</span><span class="string">`typescript&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  &lt;span class="keyword"&gt;let&lt;/span&gt; songs:&lt;span class="built_in"&gt; string&lt;/span&gt;[] = [&lt;span class="string"&gt;&amp;#x27;五环之歌&amp;#x27;&lt;/span&gt;, &lt;span class="string"&gt;&amp;#x27;探清水河&amp;#x27;&lt;/span&gt;, &lt;span class="string"&gt;&amp;#x27;晴天&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  &lt;span class="keyword"&gt;let&lt;/span&gt; len:&lt;span class="built_in"&gt; number&lt;/span&gt; = songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  console.log(songs, len)&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  // 也许&lt;span class="keyword"&gt;let&lt;/span&gt; len:&lt;span class="built_in"&gt; number&lt;/span&gt; = songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;) 看着不顺眼;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  // 但确实执行了songs.push(&lt;span class="string"&gt;&amp;#x27;样&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</span>
<span class="string"></span></code></pre>
</li>
</ul>
<hr>
<h5 id="3-数组对象-forEach"><a href="#3-数组对象-forEach" class="headerlink" title="3. 数组对象 - forEach"></a>3. 数组对象 - forEach</h5><ol>
<li><p>forEach 方法：遍历数组。<a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/each">each</a></p>
<blockquote>
<p>forEach被称为方法，你还记什么是方法吗？</p>
<blockquote>
<p> 在上面复习了 8.2.2后下来：</p>
<p> 对象中，键的值为函数；</p>
<p> 那么forEach是某个对象中的键，毕竟函数本身没有名字，是一些匿名函数；</p>
<p> 而那个匿名函数里面，就写了类似</p>
 <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (let <span class="built_in">i</span>: number = <span class="number">0</span>; <span class="built_in">i</span> &lt; songs.<span class="built_in">length</span>; <span class="built_in">i</span>++) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">&#x27;索引为&#x27;</span>, <span class="built_in">i</span>, <span class="string">&#x27;元素为&#x27;</span>, songs[<span class="built_in">i</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 的东西</p>
<p> 然而，看了后面，不是这么简单，forEach的参数，是一个函数；懵了</p>
</blockquote>
</blockquote>
<p><code>let songs: string[] = [&#39;五环之歌&#39;, &#39;探清水河&#39;, &#39;晴天&#39;]</code></p>
<p>原来的方式：使用 for 循环遍历数组</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i: <span class="built_in">number</span> = <span class="number">0</span>; i &lt; songs.length; i++) &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;索引为&#x27;</span>, i, <span class="string">&#x27;元素为&#x27;</span>, songs[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用 forEach：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">songs.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;索引为&#x27;</span>, index, <span class="string">&#x27;元素为&#x27;</span>, item)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这也的点，应该不是单独的。</p>
<p>不是单独的说以前的方法不好，以前的方法才是原始的逻辑。不然如何思考，如何理解遍历的实现</p>
<p>这里主要是说，使用对象的方便，与对象的使用；</p>
</blockquote>
<ul>
<li><p>forEach <strong>使用</strong>说明：</p>
<p>注意：forEach 方法的参数是一个函数，这种函数也称为 回调函数。同时里面的函数是一个匿名函数，没有函数名；</p>
<blockquote>
<p>方法的参数是一个函数？方法的参数，听起来有点陌生</p>
<blockquote>
<p>这里的意思应该是：</p>
<p>键对应的值（函数）的参数，也就是说是一个函数的参数。函数确实有参数</p>
<blockquote>
<p>可以复习一下函数，函数的参数；6.3 函数参数</p>
</blockquote>
<p>而函数的参数，是个函数。那么这种函数。</p>
<p>叫做回调函数；</p>
<p>可以百度 回调函数，看看自己的理解如何；2020-8-6 02:24:10</p>
</blockquote>
</blockquote>
<p>forEach 方法的执行过程：遍历整个数组，为数组的每一项元素，调用一次回调函数。<br>回调函数的两个参数：</p>
</li>
</ul>
<ol>
<li><p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/item">item</a> 表示数组中的每个元素，相当于 songs[i]。</p>
<ol start="2">
<li>index 表示索引，相当于 i。</li>
</ol>
<hr>
</li>
</ol>
<ul>
<li><p>forEach<strong>方法</strong>的说明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">     </span><br></pre></td></tr></table></figure>

<p>songs.forEach(function (item, index) {<br>console.log(‘索引为’, index, ‘元素为’, item)<br>})</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line">疑问：不需要为&lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;red&#x27;</span>&gt;回调函数&lt;/<span class="keyword">font</span>&gt;的参数或返回值指定类型注解吗？</span><br><span class="line">    </span><br><span class="line">注意：此处的回调函数，是作为 <span class="keyword">forEach</span> 方法的&lt;<span class="keyword">font</span> <span class="keyword">color</span>=<span class="string">&#x27;red&#x27;</span>&gt;实参&lt;/<span class="keyword">font</span>&gt;传入，不应该指定类型注解！</span><br><span class="line">    </span><br><span class="line"><span class="keyword">forEach</span> 方法，可以根据当前数组的类型，自动推导出回调函数中参数的类型。</span><br><span class="line">    </span><br><span class="line">注意：回调函数中的参数可以用任意名称，并且，&lt;sapn id=<span class="string">&quot;没用到索引&quot;</span>&gt;如果没有用到&lt;/span&gt;，可以省略。</span><br><span class="line">  </span><br><span class="line">&gt; 单纯的从这句话能感受出，回调函数，主要是指那个作为参数的函数。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>songs.forEach(function (a, b) {}) // OK! a ⟶ 数组元素 b ⟶索引<br>songs.forEach(function (item) {}) // OK! 索引没用到，直接省略</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   此处建议看视频：https:<span class="comment">//www.bilibili.com/video/BV1UD4y1m7Gw?p=102</span></span><br><span class="line">     </span><br><span class="line">   ```typescript</span><br><span class="line">   <span class="comment">// 模拟 forEach 方法的声明：</span></span><br><span class="line">   <span class="keyword">function</span> <span class="keyword">for</span><span class="constructor">Each1(<span class="params">callbackfn</span>: (<span class="params">value</span>: <span class="params">string</span>, <span class="params">index</span>: <span class="params">number</span>)</span> =&gt; void) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模拟forEach 方法的调用：</span></span><br><span class="line">   <span class="comment">//此处的函数是实参！</span></span><br><span class="line"><span class="keyword">for</span><span class="constructor">Each1(<span class="params">function</span> (<span class="params">value</span>, <span class="params">index</span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure>

<p>如果把</p>
</li>
</ul>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">   <span class="comment">// 模拟 forEach 方法的声明：</span></span><br><span class="line"><span class="keyword">function</span> <span class="keyword">for</span><span class="constructor">Each1(<span class="params">callbackfn</span>: (<span class="params">value</span>: <span class="params">string</span>, <span class="params">index</span>: <span class="params">number</span>)</span> =&gt; void) &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>  写成 8.3.2 对象方法的类型注解格式：</p>
  <figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">   <span class="keyword">let</span> p3 = &#123;</span><br><span class="line">       forEach: callbackfn (value: <span class="built_in">string</span>, index: <span class="built_in">number</span>)&#123;</span><br><span class="line">            </span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="built_in">Array</span>: &#123;</span><br><span class="line">       forEach: <span class="function">(<span class="params">value: <span class="built_in">string</span>, index: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  不对，不对；这样理解。callbackfn: (value: string, index: number) =&gt; void 如何作为函数forEach1的实参？</p>
<ul>
<li><p>可能需要专门针对学习 回调函数的 资料，这里只是讲数组对象forEach而谈到。</p>
<p>只要能理解 如何创建 回调函数。应该就能理解这里了；</p>
<p>好，我去找资料；</p>
<hr>
</li>
</ul>
</li>
</ol>
<h6 id="3-2-回调函数"><a href="#3-2-回调函数" class="headerlink" title="3.2 回调函数"></a>3.2 回调函数</h6><p><a href="https://blog.csdn.net/UnderIcon/article/details/81188923?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">https://blog.csdn.net/UnderIcon/article/details/81188923?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param</a></p>
<p>简单一句：函数a的事先干完，回头再调用函数b</p>
<p>a（b），不过上面怎么看起来很复杂，因为直接把函数b本身写进参数了吗？而不是b这个代名词；</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">callback</span>)</span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;我是parent函数a！&quot;</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;调用回调函数&quot;</span>);</span><br><span class="line">    callback();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;我是回调函数b&quot;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;我是回调函数c&quot;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a(b);</span><br><span class="line">   a(c);</span><br><span class="line">&#125;</span><br><span class="line">test()</span><br></pre></td></tr></table></figure>

<p>页面里的代码 node X.js 会报错，我就全部换成console.log 了；</p>
<p>回调函数先到这吧，许久了；forEach那里估计写的不规范，看起来很迷糊；</p>
<hr>
<h6 id="3-3-forEach方法的练习；"><a href="#3-3-forEach方法的练习；" class="headerlink" title="3.3 forEach方法的练习；"></a>3.3 forEach方法的练习；</h6><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 需求：判断数组(nums)中是否包含大于10的数字</span></span><br><span class="line">let nums: number[] = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br></pre></td></tr></table></figure>

<p>思路：</p>
<ol>
<li><p>用布尔值来判断是否大于10</p>
<p>1.1 创建一个布尔值变量（has），默认值为false</p>
</li>
<li><p>拿到数组中的每一个元素。</p>
<p>2.1 使用forEach方法来遍历数组；</p>
</li>
<li><p>分别于10进行比较，用if</p>
</li>
<li><p>如果大于10，has设置为true，小于10不用设置，本身为false；</p>
</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.1 创建一个布尔值变量（has），默认值为false</span></span><br><span class="line"><span class="keyword">let</span> has: <span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">// 2.1 使用forEach方法来遍历数组</span></span><br><span class="line">nums.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num) <span class="comment">// 可以试试，能不能拿到数组中的每个元素</span></span><br><span class="line">    <span class="comment">//分别于10进行比较，用if</span></span><br><span class="line">    <span class="comment">//如果大于10，has设置为true，小于10不用设置，本身为false；</span></span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        has = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 打印has，大于10位true，小于10位false，这样就能满足需求；</span></span><br><span class="line"><span class="built_in">console</span>.log(has)</span><br></pre></td></tr></table></figure>

<hr>
<h5 id="4-数组对象–some"><a href="#4-数组对象–some" class="headerlink" title="4 数组对象–some"></a>4 数组对象–some</h5><ol>
<li>如何使用some？</li>
</ol>
<p>需求：判断数组中是否包含大于10的数字。</p>
<blockquote>
<p>这不是上面forEach的练习么</p>
</blockquote>
<p>使用forEach。</p>
<p>问题： 遍历整个数组（循环执行了5次），无法中间停止，这种情况下，效率低。</p>
<br />

<p>some 方法：遍历数组，查找是否有一个满足条件的元素（如果有，就可以停止循环）。</p>
<p>循环特点：<font color="red">根据回调函数的返回值</font>，决定是否停止循环。如果返回 true，就停止；返回 false，就继续循环。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">nums.some(<span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>将</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> has: <span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line">nums.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        has = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(has)</span><br></pre></td></tr></table></figure>

<p>用some方法写，如何写呢？可以自己先写写，再看下面；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> nums: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br><span class="line">nums.some(<span class="function"><span class="keyword">function</span> (<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 额，就是这么简单粗暴</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 从后面回来，这种写法不好。虽然当时刚到这就觉得不好了</span></span><br><span class="line"><span class="keyword">let</span> nums: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some1</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (num&gt;<span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">nums.some(some1)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果疑问只有一个num，可以去：<a href="#没用到索引">没用到索引</a></p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这个时候我问 some1(num)里面的num 是什么</span></span><br><span class="line"><span class="comment">// 那么可以先打印一下是什么；</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some2</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num)</span><br><span class="line">&#125;</span><br><span class="line">nums.some(some2)</span><br></pre></td></tr></table></figure>

<p>是调用some方法的那个量的元素（内容）</p>
<p><img src="https://i.loli.net/2020/08/10/Fj1XOvHxPBUV6q2.png" alt="1"></p>
<p>为什么是？</p>
<p>应该是some这个方法，赋予了，被当做参数，的那个函数，的参数的，逻辑关系</p>
</blockquote>
<ol start="2">
<li><p>some有返回值吗？是什么类型？</p>
<p>有，是布尔类型。</p>
<p>申明一个变量，即可接收；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> has: <span class="built_in">boolean</span> =nums.some(<span class="function"><span class="keyword">function</span> (<span class="params">num</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num&gt;<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>突然想起，每次都是）结尾，以前都是{}</p>
<p>因为这里并不是函数，而是方法，方法好像都是（）</p>
<p>如console.log( )</p>
<p>这里就是nums.some( ) ;本来即使是回调函数，也应该把函数在外面写完，直接用函数名带入，而这里是在里面写函数？</p>
</blockquote>
<p>some  方法的返回值：布尔值。如果找到满足条件的元素，结果为  true ; 否则，为  false 。</p>
<p>查找是否包含满足条件的元素时，使用 some；对数组中每个元素都进行相同的处理时，就用 forEach。</p>
<blockquote>
<p>在some方法里，找到了满足条件的数据，就会停止遍历</p>
</blockquote>
</li>
</ol>
<hr>
<br />

<h5 id="5-补充：-TS-的类型推论"><a href="#5-补充：-TS-的类型推论" class="headerlink" title="5. 补充： TS 的类型推论"></a>5. 补充： TS 的类型推论</h5><p>在 TS 中，某些没有明确指出类型的地方，类型推论会帮助提供类型。</p>
<p>换句话说：由于类型推论的存在，这些地方，类型注解可以省略不写！</p>
<p>发生类型推论的2种常见场景：1 声明变量并初始化时 2 决定函数返回值时。</p>
<p>let age: <del>number</del> = 18 // =&gt;  let age = 18<br>function sum(num1: number, num2: number)<del>: number</del> { return num1 + num2 }<br>// =&gt;<br>function sum(num1: number, num2: number) { return num1 + num2 } }</p>
<p>注意：这两种情况下，类型注解可以省略不写！</p>
<p>推荐：<font color="red">能省略类型注解的地方，就省略</font>（偷懒、充分利用TS类型推论的能力，提升开发效率）。</p>
<p>为什么不早说？</p>
<p>学习的时候，培养大家去建立<font color="red">类型思维</font>；出师了，可以去繁就简。</p>
<blockquote>
<p>我真是难受；2020-8-6 23:02:12</p>
</blockquote>
<hr>
<br />

<h2 id="9-TypeScript-之-Web开发"><a href="#9-TypeScript-之-Web开发" class="headerlink" title="9. TypeScript 之 Web开发"></a>9. TypeScript 之 Web开发</h2><br />

<h3 id="9-1-Web开发基础"><a href="#9-1-Web开发基础" class="headerlink" title="9.1 Web开发基础"></a>9.1 Web开发基础</h3><h4 id="9-1-1-概述"><a href="#9-1-1-概述" class="headerlink" title="9.1.1 概述"></a>9.1.1 概述</h4><p>下棋游戏（XXOO）是通过 Web（网页）开发实现的，因此，我们要学习 Web 开发的相关知识。</p>
<p>Web 开发涵盖以下内容：HTML、CSS、JavaScript （HTML、CSS不是本课程的重点，仅简单讲解）。<br>三者之间的关系：</p>
<ul>
<li>（结构）HTML 负责创建页面结构。</li>
<li>（样式）CSS 负责美化页面结构（相当于化妆）。</li>
<li>（行为）JavaScript 负责让页面“动”起来，解锁更多动效。</li>
</ul>
<hr>
<blockquote>
<p>一般都是学了html 与css 再来的，可以不看</p>
</blockquote>
<p>HTML（Hyper Text Markup Language，即：超文本标记语言）负责创建页面结构。<br>创建第一个 HTML 步骤：</p>
<ol start="2">
<li>快速生成 HTML 基本骨架：在文件中输入英文叹号（!），然后，按 tab 键。</li>
<li>创建 a .html 文件。</li>
<li>创建按钮标签：在 body 标签中，输入 button，按 tab 键。</li>
<li>打开 HTML 页面：在文件夹中找到页面文件，双击打开。<br>注意：页面中可见的内容，写在 body 标签中。</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> 布局标签（独占一行）</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  段落标签（存放文字）</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> 标题标签</span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span> 按钮标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> /&gt;</span> 图片标签</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<hr>
<p>CSS（Cascading Style Sheets，即：层叠样式表）负责美化页面结构。<br>使用 CSS 的三种方式：</p>
<ol>
<li>style 属性：在 HTML 标签中，通过 style 属性来添加样式。</li>
</ol>
<p><code>&lt;p style=&quot;color: red; font-size: 50px;&quot;&gt;天青色等烟雨 ...&lt;/p&gt;</code></p>
<ol start="2">
<li>style 标签：在 head 标签中，创建 style 标签。<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="comment">/* 标签选择器 */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: red; &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>技巧： 先通过选择器获取标签，再设置样式。</p>
<p>常用的 CSS 选择器：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 标签选择器 */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: red; &#125;</span><br><span class="line"><span class="comment">/* id 选择器 */</span></span><br><span class="line"><span class="selector-id">#txt</span> &#123; <span class="attribute">font-size</span>: <span class="number">50px</span>; &#125;</span><br><span class="line"><span class="comment">/* 类（名）选择器 –- 推荐 */</span></span><br><span class="line"><span class="selector-class">.cls</span> &#123; <span class="attribute">backgroud-color</span>: pink; &#125;</span><br></pre></td></tr></table></figure>

<p>推荐：使用 类选择器 来给标签添加样式！</p>
<ol start="3">
<li><p>CSS 文件：创建 .css 文件，将样式放在该文件中，然后在 head 中通过 link 标签引入该文件。</p>
<p><code>&lt;link ref=&quot;stylesheet&quot; href=&quot;./index.css&quot; /&gt;</code></p>
</li>
</ol>
<p>总结：</p>
<p>作用：美化页面结构。<br>使用方式：</p>
<ol>
<li>HTML 标签的 style 属性。</li>
<li>style 标签（在 head 标签中创建）。</li>
<li>CSS 文件（在 head 中通过 link 标签引入）。</li>
</ol>
<p>常用的 CSS 选择器：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: red; &#125; <span class="comment">/* 标签选择器 */</span></span><br><span class="line"><span class="selector-id">#txt</span> &#123; <span class="attribute">font-size</span>: <span class="number">50px</span>; &#125; <span class="comment">/* id 选择器 */</span></span><br><span class="line"><span class="selector-class">.class</span> &#123; <span class="attribute">backgroud-color</span>: pink; &#125; <span class="comment">/* 类（名）选择器 –- 推荐 */</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="9-1-2-浏览器中使用JavaScript"><a href="#9-1-2-浏览器中使用JavaScript" class="headerlink" title="9.1.2 浏览器中使用JavaScript"></a>9.1.2 浏览器中使用JavaScript</h4><p>JavaScript（简称：JS），负责让页面“动”起来，为页面添加动效。</p>
<p>使用 JS 的两种方式：</p>
<ol>
<li><p>script 标签：在 body 标签的最后面，创建 script 标签。</p>
<p>注意：console.log 方法打印的内容，需要在浏览器控制台中查看。</p>
<p>打开控制台（console）的方式：在页面中点击鼠标右键，选择“检查”，切换到 Console 面板。</p>
</li>
<li><p>独立 js文件：创建 index.js 文件，在 body 标签的最后面，通过 script 标签引入。</p>
<p><code>&lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt;</code></p>
<p><strong>当然是选择它啦</strong></p>
</li>
</ol>
<hr>
<br />

<h4 id="9-1-3-自动刷新浏览器"><a href="#9-1-3-自动刷新浏览器" class="headerlink" title="9.1.3 自动刷新浏览器"></a>9.1.3 自动刷新浏览器</h4><p>问题：每次修改页面内容后，都要手动刷新浏览器，才能看到修改后的内容。</p>
<p>解决方式：使用 VSCode 的 Live Server 插件，实现自动刷新浏览器。</p>
<p>作用：监视 html 或引入的css、js的变化，在保存文件时，该插件就会帮我们自动刷新浏览器。</p>
<p>如何使用？     注意：不再双击打开 html 页面！</p>
<p>使用方式：在 html 文件中，点击鼠标右键，再点击  Open with Live Server 按钮即可。</p>
<p>注意：html 文件所在的文件夹名称 <strong>不要包含中文</strong>，否则，打开页面失败，插件功能无法生效！</p>
<hr>
<h3 id="9-2-浏览器中运行TS"><a href="#9-2-浏览器中运行TS" class="headerlink" title="9.2 浏览器中运行TS"></a>9.2 浏览器中运行TS</h3><p>注意：浏览器中只能运行 JS， <strong>无法直接运行 TS</strong>，因此，需要将 TS 转化为 JS 然后再运行。</p>
<p>浏览器中运行 TS 的步骤：</p>
<ol>
<li>使用命令 <font color='red'>tsc</font> index.ts 将 ts 文件转化为 js 文件。</li>
<li>在页面中，使用 script 标签引入生成的<font color='red'> js </font>文件（注意是 js 文件）。</li>
</ol>
<p><code>&lt;script src=&quot;./index.js&quot;&gt;&lt;/script&gt;</code></p>
<p>问题：每次修改 ts 文件后，都要重新运行 tsc 命令将 ts 转化为 js 。<br>解决方式：使用 tsc 命令的<font color='red'>监视模式</font>。</p>
<p><code>tsc --watch index.ts</code></p>
<p>解释： –watch 表示启用监视模式，只要重新保存了 ts 文件，就会自动调用 tsc 将 ts 转化为 js。</p>
<hr>
<br />

<h3 id="9-3-DOM操作"><a href="#9-3-DOM操作" class="headerlink" title="9.3 DOM操作"></a>9.3 DOM操作</h3><h4 id="9-3-1-概述"><a href="#9-3-1-概述" class="headerlink" title="9.3.1 概述"></a>9.3.1 概述</h4><ol>
<li><p>DOM（Document Object Modal）：文档对象模型</p>
<p>DOM 是浏览器提供的（ 浏览器特有），专门用来 操作网页内容的一些 JS 对象。<br>HTML：超文本标记语言，用来创建网页结构。</p>
<p>目的：让我们可以使用 JS/TS 代码来操作页面（HTML）内容，让页面“动”起来，从而实现 Web 开发。</p>
<p>两者的关系：浏览器根据 HTML 内容创建相应的 DOM 对象，也就是：每个 HTML 标签都有对应的 DOM 对象</p>
<p><img src="https://i.loli.net/2020/08/07/zmDMBr6yutvpnf7.png" alt=""></p>
<center style="font-size:15px;color:#C0C0C0;">图1</center>



</li>
</ol>
<hr>
<ol start="2">
<li>学习四个常用 DOM 操作：1 .获取 DOM 元素（DOM 对象） 2 .设置样式 3 .设置内容 4 .绑定（解绑）事件。</li>
</ol>
<p>DOM 操作的套路（技巧）：先找人 后做事。</p>
<ul>
<li>找人：获取 DOM 元素。</li>
<li>做事：设置样式、内容、绑定（解绑）事件。</li>
</ul>
<p><code>document.title = &#39;等你下课&#39;</code></p>
<blockquote>
<p> <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document">document-MDN文档</a>，<a href="https://www.w3school.com.cn/jsref/dom_obj_document.asp">document–w3cschool</a>;</p>
</blockquote>
<p>比如： 将 p 标签中的内容修改为：天青色等烟雨而我在等你。</p>
<p>步骤： 1 获取 p 元素 2 设置内容。</p>
<blockquote>
<p>html里面教标签。js 与 ts 里面叫元素</p>
</blockquote>
<hr>
<h4 id="9-3-2-获取元素"><a href="#9-3-2-获取元素" class="headerlink" title="9.3.2 获取元素"></a>9.3.2 获取元素</h4><p>常用方法有两个：</p>
<ul>
<li><p>querySelector(selector) 作用：获取某一个 DOM 元素。</p>
</li>
<li><p>querySelectorAll(selector) 作用：同时获取多个 DOM 元素。</p>
<blockquote>
<p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/query">query</a>; <a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/selector">selector</a>; <a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/query%20selector">query selector</a> ; </p>
</blockquote>
</li>
</ul>
<ol>
<li><p>获取一个DOM元素：</p>
<p><code>document.querySelector(selector)</code></p>
<p>document 对象：文档对象（整个页面），是操作页面内容的入口对象。</p>
<ul>
<li>想操作页面内容，必须先拿到document对象；让我们回想一下对象的使用；</li>
</ul>
<p>selector 参数：是一个 CSS 选择器（标签、类、id 选择器等）。</p>
<p>作用：查询（获取）与选择器参数匹配的 DOM 元素，但是，只能获取到<font color='red'>第一个！</font><br>推荐：使用<font color='red'> id </font>选择器（唯一）。</p>
<p><code>let title = document.querySelector(&#39;#title&#39;)</code></p>
<p>解释：获取页面中id为title的DOM元素。</p>
</li>
</ol>
<h5 id="2-类型断言"><a href="#2-类型断言" class="headerlink" title="2. 类型断言"></a>2. 类型断言</h5><p>问题：调用 querySelector() 通过 id 选择器获取 DOM 元素时，拿到的元素类型都是 Element。</p>
<p>因为无法根据 id 来确定元素的类型，所以，该方法就返回了一个 宽泛的类型：元素（Element）类型。</p>
<p>不管是 h1 还是 img 都是元素。</p>
<p>导致新问题：无法访问 img 元素的 src 属性了。</p>
<p>因为：Element 类型只包含所有元素共有的属性和方法（比如：id 属性）。</p>
<blockquote>
<p>在ts中，img.src 会报错。img.id，title.id 就不会；id是大家都有的，而有些是特有的</p>
</blockquote>
<ul>
<li><p>解决方式：使用<strong>类型断言</strong>，来手动指定 更 加具体的类型（比如，此处应该比 Element 类型更加具体）。</p>
<p>语法：</p>
<p><code>值 as 更具体的类型</code></p>
<p>比如：</p>
<p><code>let img = document.querySelector(&#39;#image&#39;) as HTMLImageElement</code></p>
<p>解释：我们确定 id=”image” 的元素是图片元素，所以，我们将类型指定为 HTMLImageElement。</p>
<p>我们怎么知道什么元素是什么类型呢？</p>
<p>技巧：通过 <font color='red'> console.dir()</font> 打印 DOM 元素，在属性的最后面，即可看到该元素的类型。</p>
<p><img src="https://i.loli.net/2020/08/07/Ove5uEjBF6cwJpA.png" alt=""></p>
<blockquote>
<p><code>console.dir(title)</code>; <code>console.dir(img)</code>;</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Console/dir">console.dir – MDN文档</a></p>
</blockquote>
</li>
<li><p>类型断言：手动指定 <strong>更 加具 体（精确）</strong>的类型。</p>
</li>
</ul>
<hr>
<h5 id="3-获取多个元素"><a href="#3-获取多个元素" class="headerlink" title="3. 获取多个元素"></a>3. 获取多个元素</h5><p><code>document.querySelectorAll(selector)</code></p>
<p>作用：获取<font color='red'>所有</font>与选择器参数匹配的 DOM 元素，<strong>返回值</strong>是一个列表。</p>
<p>推荐：使用  class 选择器。</p>
<p>示例：</p>
<p><code>let list = document.querySelectorAll(&#39;.a&#39;)</code></p>
<p>解释：获取页面中所有 class 属性包含 a 的元素。</p>
<p>接下来我们在代码中体会一下：</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta">meta – MDN文档</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;b a&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;a c&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;c a b&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例：获取带有.a类名的元素列表</span></span><br><span class="line"><span class="keyword">let</span> list = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.a&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(list)</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="9-3-3-操作文本内容"><a href="#9-3-3-操作文本内容" class="headerlink" title="9.3.3 操作文本内容"></a>9.3.3 操作文本内容</h4><ol>
<li><p>读取</p>
<p><code>dom.innerText</code></p>
</li>
<li><p>设置</p>
<p><code>dom.innerText = &#39;等你下课&#39;</code></p>
<p>注意：需要通过<strong>类型断言</strong>来指定 DOM 元素的具体类型，才可以使用  innerText 属性。</p>
<blockquote>
<p>emmm，我以前不会类型断言的时候也用过啊</p>
<p>那个时候我记得是js，用的是getElement</p>
<p>可惜那个时候不会写md笔记，不然现在肯定在学vue，node.js了；</p>
</blockquote>
<p>注意：设置内容时，会 覆盖原来的内容。如何实现追加内容（比如，张虹成 → 张虹成– 彭华）？</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">dom.innerText = dom.innerText + <span class="string">&#x27; – 彭华&#x27;</span></span><br><span class="line"><span class="comment">// 简化</span></span><br><span class="line">dome.innerText += <span class="string">&#x27; – 彭华&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>练习：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>xxxooo<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>试试？<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>再试试？<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;b a&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;a c&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;c a b&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    获取元素 和 innerText</span></span><br><span class="line"><span class="comment">    要求： 给所有 P 标签的内容前面，添加 &#x27;[自己的索引]&#x27;</span></span><br><span class="line"><span class="comment">    1 → [0]1       2 → [1]2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 获取所有的P元素列表（可以遍历）</span></span><br><span class="line"><span class="keyword">let</span> list = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.a&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(list) // 看看效果</span></span><br><span class="line"><span class="comment">// 2. 遍历p元素列表，拿到每一个p元素以及索引号</span></span><br><span class="line">list.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item, index)</span><br><span class="line">    <span class="comment">// 此时可以在浏览器F12的console里面打开打印出来的 元素 与 索引号</span></span><br><span class="line">    <span class="comment">// 此时的item 是 Element 类型</span></span><br><span class="line">    <span class="comment">// 因需要访问item（P 元素）的 innerText 属性，所以要 类型断言 指定更加具体的类型</span></span><br><span class="line">    <span class="keyword">let</span> p = item <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line">    <span class="comment">// 3. 通过索引号拼接内容，然后甚至文本内容</span></span><br><span class="line">    p.innerText = <span class="string">&#x27;[&#x27;</span> + index + <span class="string">&#x27;]&#x27;</span> + p.innerText</span><br><span class="line">    <span class="comment">//现在访问的是p，不是item;为什么不是item？</span></span><br><span class="line">    <span class="comment">//item只是是个参数，因为一系列逻辑函数而获取了innerText,实则无法改变item;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<p><img src="https://i.loli.net/2020/08/07/MIBGFp4JUjCdml9.png" alt=""></p>
<center style="font-size:15px;color:#C0C0C0;">图1</center>

<br />

<hr>
</li>
</ol>
<h4 id="9-3-4-样式操作"><a href="#9-3-4-样式操作" class="headerlink" title="9.3.4 样式操作"></a>9.3.4 样式操作</h4><p>两种方式：</p>
<ul>
<li>dom.style 属性：行内样式操作，可以设置每一个样式属性（比如，字体大小、文字颜色等）。</li>
<li>dom.classList 属性：类样式操作，也就是操作类名，比如，添加类名、移除类名等。</li>
</ul>
<h5 id="1-style-属性（行内样式）"><a href="#1-style-属性（行内样式）" class="headerlink" title="1. style 属性（行内样式）"></a>1. style 属性（行内样式）</h5><p>   读取：</p>
<p>   <code>dom.style.样式名称</code></p>
<p>   设置：</p>
<p>   <code>dom.style.样式名称 = 样式值</code></p>
<p>   说明：所有的样式名称都与  CSS 相通，但命名规则为驼峰命名法。</p>
   <figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">dom.style.fontSize</span> = <span class="string">&#x27;30px&#x27;</span></span><br><span class="line"><span class="attr">dom.style.display</span> = <span class="string">&#x27;none&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>css里面是 font-size,这里就不是了</p>
<p>因为style又是一个对象，所以可以两个点，dom.style.</p>
</blockquote>
<h5 id="2-classList-属性（类样式）"><a href="#2-classList-属性（类样式）" class="headerlink" title="2. classList 属性（类样式）"></a>2. classList 属性（类样式）</h5><p>包含三个常用方法：添加、移除、判断是否存在。</p>
<ol>
<li><p>添加：</p>
<p><code>dom.classList.add(类名1, 类名2, ...)</code></p>
<blockquote>
<p>classList也是对象</p>
</blockquote>
<p>参数表示：要添加的类名，可以同时添加多个。</p>
<p>比如：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="keyword">class</span>=<span class="string">&quot;a&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">dom.classList.add(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>) <span class="comment">// 添加 class 样式 ==&gt; class=&quot;a b c&quot;</span></span><br></pre></td></tr></table></figure>

<p>举例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;txt&quot;</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>2333<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>+</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.b</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.c</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>别在ts这边写多了后，忘记了css那边结尾的“；”号</p>
</blockquote>
<p>加ts</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#txt&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line">p.classList.add(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>光写<code>p.classList.add(&#39;b&#39;, &#39;c&#39;)</code>会报错；</p>
<p>找到了以前的学习的写法：</p>
<blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changecolor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x=<span class="built_in">document</span>.getElementById(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">    x.style.color=<span class="string">&quot;red&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>还是有申明 var，这里的var 我记得是 变量，然后let 是常量；</p>
<p>而ts这边let 是变量，const 是常量；</p>
<p>目前记得是这样，事实怎样，看事实；</p>
</blockquote>
</blockquote>
</li>
<li><p>移除：</p>
<p><code>dom.classList.remove(类名1, 类名2, ...)</code></p>
<p>参数表示：要移除的类名，可以同时移除多个。</p>
<p>比如：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="keyword">class</span>=<span class="string">&quot;a b c&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">dom.classList.remove(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>) <span class="comment">// 移除 class 样式 ==&gt; class=&quot;b&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>判断类名是否存在：</p>
<p><code>let has = dom.classList.contains(类名)</code></p>
<blockquote>
<p><a href="https://fanyi.baidu.com/?aldtype=85#en/zh/contains">contains – 音标</a></p>
<p>contains 有返回值，返回值是布尔值；</p>
</blockquote>
<p>参数表示：要判断存在的类名。</p>
<p>比如：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="keyword">class</span>=<span class="string">&quot;b&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">dom.classList.contains(<span class="string">&#x27;a&#x27;</span>) <span class="comment">// false</span></span><br><span class="line">dom.classList.contains(<span class="string">&#x27;b&#x27;</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<p>在上面1.添加的例子中可以加入：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="built_in">has</span> = <span class="keyword">p</span>.classList.contains(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">has</span>)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h5 id="3-总结-1"><a href="#3-总结-1" class="headerlink" title="3. 总结"></a>3. 总结</h5><p>总结：<br>类样式（classList）的操作有三种：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加</span></span><br><span class="line">dom.classList.add(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"><span class="comment">// 移除</span></span><br><span class="line">dom.classList.remove(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="comment">// 判断是否存在</span></span><br><span class="line"><span class="keyword">let</span> has = dom.classList.contains(<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="9-3-5-操作事件"><a href="#9-3-5-操作事件" class="headerlink" title="9.3.5 操作事件"></a>9.3.5 操作事件</h4><p>在浏览网页时，我们经常会通过移入鼠标、点击鼠标、敲击键盘等操作，来使用网站提供的功能。</p>
<p>如果要让我们自己实现这样的功能，就需要通过<font color='red'>操作事件</font>来实现了。</p>
<p>实际上，移入鼠标、点击鼠标、敲击键盘等，都是常见的 DOM 事件。</p>
<p>操作事件的两个方法：</p>
<ul>
<li>addEventListener 添加（绑定）事件。</li>
<li>removeEventListener 移除（解绑）事件。</li>
</ul>
<h5 id="1-添加事件"><a href="#1-添加事件" class="headerlink" title="1. 添加事件"></a>1. 添加事件</h5><ol>
<li><p>addEventListener 添加事件</p>
<p>作用：给 DOM 元素添加事件。</p>
<p><code>dom.addEventListener(事件名称, 事件处理程序)</code></p>
<blockquote>
<p><a href="https://fanyi.baidu.com/?aldtype=85#en/zh/Event%20Listener">Event Listener –百度翻译</a> ; </p>
</blockquote>
<p>事件名称：字符串，比如： ‘click’ （鼠标点击事件）、 ‘mouseenter’ （鼠标进入事件）。</p>
<p>事件处理程序：回调函数，指定要实现的功能，该函数会在触发事件时调用。<br>示例：鼠标点击按钮，打印内容。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标点击事件触发了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>1.2 鼠标移入也是一样:</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标移入了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h5 id="2-事件对象"><a href="#2-事件对象" class="headerlink" title="2. 事件对象"></a>2. 事件对象</h5><p>事件对象（<span id="event">event</span>），是事件处理程序（回调函数）的参数。</p>
<p>表示：与当前事件相关的信息，比如：事件类型（type）、触发事件的 DOM 元素（target）等。(event.target 会 返回 使用 事件的 html内容 （话说不叫方法么，渐渐的叫事件了）)</p>
<blockquote>
<p>btn.addEventListener(‘click’, function (<font color='red'>event</font>) {<br>    console.log(event.type) // click<br>    console.log(event.target) // btn 元素<br>})</p>
<blockquote>
<p>本来回调函数就是指，a函数作为b函数的参数。</p>
<p>而这里，c对象又作为a函数的参数：b(a(c))；套娃呢？</p>
</blockquote>
<p><code>console.log(event)</code>可以打印出event对象有哪些属性；</p>
<ol start="2">
<li><p>event 会自动类型注解 跟随事件</p>
<p><img src="https://i.loli.net/2020/08/09/UOJ3C9ri1bElGNs.png" alt="1"></p>
<p>确实是能代理当前事件。当前被使用事件.xx属性或方法 == event.xx属性或方法</p>
</li>
</ol>
</blockquote>
<p>2.2 实例：</p>
<p>添加事件，让当前按钮的文字大小变为30px；</p>
<ul>
<li>方法一</li>
</ul>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>) <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event.type) <span class="comment">// click</span></span><br><span class="line">  <span class="built_in">console</span>.log(event.target) <span class="comment">// btn 元素</span></span><br><span class="line">  btn.style.fontSize = <span class="string">&#x27;30px&#x27;</span> <span class="comment">//因为这个类型是string所以这样，VScode鼠标放上可查看；</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li><p>方法二</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event.type) <span class="comment">// click</span></span><br><span class="line">  <span class="built_in">console</span>.log(event.target) <span class="comment">// btn 元素</span></span><br><span class="line">    <span class="keyword">let</span> target = event.target <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line">    target.style.fontSize = <span class="string">&#x27;30px&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<br />

<hr>
<h5 id="3-移除事件"><a href="#3-移除事件" class="headerlink" title="3. 移除事件"></a>3. 移除事件</h5><ol>
<li>removeEventListener 移除事件</li>
</ol>
<p>作用：移除给 DOM 元素添加的事件，移除后，事件就不再触发了。</p>
<p><code>dom.removeEventListener(事件名称, 事件处理程序)</code></p>
<p>事件名称：同添加事件的第一个参数。</p>
<p>事件处理程序： <strong>必须要 跟 添加 事 件时的事件处理程序是同一 个</strong>，否则无法移除！</p>
<blockquote>
<p>到底什么意思？看下面例子：</p>
</blockquote>
<p>1.1 正确方式：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line">btn.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>从上面能感觉到：</p>
<p>回调函数，是专门，把参数作为函数使用。不是被迫把一个函数作为参数；</p>
<p>也许那些回调函数的本身，只是一个桥梁or动作，真正要实现的内容，是作为参数的函数；</p>
</blockquote>
<p>说明：添加和移除事件时，事件处理程序是同一个，都是函数 handleClick。</p>
<blockquote>
<p>要有明确的函数名；</p>
</blockquote>
<p>1.2 错误演示：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;)</span><br><span class="line">btn.removeEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;&#125;)</span><br></pre></td></tr></table></figure>

<p>注意：以上两个函数虽然长的一样，却是不同的函数（双胞胎，不是同一个人）。</p>
<blockquote>
<p>虽然都是function () {}，但是 是两个 不同的函数。</p>
</blockquote>
<ol start="2">
<li><p>练习：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;鼠标点击事件触发了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>使用移除方法，把添加的addEventListener事件，移除；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;点我，你再点下&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line"><span class="comment">// 点击移除事件按钮；</span></span><br><span class="line"><span class="keyword">let</span> removeBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#remove&#x27;</span>)</span><br><span class="line">removeBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 移除btn按钮的点击事件</span></span><br><span class="line">  btn.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>写法二：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;点我，你再点下&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line"><span class="comment">// 点击移除事件按钮；</span></span><br><span class="line"><span class="keyword">let</span> removeBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#remove&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeBtn_2</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    btn.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line">&#125;</span><br><span class="line">removeBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>, removeBtn_2)</span><br></pre></td></tr></table></figure>

<p>VScode实验，两个写法都有效；也许第二个写法要多几个字符。但观看美观；</p>
<p>再调整一下位置：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> removeBtn = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#remove&#x27;</span>)<span class="comment">// 点击移除事件按钮；</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;点我，你再点下&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeBtn_2</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    btn.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line">removeBtn.addEventListener(<span class="string">&#x27;click&#x27;</span>, removeBtn_2)</span><br></pre></td></tr></table></figure>

<p>good，以后我就这样写，这样看这舒服太多；</p>
</li>
</ol>
<h6 id="3-只触发一次"><a href="#3-只触发一次" class="headerlink" title="3. 只触发一次"></a>3. 只触发一次</h6><p>如果事件<font color='red'>只触发一次</font>，可以在添加事件时处理</p>
<p>处理方式：传入第三个参数，将 once 属性设置为 true。</p>
<p><code>btn.addEventListener(&#39;click&#39;, function () &#123;&#125;, &#123; once: true &#125;)</code></p>
<p>once ：如果值为 true，会在触发事件后，自动将事件移除，达到只触发一次的目的。</p>
<blockquote>
<p><code>&#123; once: true &#125;</code>是对象的写法，还是第一次见。直接把键值对写出来，然后用{}当参数。不知其中有什么深意没，资料没说，我也不纠结了。先好好学习眼前的</p>
</blockquote>
<hr>
<h5 id="4-函数形式说明"><a href="#4-函数形式说明" class="headerlink" title="4. 函数形式说明"></a>4. 函数形式说明</h5><p>函数声明形式的事件处理程序说明</p>
<ol>
<li><p>可以先使用函数，再声明函数。<strong>–不建议</strong></p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">btn.add<span class="constructor">EventListener(&#x27;<span class="params">click</span>&#x27;, <span class="params">handleClick</span>)</span></span><br><span class="line"><span class="keyword">function</span> handle<span class="constructor">Click()</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>原因：函数声明在当前 ts 文件中的任意位置都有定义。</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1 先调用函数</span></span><br><span class="line"><span class="function"><span class="keyword">fn</span></span>()</span><br><span class="line"><span class="comment">// 2 再声明函数</span></span><br><span class="line">function <span class="function"><span class="keyword">fn</span></span>() &#123;&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>也就是说，声明函数（创建函数）写在最下面也是可以的。</p>
<p>但明显不规范，不方便看。</p>
<p>一般都是先创建后使用。我不建议使用此写法；</p>
</blockquote>
</li>
<li><p>使用事件对象参数时，应该<font color='red'>指定类型注解</font>，否则，访问事件对象的属性时没有任何提示。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(event.target)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.1 可以在vscode试试：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;点我，再点试试&#x27;</span>,event.)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时 event.  后面没有任何提示；</p>
<p><code>event: MouseEvent</code>后就有提示；</p>
<blockquote>
<p>event到底是何许？是不是忘记了？<a href="#event">点击回到event讲解处</a></p>
</blockquote>
<p>2.2 如果是使用的回调+匿名，会自动给 类型注解；</p>
<blockquote>
<p><a href="https://www.bilibili.com/video/BV1UD4y1m7Gw?p=127">https://www.bilibili.com/video/BV1UD4y1m7Gw?p=127</a></p>
<p>04:35 处，讲解；</p>
</blockquote>
<p>技巧：使用原始方式（匿名回调函数）查看参数类型。</p>
</li>
</ol>
<hr>
<h2 id="10-项目：下棋游戏"><a href="#10-项目：下棋游戏" class="headerlink" title="10. 项目：下棋游戏"></a>10. 项目：下棋游戏</h2><p><a href="../2-ts_first_item/#10-项目：下棋游戏">转移到了 5-ts first item</a></p>
<blockquote>
<p><img src="https://i.loli.net/2020/08/08/e7rOmNwfpD3sdTg.png" alt=""></p>
<p>由这个和：</p>
<p><a href="https://cqilin.github.io/typescript/26-typescript_introduction/">https://cqilin.github.io/typescript/26-typescript_introduction/</a></p>
<p><a href="https://cqilin.github.io/typescript/5-ts_first_item/">https://cqilin.github.io/typescript/5-ts_first_item/</a></p>
<p>而感得出，跳转文件；</p>
<p><code>[转移到了 5-ts first item](../5-ts_first_item/#10-项目：下棋游戏)</code></p>
<p>都在typescript文件下，那先返回上一级：../</p>
<p>然后是5-ts_first_item ：../5-ts_first_item</p>
<p>但这样是无法跳转的；然后早就知道图上①处的地方。但是之前没观察②处</p>
<p>这次看了②处，才知道是url发生了改变；正好有#定位，用之</p>
</blockquote>
<h3 id="10-1-游戏准备"><a href="#10-1-游戏准备" class="headerlink" title="10.1 游戏准备"></a>10.1 游戏准备</h3><h4 id="10-1-1-游戏演示"><a href="#10-1-1-游戏演示" class="headerlink" title="10.1.1 游戏演示"></a>10.1.1 游戏演示</h4><p>玩法：两个玩家，一个玩家使用（X），一个玩家使用（O），轮流在棋盘上下棋（点击单元格）。</p>
<p>获胜条件：横、竖、斜（对角线）三个棋子相同。<br>平局：棋盘满子，但是，不满足任何一种获胜条件。</p>
<h4 id="10-1-2-游戏模板说明"><a href="#10-1-2-游戏模板说明" class="headerlink" title="10.1.2 游戏模板说明"></a>10.1.2 游戏模板说明</h4><p>重点：运用学到的 TS 知识，来开发下棋游戏。<br>游戏的模板（HTML、CSS），已准备好，直接使用即可。</p>
<p>模板（HTML、CSS）的说明：</p>
<ol>
<li>下一步提示：给游戏面板（#bord）标签，添加 x 或 o 类名。</li>
<li>下棋（点击单元格）：给单元格（.cell）标签，添加 x 或 o 类名。</li>
<li>展示和隐藏获胜信息：设置获胜信息面板（#message）标签的样式属性 display。</li>
</ol>
<h3 id="10-2-点击下棋"><a href="#10-2-点击下棋" class="headerlink" title="10.2 点击下棋"></a>10.2 点击下棋</h3><h4 id="10-2-1-单元格点击"><a href="#10-2-1-单元格点击" class="headerlink" title="10.2.1 单元格点击"></a>10.2.1 单元格点击</h4><p>效果：点击棋盘的任意单元格，单元格显示 X（默认）。</p>
<ol>
<li>获取到所有的单元格列表。</li>
<li>遍历单元格列表，给每一个单元格添加点击事件。</li>
<li>给当前被点击的单元格添加类名 x。</li>
</ol>
<p>优化（1）：防止单元格重复点击，在添加事件时，使用 once 属性，让单元格只能被点击一次。</p>
<p>优化（2）：使用函数声明形式的事件处理程序（代码多了后，代码结构会更清晰）。</p>
<h4 id="10-2-2-切换玩家"><a href="#10-2-2-切换玩家" class="headerlink" title="10.2.2 切换玩家"></a>10.2.2 切换玩家</h4><p>效果：玩家（X）和玩家（O）轮流交替下棋。</p>
<ol>
<li>创建一个存储当前玩家的变量（currentPlayer），默认值为：x。</li>
<li>将添加给单元格时写死的类名 x ，替换为变量（currentPlayer）的值。</li>
<li>切换到另一个玩家：在添加类名（下棋完成一步）后，根据当前玩家，得到另外一个玩家。</li>
<li>处理下一步提示：移除游戏面板中的 x 和 o 类名，添加下一个玩家对应的类名。</li>
</ol>
<hr>
<h2 id="11-提问"><a href="#11-提问" class="headerlink" title="11. 提问"></a>11. 提问</h2><ol>
<li><a href="#点语法">如何使用对象的属性或方法</a> ？（点语法）</li>
<li><a href="#event">点击回到event讲解处</a></li>
<li></li>
</ol>
<hr>
<p>[^冗]: 拼 音 <strong>rǒng</strong> 基本含义：1.多余的：～员。文章～长。2.烦琐；繁忙：～杂。～忙。3.繁忙的事：拨～。<br>[^void]: void 英 [vɔɪd]   美 [vɔɪd]  n.空间;空白;真空;空虚  adj.缺乏;没有;无效的;空的;空空如也  v.使无效;宣布…作废;取消;排泄，排放(大小便)</p>
<p>[^calc_Area]: 面积计算 ；百度翻译</p>
<p>​</p>
]]></content>
      <categories>
        <category>typescript</category>
      </categories>
      <tags>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>2-typescript_First_Small_projects</title>
    <url>/1-(0~50)/2-ts_first_item/</url>
    <content><![CDATA[<h2 id="10-项目：下棋游戏"><a href="#10-项目：下棋游戏" class="headerlink" title="10. 项目：下棋游戏"></a>10. 项目：下棋游戏</h2><p><a href="https://cqilin.gitee.io/web_learn/">小作品网址</a></p>
<h3 id="10-0-html与css准备；"><a href="#10-0-html与css准备；" class="headerlink" title="10.0 html与css准备；"></a>10.0 html与css准备；</h3><h4 id="10-0-1-准备初始的html"><a href="#10-0-1-准备初始的html" class="headerlink" title="10.0.1 准备初始的html"></a>10.0.1 准备初始的html</h4><a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Tic Tac Toe 井字游戏<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tic Tac Toe 井字游戏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改h1的css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 修改p标签的外边距 */</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置背景颜色 */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f9f2e7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标题 */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#477998</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<ol start="2">
<li><p>创建 .container，设置棋盘的长宽。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tic Tac Toe 井字游戏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">471px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">471px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>2.1 在里面 创建 <code>&lt;div id=&quot;bord&quot; class=&quot;game-board x&quot;&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tic Tac Toe 井字游戏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bord&quot;</span> <span class="attr">class</span>=<span class="string">&quot;game-board x&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>board：板子；game-board: 游戏板；</p>
<p>id=”bord” ； 用于ts定位；</p>
<p>x；也许代表x轴；</p>
</blockquote>
</li>
<li><p>为了节省时间这次先全给出，笔记其难点；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Tic Tac Toe<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Tic Tac Toe<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 游戏面板（棋盘） --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bord&quot;</span> <span class="attr">class</span>=<span class="string">&quot;game-board x&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cell&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 游戏获胜信息面板 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;message&quot;</span> <span class="attr">class</span>=<span class="string">&quot;game-message&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;winner&quot;</span>&gt;</span>X 赢了！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;restart&quot;</span>&gt;</span>重新开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>css全：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f9f2e7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 标题 */</span></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#477998</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 游戏内容容器 */</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">471px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">471px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 游戏面板棋盘 */</span></span><br><span class="line"><span class="selector-class">.game-board</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">471px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">471px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.game-board</span><span class="selector-class">.x</span> <span class="selector-class">.cell</span><span class="selector-pseudo">:not(.x)</span><span class="selector-pseudo">:not(.o)</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: lightgray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.game-board</span><span class="selector-class">.o</span> <span class="selector-class">.cell</span><span class="selector-pseudo">:not(.x)</span><span class="selector-pseudo">:not(.o)</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: lightgray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 棋盘 - 行 */</span></span><br><span class="line"><span class="selector-class">.row</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.row</span><span class="selector-pseudo">:last-child</span> <span class="selector-class">.cell</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 棋盘 - 单元格 */</span></span><br><span class="line"><span class="selector-class">.cell</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">157px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">157px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">157px</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">6px</span> solid <span class="number">#546363</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">6px</span> solid <span class="number">#546363</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">88px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Gill Sans&#x27;</span>, <span class="string">&#x27;Gill Sans MT&#x27;</span>, Calibri, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cell</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 游戏获胜信息面板 */</span></span><br><span class="line"><span class="selector-class">.game-message</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">69</span>, <span class="number">133</span>, <span class="number">136</span>, <span class="number">0.4</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* winner 获胜者 */</span></span><br><span class="line"><span class="selector-class">.game-message</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">180px</span> <span class="number">0</span> <span class="number">40px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 重新开始游戏按钮 */</span></span><br><span class="line"><span class="selector-class">.game-message</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#517304</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#517304</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* x 玩家 */</span></span><br><span class="line"><span class="selector-class">.cell</span><span class="selector-class">.x</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#01a8c6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* o 玩家 */</span></span><br><span class="line"><span class="selector-class">.cell</span><span class="selector-class">.o</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8fbe01</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="10-0-2-标签解"><a href="#10-0-2-标签解" class="headerlink" title="10.0.2 标签解"></a>10.0.2 标签解</h4><h5 id="1-cursor-pointer"><a href="#1-cursor-pointer" class="headerlink" title="1.cursor: pointer"></a>1.cursor: pointer</h5><p>cursor 属性规定要显示的光标的类型（形状）。</p>
<p><a href="https://www.w3school.com.cn/cssref/pr_class_cursor.asp">https://www.w3school.com.cn/cssref/pr_class_cursor.asp</a></p>
<p>pointer    光标呈现为指示链接的指针（一只手）</p>
<h5 id="2-content-‘X’"><a href="#2-content-‘X’" class="headerlink" title="2. content: ‘X’;"></a>2. content: ‘X’;</h5><p>content 属性与 :before 及 :after 伪元素配合使用，来插入生成内容。</p>
<p><a href="https://www.runoob.com/cssref/pr-gen-content.html">https://www.runoob.com/cssref/pr-gen-content.html</a></p>
<p>插入 ‘X’</p>
<h5 id="3-not-x-not-o"><a href="#3-not-x-not-o" class="headerlink" title="3. :not(.x):not(.o)"></a>3. :not(.x):not(.o)</h5><p>:not(<em>selector</em>) 选择器匹配非指定元素/选择器的每个元素。</p>
<p><a href="https://www.w3school.com.cn/cssref/selector_not.asp">https://www.w3school.com.cn/cssref/selector_not.asp</a></p>
<h5 id="4-game-board-x"><a href="#4-game-board-x" class="headerlink" title="4. .game-board.x"></a>4. .game-board.x</h5><p>同时包含两个类，同时包含 game-board 与 x 的class; </p>
<blockquote>
<p>必须一个class里面有这两个都在，才会有效果</p>
</blockquote>
<p>如果是分隔开：<code>.game-board .x</code>表示同时赋予这两个类各种属性</p>
<blockquote>
<p>两个class ；</p>
</blockquote>
<h4 id="10-0-3-flex布局"><a href="#10-0-3-flex布局" class="headerlink" title="10.0.3 flex布局"></a>10.0.3 flex布局</h4><blockquote>
<p>我想：为什么不 display：inline ；因为内联元素没有宽度。</p>
<p>宽度就是它的文字或图片的宽度，不可改变。</p>
<p><img src="https://i.loli.net/2020/08/09/pM4REPJYef51Tnq.png" alt="1"></p>
</blockquote>
<ol start="2">
<li><p>flex布局是什么？</p>
<p>flex布局语法：<a href="https://www.runoob.com/w3cnote/flex-grammar.html">https://www.runoob.com/w3cnote/flex-grammar.html</a></p>
<p>display:flex 布局–简书：<a href="https://www.jianshu.com/p/d9373a86b748/">https://www.jianshu.com/p/d9373a86b748/</a></p>
<p><a href="https://www.bilibili.com/video/BV14J4114768?p=416">黑马link老师</a>–不过这里讲的主要是为移动端服务</p>
</li>
</ol>
<hr>
<h3 id="10-1-游戏准备"><a href="#10-1-游戏准备" class="headerlink" title="10.1 游戏准备"></a>10.1 游戏准备</h3><h4 id="10-1-1-游戏演示"><a href="#10-1-1-游戏演示" class="headerlink" title="10.1.1 游戏演示"></a>10.1.1 游戏演示</h4><p>玩法：两个玩家，一个玩家使用（X），一个玩家使用（O），轮流在棋盘上下棋（点击单元格）。</p>
<p>获胜条件：横、竖、斜（对角线）三个棋子相同。<br>平局：棋盘满子，但是，不满足任何一种获胜条件。</p>
<h4 id="10-1-2-游戏模板说明"><a href="#10-1-2-游戏模板说明" class="headerlink" title="10.1.2 游戏模板说明"></a>10.1.2 游戏模板说明</h4><p>重点：运用学到的 TS 知识，来开发下棋游戏。<br>游戏的模板（HTML、CSS），已准备好，直接使用即可。</p>
<p>模板（HTML、CSS）的说明：</p>
<ol>
<li><p>下一步提示：给游戏面板（#bord）标签，添加 x 或 o 类名。</p>
</li>
<li><p>下棋（点击单元格）：给单元格（.cell）标签，添加 x 或 o 类名。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* x 玩家 */</span></span><br><span class="line"><span class="selector-class">.cell</span><span class="selector-class">.x</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#01a8c6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* o 玩家 */</span></span><br><span class="line"><span class="selector-class">.cell</span><span class="selector-class">.o</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8fbe01</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li>展示和隐藏获胜信息：设置获胜信息面板（#message）标签的样式属性 display。</li>
</ol>
<h3 id="10-2-点击下棋"><a href="#10-2-点击下棋" class="headerlink" title="10.2 点击下棋"></a>10.2 点击下棋</h3><h4 id="10-2-1-单元格点击"><a href="#10-2-1-单元格点击" class="headerlink" title="10.2.1 单元格点击"></a>10.2.1 单元格点击</h4><p>效果：点击棋盘的任意单元格，单元格显示 X（默认）。</p>
<ol>
<li><p>获取到所有的单元格列表。</p>
</li>
<li><p>遍历单元格列表，给每一个单元格添加点击事件。</p>
<blockquote>
<p><a href="../26-typescript_introduction/#2-事件对象">event笔记所在处</a>；</p>
</blockquote>
</li>
<li><p>给当前被点击的单元格添加类名 x。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">//console.log(cells)</span></span><br><span class="line"><span class="comment">// 2. 遍历单元格列表</span></span><br><span class="line">cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="keyword">let</span> cell_2 = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell_2.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span><br><span class="line">      <span class="comment">// console.log(&#x27;click&#x27;) // 打印出点击事件本身</span></span><br><span class="line">      <span class="comment">// console.log(&#x27;click&#x27;, event.target)</span></span><br><span class="line">      <span class="comment">// 2.2 获取事件对象的元素；</span></span><br><span class="line">      <span class="keyword">let</span> target = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">      <span class="comment">// 3. 给当前被点击的单元格添加类名 x。</span></span><br><span class="line">      target.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>回溯一下；</p>
<blockquote>
<p>4.1 我们要点击棋盘的任意单元格，单元格显示 X</p>
<p>4.2 得获取到所有单元格；</p>
<p><code>let cells = document.querySelectorAll(&#39;.cell&#39;)</code></p>
<p>4.3 获取到所有单元格后，它cells，成了一个数组。直接用它不行，一点全有效；得单独每个有效；获取到每一个，遍历；</p>
<p><code>cells.forEach(function (item) &#123;&#125;</code></p>
<p>4.4 获取到每一个后，添加点击事件；</p>
<p>4.4.1 item没有添加事件addEventListener的方法？是类型出错，类型注解；</p>
<p><code>let cell_2 = item as HTMLDivElement</code></p>
<p>4.4.2 添加点击事件；</p>
<p><code>cell_2.addEventListener(&#39;click&#39;, function ()&#123;&#125;</code></p>
<p>4.5 点击完成后，需要每次点击会添加一个x的class类；</p>
<p>4.5.1 找到相应的dom</p>
<p><code>cell_2.addEventListener(&#39;click&#39;, function (event)&#123;&#125;</code></p>
<p>4.5.2 添加类</p>
<p><code>event.target.classList.add(&#39;x&#39;)</code></p>
<p>报错找不到方法；</p>
<p>我们已知对应的dom是html的那边，找到相应的地方，vscode鼠标移动到。emm看不到？div看不到么。是div，类型注解它</p>
<p><code>let target = event.target as HTMLDivElement</code></p>
<p>再次添加类</p>
<p><code>event.target.classList.add(&#39;x&#39;)</code></p>
<p>over；</p>
</blockquote>
</li>
</ol>
<p>优化（1）：防止单元格重复点击，在添加事件时，使用 once 属性，让单元格只能被点击一次。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line">cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cell_2 = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell_2.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">let</span> target = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">      target.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    &#125;, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在9.3.5.3.3有说once；</p>
</blockquote>
<p>优化（2）：使用函数声明形式的事件处理程序（代码多了后，代码结构会更清晰）。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">let</span> target = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">      target.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cell_2 = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell_2.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>所以还是回到了我喜欢的模样；看我把forEach也拿出来；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1-1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">//console.log(cells)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 1-2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="keyword">let</span> cell_2 = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell_2.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>) <span class="comment">// 打印出点击事件本身</span></span><br><span class="line">    <span class="comment">// 1-3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1-2. 遍历单元格列表</span></span><br><span class="line">cells.forEach(forEach_1)</span><br></pre></td></tr></table></figure>

<p>这样才是最爽的；2020-8-9 12:56:56</p>
<ol start="3">
<li><p>注意</p>
<p>不过这么写，event不会自动给类型注解；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event: MouseEvent</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>) <span class="comment">// 打印出点击事件本身</span></span><br><span class="line">    <span class="comment">// 1-3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以要给类型注解；不然.target不会出；</p>
</li>
<li><p>同理；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 1-2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="keyword">let</span> cell_2 = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell_2.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也可以改为：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span> (<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="comment">// let cell_2 = item as HTMLDivElement</span></span><br><span class="line">    item.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h4 id="10-2-2-切换玩家"><a href="#10-2-2-切换玩家" class="headerlink" title="10.2.2 切换玩家"></a>10.2.2 切换玩家</h4><p>效果：玩家（X）和玩家（O）轮流交替下棋。</p>
<ol start="0">
<li><p>不能把target_3.classList.add(‘x’)，写死</p>
</li>
<li><p>创建一个存储当前玩家的变量（currentPlayer），默认值为：x。</p>
<blockquote>
<p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=Counter&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/current">current – 读音</a>；currentPlayer：当前玩家；</p>
</blockquote>
</li>
<li><p>将添加给单元格时写死的类名 x ，替换为变量（currentPlayer）的值。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> currentPlayer = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">target_3.classList.add(currentPlayer)</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p>切换到另一个玩家：在添加类名（下棋完成一步）后，根据当前玩家，得到另外一个玩家。</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event: MouseEvent</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>) <span class="comment">// 打印出点击事件本身</span></span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    <span class="comment">// 2-1.关键点：根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === <span class="string">&#x27;x&#x27;</span> ? <span class="string">&#x27;o&#x27;</span> : <span class="string">&#x27;x&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="4">
<li><p>处理下一步提示：移除游戏面板中的 x 和 o 类名，添加下一个玩家对应的类名。</p>
<blockquote>
<p>4.1 因为html那边是：<code>&lt;div id=&quot;bord&quot; class=&quot;game-board x&quot;&gt;</code></p>
<p>所以下一步提示一直是 X；</p>
<p>4.2 想让提示变成O，得把<code>game-board x</code> 变成<code>game-board o</code></p>
</blockquote>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2-1.关键点：根据当前玩家，得到另一个玩家</span></span><br><span class="line">currentPlayer = currentPlayer === <span class="string">&#x27;x&#x27;</span> ? <span class="string">&#x27;o&#x27;</span> : <span class="string">&#x27;x&#x27;</span></span><br><span class="line"><span class="comment">// 2-2.处理下一步提示；移除游戏面板中的 x 和 o 类名</span></span><br><span class="line"><span class="comment">// 2-2.1 先拿到对应的元素，正好有id=&#x27;bord&#x27;</span></span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(gameBord) <span class="comment">//看拿到没；</span></span><br><span class="line"><span class="comment">// 2-2.2 移除游戏面板中的 x 和 o 类名</span></span><br><span class="line">gameBord.classList.remov(<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;o&#x27;</span>)<span class="comment">//两个都要，有谁除谁</span></span><br><span class="line"><span class="comment">// 2-2.3 然后添加下一步应该要下的类名；</span></span><br><span class="line">game.Bord.classList.add(currentPlayer)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>突发奇想：如果让先手为o，如何修改？</p>
<p>将 let currentPlayer = ‘x’ 改为   ‘o’ 吗？</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">let</span> currentPlayer = <span class="string">&#x27;o&#x27;</span></span><br></pre></td></tr></table></figure>

<p>..2020-8-9 13:46:31</p>
</li>
</ol>
<hr>
<h4 id="10-2-3-枚举"><a href="#10-2-3-枚举" class="headerlink" title="10.2.3 枚举"></a>10.2.3 枚举</h4><h5 id="1-为什么要使用枚举？"><a href="#1-为什么要使用枚举？" class="headerlink" title="1. 为什么要使用枚举？"></a>1. 为什么要使用枚举？</h5><p>使用变量（currentPlayer）处理当前玩家，存在的问题：<br>变量的类型是 string，它的值可以是任意字符串。</p>
<p>如果不小心写错了（o → 0），代码不会报错，但功能就无法实现了，并且很难找错。</p>
<p>也就是：string 类型的变量，取值太宽泛，无法很好的限制值为 x 和 o。</p>
<p><font color='red'>枚举</font>是组织有关联数据的一种方式（比如，x 和 o 就是有关联的数据）。</p>
<p>使用场景：当变量的值， <red>只能是几个固定值中的一个</red>，应该使用<red>枚举</red>来实现。</p>
<p>注意：<font color='red'>JS 中没有枚举</font>，这是TS为了弥补 JS 自身不足而新增的。</p>
<h5 id="2-语法"><a href="#2-语法" class="headerlink" title="2. 语法"></a>2. 语法</h5><p>创建枚举的语法：</p>
<p><code>enum 枚举名称 &#123; 成员1, 成员2, ... &#125;</code></p>
<p>enum是关键字，只有使用它创建；</p>
<p>示例：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> &#123; <span class="title">Female</span>, <span class="title">Male</span> &#125;</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Player</span> &#123; <span class="title">X</span>, <span class="title">O</span> &#125;</span></span><br></pre></td></tr></table></figure>

<p>约定枚举名称、<strong>成员名称</strong>以<red>大</red>写字母开头。</p>
<blockquote>
<p>所以这里原本是小写的x和o，也是大写X,O；</p>
</blockquote>
<p>多个成员之间使用逗号（,）分隔。</p>
<p>枚举中的成员哪来的？自己定的</p>
<p>注意：枚举中的成员，根据功能自己指定！</p>
<p>注意：枚举中的成员不是键值对！</p>
<h5 id="3-使用枚举"><a href="#3-使用枚举" class="headerlink" title="3. 使用枚举"></a>3. 使用枚举</h5><p>枚举是一种类型，因此，<strong>可以其作为变量的类型注解</strong>。</p>
<blockquote>
<p>就像string，number一样；接口也是一种类型。emmm</p>
</blockquote>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> &#123; <span class="title">Female</span>, <span class="title">Male</span> &#125;</span></span><br><span class="line">let <span class="symbol">userGender:</span> Gender</span><br></pre></td></tr></table></figure>

<blockquote>
<p>视频说的是，得类型注解了，才能访问枚举中的成员；</p>
<p>let userGender: Gender；才能  userGender = Gender.Female</p>
<p>未实验；2020-8-10 05:14:08</p>
</blockquote>
<p>访问枚举（Gender）中的成员，作为变量（userGender）的值：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">userGender</span> = Gender.Female</span><br><span class="line"><span class="attr">userGender</span> = Gender.Male</span><br></pre></td></tr></table></figure>

<p>注意：枚举成员是只读的，也就是说枚举中的成员可以访问，但是不能赋值！</p>
<p><code>Gender.Female = &#39;男&#39; // 错误！</code></p>
<h5 id="4-问题：将枚举成员赋值给变量，变量的值是什么呢？"><a href="#4-问题：将枚举成员赋值给变量，变量的值是什么呢？" class="headerlink" title="4. 问题：将枚举成员赋值给变量，变量的值是什么呢？"></a>4. 问题：将枚举成员赋值给变量，变量的值是什么呢？</h5><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">enum</span> Gender &#123; Female, Male &#125;</span><br><span class="line"><span class="keyword">let</span> userGender: Gender = Gender.Female</span><br><span class="line"><span class="built_in">console</span>.log(userGender) <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(Gender.Female) <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(Gender.Male) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>

<p><strong>枚举成员是有值的</strong>，默认为：从 0 开始自增的数值。<br>我们把，枚举成员的值为数字的枚举，称为：<red>数字枚举</red>。</p>
<blockquote>
<p>什么？值不是成员本身么，打印出来居然是数字；</p>
<p>不过由这句话得出：枚举成员的值为数字的枚举，也有值不是数字的枚举；</p>
</blockquote>
<p>当然，也可以给枚举中的成员初始化值。</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> </span>&#123; Female = <span class="number">1</span>, Male &#125;  <span class="comment">// Female =&gt; 1 Male =&gt; 2</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> </span>&#123; Female = <span class="number">1</span>, Male = <span class="number">100</span> &#125; <span class="comment">// Female =&gt; 1 Male =&gt; 100</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>没有设置，就自增长；设置了Female = 1，Male默认为1+1；</p>
</blockquote>
<h5 id="5-字符串枚举；"><a href="#5-字符串枚举；" class="headerlink" title="5. 字符串枚举；"></a>5. 字符串枚举；</h5><p>字符串枚举：枚举成员的值是字符串。</p>
<p><code>enum Gender &#123; Female = &#39;女&#39;, Male = &#39;男&#39; &#125;</code></p>
<p>注意：字符串枚举没有自增长行为，因此，<strong>每个成员必须有初始值</strong>。</p>
<blockquote>
<p>如果这样：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> &#123;</span></span><br><span class="line"> Female = <span class="string">&#x27;女&#x27;</span>,</span><br><span class="line"> Male,</span><br><span class="line"> A</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么Male与A就会报错；</p>
</blockquote>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(Gender.Female) <span class="comment">// 女</span></span><br><span class="line">console.<span class="built_in">log</span>(Gender.Male) <span class="comment">// 男</span></span><br></pre></td></tr></table></figure>

<h5 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h5><p>两种常用的枚举总结：</p>
<ol>
<li><p>数字枚举：枚举成员的值为数字，默认情况下就是数字枚举。</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> </span>&#123; Female, Male &#125;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Gender</span> </span>&#123; Female = <span class="number">100</span>, Male &#125; <span class="comment">// 初始化成员的值</span></span><br></pre></td></tr></table></figure>

<p>特点：成员的值是从 0 开始自增的数值。</p>
</li>
<li><p>字符串枚举：枚举成员的值为字符串。</p>
<p><code>enum Gender &#123; Female = &#39;女&#39;, Male = &#39;男&#39; &#125;</code></p>
<p>特点：没有自增行为，需要为每一个成员赋值！</p>
<p><red>枚举是一组有名字的常量（只读）的集合。</red></p>
</li>
</ol>
<hr>
<h5 id="7-使用枚举修改当前玩家"><a href="#7-使用枚举修改当前玩家" class="headerlink" title="7. 使用枚举修改当前玩家"></a>7. 使用枚举修改当前玩家</h5><p>效果：使用枚举代替原来的字符串类名（x 和 o）。</p>
<ol>
<li>创建字符串枚举（Player），提供 X 和 O 两个成员。</li>
<li>将成员 X 的值设置为：’x’（类名）；将成员 O 的值设置为：’o’（类名）。</li>
<li>将变量（currentPlayer）的类型设置为 Player 枚举类型，默认值为 Player.X。</li>
<li>将所有用到 x 和 o 的地方全部使用枚举成员代替。</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">  <span class="comment">// 2. 将成员 X 的值设置为：&#x27;x&#x27;（类名）；将成员 O 的值设置为：&#x27;o&#x27;（类名）。</span></span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span></span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 当前玩家</span></span><br><span class="line"><span class="comment">// let currentPlayer = x</span></span><br><span class="line"><span class="comment">// 3. 将变量（currentPlayer）的类型设置为 Player 枚举类型; 默认是，不需要设置；</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="comment">// 4. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">//currentPlayer = currentPlayer === &#x27;x&#x27; ? &#x27;o&#x27; : &#x27;x&#x27;</span></span><br><span class="line">currentPlayer = currentPlayer === Player.X ? Player.O : player.X</span><br><span class="line">gameBord.classList.remove(Player.X, Player.O)</span><br></pre></td></tr></table></figure>

<p>目前完整版：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">//console.log(cells)</span></span><br><span class="line"><span class="comment">// 3-1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3-2. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">//let currentPlayer = &#x27;x&#x27;</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span> (<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="comment">// let cell_2 = item as HTMLDivElement</span></span><br><span class="line">    item.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>) <span class="comment">// 打印出点击事件本身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event: MouseEvent</span>)</span>&#123;  </span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 遍历单元格列表</span></span><br><span class="line">cells.forEach(forEach_1)</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="10-3-游戏判赢"><a href="#10-3-游戏判赢" class="headerlink" title="10.3 游戏判赢"></a>10.3 游戏判赢</h3><h4 id="10-3-1-判赢思路"><a href="#10-3-1-判赢思路" class="headerlink" title="10.3.1 判赢思路"></a>10.3.1 判赢思路</h4><p>思路：判断棋盘中，横、竖、斜（对角线）是否存在三个相同的 x 或 o。</p>
<p>只要有一个满足条件，就说明 x 或 o 获胜了。<br>如果所有单元格都有内容，但没有获胜的情况，就说明是平局。<br>如何判断？</p>
<ol>
<li><p>单元格元素列表（ cells ）中，每个单元格元素都有自己的索引，如下图所示：</p>
<p><code>console.log(cells)</code>可以看到</p>
<p><img src="https://i.loli.net/2020/08/10/wXyWEAuZsUH8a7B.png" alt=""></p>
</li>
<li><p>每个单元格都有自己的索引，如图：</p>
<p><img src="https://i.loli.net/2020/08/10/aSf7wKJ1n8sT3qA.png" alt="2"></p>
</li>
<li><p>使用单元格索引，来表示每种获胜情况（使用数组来存储，比如： [0, 1, 2] ）。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获胜的所有情况（8 种）：</span></span><br><span class="line">[</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">// 横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">// 斜</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>然后，使用一个“大”数组（外层），来存储这  8 种情况（因为每次判赢都要判断所有情况）。<br>判断过程：遍历这个大数组，分别判断每一种情况对应的  3 个单元格元素，是否都是相同的  x 或  o 类名。<br>只要有一种情况满足，就说明获胜了。</p>
<blockquote>
<p>数组的元素可以是数组；</p>
</blockquote>
</li>
</ol>
<hr>
<h4 id="10-3-2-分析盘赢数组"><a href="#10-3-2-分析盘赢数组" class="headerlink" title="10.3.2 分析盘赢数组"></a>10.3.2 分析盘赢数组</h4><p>数组的基本结构：<code>[ 元素1, 元素2, ... ]</code></p>
<p>判赢数组：每个元素又是数组（二维数组，概念知道即可）。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">let winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>只要是数组用法都一样，比如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">// 访问数组元素：</span><br><span class="line">winsArr[0] // [0, 1, 2]</span><br><span class="line">winsArr[<span class="string">0</span>][<span class="symbol">1</span>] // 1</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>winsArr[0][1]</code></p>
<ol>
<li>winsArr[0] = [0, 1, 2]</li>
<li><code>winsArr[0][1]</code>=[0, 1, 2]里，索引为1的元素=1；</li>
</ol>
</blockquote>
<h4 id="10-3-3-单元格元素列表说明"><a href="#10-3-3-单元格元素列表说明" class="headerlink" title="10.3.3 单元格元素列表说明"></a>10.3.3 单元格元素列表说明</h4><p>单元格元素列表（cells），实际上是一个<red>伪数组</red>。</p>
<p>伪数组的特征：具有长度（length）属性和索引。</p>
<p><img src="https://i.loli.net/2020/08/10/wXyWEAuZsUH8a7B.png" alt=""></p>
<p>伪数组的操作：1 通过索引获取元素 2 使用 for 循环遍历（推荐使用 forEach 方法） 。</p>
<ol>
<li><p>通过索引获取元素</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">cells</span><span class="selector-attr">[0]</span>)</span><br><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">cells</span><span class="selector-attr">[1]</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 for 循环遍历</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (let <span class="built_in">i</span> = <span class="number">0</span>; <span class="built_in">i</span> &lt; cells.<span class="built_in">length</span>; <span class="built_in">i</span>++) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(cells[<span class="built_in">i</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用forEach遍历</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line">cells.forEach(forEach_cells)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<br />

<hr>
<h4 id="10-3-4-封装判赢函数"><a href="#10-3-4-封装判赢函数" class="headerlink" title="10.3.4 封装判赢函数"></a>10.3.4 封装判赢函数</h4><ol>
<li><p>封装函数，主要考虑：参数和返回值。</p>
<p>该函数的返回值是什么？  布尔值（判断<red>是否</red>获胜）</p>
<p>该函数的有参数吗？是什么？   当前玩家</p>
<p>说明：判赢，就是在判断当前玩家下棋后是否获胜（玩家没下棋，不可能获胜，不需要判断）。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明函数：</span></span><br><span class="line"><span class="keyword">function</span> check<span class="constructor">Win(<span class="params">player</span>: Player)</span>: boolean &#123;&#125;</span><br><span class="line"><span class="comment">// 调用函数：</span></span><br><span class="line"><span class="keyword">let</span> isWin = check<span class="constructor">Win(<span class="params">currentPlayer</span>)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>函数的参数是当前玩家，于是指定了一个形参：player</p>
<p>它的类型是：枚举player；∴ （player：player）</p>
<p>因为在代码中，是使用枚举来指定玩家的；</p>
</blockquote>
<blockquote>
<p>调用函数：</p>
<p>checkWin(currentPlayer) 当前玩家=currentPlayer，作为一个参数传递给函数checkWin</p>
<p>然后返回布尔值；给isWin；</p>
</blockquote>
<p>想不出返回值和参数怎么办？</p>
<p>技巧：如果想不到返回值和参数，可以反推，也就是从如何调用函数的角度来分析。</p>
<blockquote>
<ol>
<li><p>假如没有声明函数；</p>
<p>只有调用函数，或者是说，从调用函数开始思考</p>
</li>
<li><p>假设我们要封装的，需要被调用的，函数叫：checkWin；当然这个名字是任意的</p>
</li>
<li><p>然后想：这个函数要干嘛呢？要判赢；要通过它的返回值告诉我；</p>
<p>所以返回值类型应该是个 布尔值</p>
</li>
<li><p>我要判赢，我要判断谁赢呢？是当前玩家，那就把当前玩家=currentPlayer作为 参数 传递给声明函数的参数使用；</p>
</li>
</ol>
</blockquote>
</li>
<li><p>问题：什么时候判赢？ 玩家下棋后，或下棋时；</p>
</li>
<li><p>思路：</p>
<ol>
<li>声明函数（checkWin），指定参数（player），类型注解为：Player 枚举。</li>
<li>指定返回值：现在函数中写死返回 true 或 false。</li>
<li>在给单元格添加类名后（下棋后），调用函数 checkWin，拿到函数返回值。</li>
<li>判断函数返回值是否为 true，如果是，说明当前玩家获胜了。</li>
</ol>
</li>
<li><p>编码：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//封装判赢函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params">player: Player</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span> <span class="comment">//在写return true后，会自动给checkWin(player: Player)分配类型注解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用判赢函数，判断是否获胜</span></span><br><span class="line"><span class="comment">// 因为是在玩家下棋时判断，所以在点击事件函数里面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span> (<span class="params">event: MouseEvent</span>)</span>&#123;  </span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line">  <span class="comment">// 调用判赢函数，判断是否获胜</span></span><br><span class="line">  <span class="comment">// 只要把当前下棋玩家判断，也就判断了每一步</span></span><br><span class="line">  <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line">  <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;当前玩家获胜&#x27;</span>, currentPlayer)</span><br><span class="line">    <span class="comment">// 此时用console.log(&#x27;当前玩家获胜&#x27;, currentPlayer)来检测一下编码是否正确，有效</span></span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>因为当前写死了 return true；</p>
<p>所以每次点击一下，就会有 当前玩家获胜 与 当前玩家（也就是下棋模样，下的X，就是x玩家，下的O，就是o玩家）</p>
</blockquote>
</li>
</ol>
<hr>
<h4 id="10-3-5-实习判赢函数"><a href="#10-3-5-实习判赢函数" class="headerlink" title="10.3.5 实习判赢函数"></a>10.3.5 实习判赢函数</h4><p>思路：</p>
<p>遍历判赢数组，分别判断每种情况对应的  3 个单元格元素，是否同时包含当前玩家的类名。</p>
<p>问题：使用哪种方式遍历数组呢？</p>
<p><strong>只要有一种情况满足</strong>，就表示玩家获胜，后续的情况就没有必要再遍历，因此，数组遍历时可以终止。</p>
<p>判赢函数的返回值是布尔类型，如果玩家获胜（有一种情况满足），就返回 true；否则，返回 false。</p>
<p>数组的  some 方法：1 遍历数组时可终止 2 方法返回值为 true 或 false。</p>
<ol>
<li>使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。</li>
<li>在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。</li>
<li>判断这 3 个单元格元素是否同时包含当前玩家的类名。</li>
<li>如果包含（玩家获胜），就在回调函数中返回 true 停止循环；否则，返回 false，继续下一次循环。</li>
</ol>
<p>先把判赢数组写上：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10.3.5-1判赢数组</span></span><br><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(cells)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3-2. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">//let currentPlayer = &#x27;x&#x27;</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span>(<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="comment">// let cell_2 = item as HTMLDivElement</span></span><br><span class="line">    item.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">    <span class="comment">// console.log(&#x27;click&#x27;) // 打印出点击事件本身</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.4-2. 调用判赢函数，判断是否获胜;因为是在玩家下棋时判断，所以在点击事件函数里面</span></span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line">    <span class="keyword">if</span> (isWin = <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 此时用console.log(&#x27;当前玩家获胜&#x27;, currentPlayer)来检测一下编码是否正确，有效</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;当前玩家获胜&#x27;</span>, currentPlayer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 伪数组cells的遍历；</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.4-1. 封装判赢函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params">player: Player</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 10.3.5-2. 取消写死的 判赢返回值</span></span><br><span class="line">      <span class="comment">// return true</span></span><br><span class="line">      <span class="comment">// 10.3.5-3. 使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。</span></span><br><span class="line">    <span class="keyword">let</span> isWin = winsArr.some(some_isWin)</span><br><span class="line">    <span class="keyword">return</span> isWin</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some_isWin</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 10.3.5-4. 在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。</span></span><br><span class="line">  <span class="comment">// 4.1 先拿到每种获胜情况的三个索引</span></span><br><span class="line">  <span class="comment">// 4.1.1 看一下item拿到winsArr的元素没</span></span><br><span class="line">  <span class="comment">// 4.1.2 要注意，checkWin在函数 clickCell 里面，是一个点击事件，点击才有效果</span></span><br><span class="line">  <span class="built_in">console</span>.log(item) </span><br><span class="line">  <span class="comment">// 继续 4.1</span></span><br><span class="line">  <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">  <span class="comment">// 4.1.3 打印实验，拿到每种获胜情况的三个索引</span></span><br><span class="line">  <span class="comment">//console.log(cellIndex1,cellIndex2,cellIndex3)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 4.2 通过这三个索引，从cells中获取到对应的单元格元素</span></span><br><span class="line">  <span class="comment">// 从 4.1.3 过来后</span></span><br><span class="line">  <span class="comment">// 前面拿索引，这一步拿格子</span></span><br><span class="line">  <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">  <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">  <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">  <span class="comment">// console.log(cell1, cell2, cell3)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 4.2 完成后干嘛？拿到了格子，要判断格子是否满足条件；</span></span><br><span class="line">  <span class="comment">// 我们看我们的函数，是some_isWin,它被let isWin = winsArr.some(some_isWin)用着</span></span><br><span class="line">  <span class="comment">// 被一个some用着，那必须要返回布尔值；</span></span><br><span class="line">  <span class="comment">// 那么这个判断依然在这里面写；</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 10.3.5-5 </span></span><br><span class="line">  <span class="comment">// 判断这 3 个单元格元素是否同时包含当前玩家的类名。</span></span><br><span class="line">  <span class="comment">// 重点：</span></span><br><span class="line">  <span class="comment">// 5.1. 元素是否包含类名 classList.contains();可以去文章1查</span></span><br><span class="line">  <span class="comment">// 5.2. 同时包含（第一个包含 并且 第二个包含，第三个包含）</span></span><br><span class="line">  <span class="comment">// 5.3. 逻辑运算符 &amp;&amp; 逻辑与，表示并且</span></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell3.classList.contains(player)</span><br><span class="line">    <span class="comment">// 此处player报错，千方百计，只好把全部重写回调里面去；</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 遍历单元格列表</span></span><br><span class="line">cells.forEach(forEach_1)</span><br><span class="line"><span class="comment">// cells.forEach(forEach_cells)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此处player报错，千方百计，只好把全部重写回调里面去；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10.3.5-1判赢数组</span></span><br><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(cells)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-2. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">// let currentPlayer = &#x27;x&#x27;</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach_1 &gt; clickCell &gt; checkWin &gt; some_isWin</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span>(<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(item)</span></span><br><span class="line">    <span class="comment">// 2.1 给每一个单元格添加点击事件</span></span><br><span class="line">    <span class="comment">// let cell_2 = item as HTMLDivElement</span></span><br><span class="line">    item.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">    <span class="comment">// console.log(&#x27;click&#x27;) // 打印出点击事件本身</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.4-2. 调用判赢函数，判断是否获胜;因为是在玩家下棋时判断，所以在点击事件函数里面</span></span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin = <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="comment">// 此时用console.log(&#x27;当前玩家获胜&#x27;, currentPlayer)来检测一下编码是否正确，有效</span></span><br><span class="line">        <span class="comment">// console.log(&#x27;当前玩家获胜&#x27;, currentPlayer)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.4-1. 封装判赢函数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 10.3.5-2. 取消写死的 判赢返回值</span></span><br><span class="line">  <span class="comment">// return true</span></span><br><span class="line">  <span class="comment">// 10.3.5-3. 使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。</span></span><br><span class="line">  <span class="keyword">let</span> isWin = winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.5-4. 在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。</span></span><br><span class="line">    <span class="comment">// 4.1 先拿到每种获胜情况的三个索引</span></span><br><span class="line">    <span class="comment">// 看一下item拿到winsArr的元素没</span></span><br><span class="line">    <span class="comment">// 要注意，checkWin在函数 clickCell 里面，是一个点击事件，点击才有效果</span></span><br><span class="line">    <span class="built_in">console</span>.log(item) </span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 4.1.1 打印实验：每种获胜情况的三个索引</span></span><br><span class="line">    <span class="comment">// console.log(cellIndex1,cellIndex2,cellIndex3)</span></span><br><span class="line">    <span class="comment">// 4.2 通过这三个索引，从cells中获取到对应的单元格元素</span></span><br><span class="line">    <span class="comment">// 从 4.1.3 过来后</span></span><br><span class="line">    <span class="comment">// 前面拿索引，这一步拿格子</span></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">    <span class="built_in">console</span>.log(cell1, cell2, cell3)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 4.2 完成后干嘛？拿到了格子，要判断格子是否满足条件；</span></span><br><span class="line">    <span class="comment">// 我们看我们的函数，是some_isWin,它被let isWin = winsArr.some(some_isWin)用着</span></span><br><span class="line">    <span class="comment">// 被一个some用着，那必须要返回布尔值；</span></span><br><span class="line">    <span class="comment">// 那么这个判断依然在这里面写；</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 10.3.5-5 </span></span><br><span class="line">    <span class="comment">// 判断这 3 个单元格元素是否同时包含当前玩家的类名。</span></span><br><span class="line">    <span class="comment">// 重点：</span></span><br><span class="line">    <span class="comment">// 5.1. 元素是否包含类名 classList.contains();可以去文章1查</span></span><br><span class="line">    <span class="comment">// 5.2. 同时包含（第一个包含 并且 第二个包含，第三个包含）</span></span><br><span class="line">    <span class="comment">// 5.3. 逻辑运算符 &amp;&amp; 逻辑与，表示并且</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell1.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> isWin</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 伪数组cells的遍历；</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 遍历单元格列表</span></span><br><span class="line">cells.forEach(forEach_1)</span><br><span class="line"><span class="comment">// cells.forEach(forEach_cells)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>如果，你遇到每点一下，就出一个 当前玩家获胜 x or o 获胜</p>
<p><img src="https://i.loli.net/2020/08/10/EPnOxswypDKLN2g.png" alt="1"></p>
<p>也许是你代码：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    cell1.classList.<span class="built_in">contains</span>(player) &amp;&amp;</span><br><span class="line">    cell1.classList.<span class="built_in">contains</span>(player) &amp;&amp;</span><br><span class="line">    cell1.classList.<span class="built_in">contains</span>(player)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// cell1，全不写成了 1</span></span><br></pre></td></tr></table></figure>

<p>改正：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell3.classList.contains(player)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// cell1，全不写成了 1</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2020/08/10/akC13UyTKwn9SJX.png" alt="2"></p>
<p>…</p>
</li>
</ol>
<p>回顾：</p>
<ol>
<li><p>使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。</p>
<blockquote>
<p>1.1 为什么要使用some，应为返回true后就停止</p>
<p>它的作用是用来查找出数组中是否有一个满足条件情况。找到一种就返回true停止遍历；</p>
</blockquote>
</li>
<li><p>在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。</p>
<blockquote>
<p>用some，只拿到了winsArr数组中的每个元素；</p>
<p>item拿到的是每个元素是一个数组；</p>
<p>在写 cellIndex拿到每个 item里的 每一个索引；</p>
<p>拿到每一个单元格的索引后；</p>
<p>去伪数组cells拿到每个单元格的元素；</p>
</blockquote>
</li>
<li><p>判断这 3 个单元格元素是否同时包含当前玩家的类名。</p>
<blockquote>
<p>拿到元素后</p>
<p>判断3个单元格中，是否同时包含某玩家类名</p>
<p>用逻辑与</p>
</blockquote>
</li>
<li><p>如果包含（玩家获胜），就在回调函数中返回 true 停止循环；否则，返回 false，继续下一次循环。</p>
<blockquote>
<p>if条件成立，说明三个元素同时包含</p>
<p>返回true终止后面的循环，并返回那个玩家类名</p>
</blockquote>
</li>
</ol>
<hr>
<h4 id="10-3-6-优化判赢函数"><a href="#10-3-6-优化判赢函数" class="headerlink" title="10.3.6 优化判赢函数"></a>10.3.6 优化判赢函数</h4><ol start="0">
<li><p>感觉没必要</p>
</li>
<li><p>去掉判赢函数的中间变量（isWin、cell1、cell2、cell3）。</p>
</li>
<li><p>封装函数（hasClass）：判断 DOM 元素是否包含某个类名。2020-8-10 10:04:03(已经6个小时了）</p>
</li>
<li><p>回到代码；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> isWin = winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">  <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">  <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell3.classList.contains(player)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">return</span> isWin</span><br></pre></td></tr></table></figure>

<blockquote>
<p>3.1 虽然调用了数组的.some方法</p>
<p>目的是返回值，把some方法的返回值存储到了isWin</p>
<p>然后在 return isWin=返回isWin，也就是some方法的返回值</p>
<p>先拿到isWin , 再返回isWin，是一个中转效果，是一个中间变量</p>
<p>∴ 可以改为：</p>
<p>return winsArr.some()</p>
</blockquote>
<p>修改：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">  <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">  <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">    cell3.classList.contains(player)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line">   </span><br></pre></td></tr></table></figure>
</li>
<li><p>接着是cell1、cell2、cell3</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    cells[cellIndex1].classList.contains(player) &amp;&amp;</span><br><span class="line">    cells[cellIndex2].classList.contains(player) &amp;&amp;</span><br><span class="line">    cells[cellIndex3].classList.contains(player)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<p>不建议把cellIndex1 替换成 item[0]。视频说；</p>
<p>我个人觉得没什么</p>
<hr>
</li>
<li><p>回到 2.封装函数（hasClass）：判断 DOM 元素是否包含某个类名</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">if (</span><br><span class="line">  cells[cellIndex1].classList.contains(<span class="name">player</span>) <span class="symbol">&amp;&amp;</span></span><br><span class="line">  cells[cellIndex2].classList.contains(<span class="name">player</span>) <span class="symbol">&amp;&amp;</span></span><br><span class="line">  cells[cellIndex3].classList.contains(<span class="name">player</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>太重复，可以改；</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">el: Element, name: <span class="built_in">string</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> el.classList.contains(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>// 用：let a = cells[cellIndex1] 然后鼠标放在a上看类型；<br>// 类型是Element，便可以指定el的类型；<br>// el: Element</p>
<p>参数弄好后；就可以查看 DOM 元素是否包含某个类名</p>
<p>el.classList.contains(name)</p>
<p>contains方法返回的是布尔值；鼠标放上去可以查看；</p>
<p>把：注释掉</p>
<p> // cells[cellIndex1].classList.contains(player) &amp;&amp;<br> // cells[cellIndex2].classList.contains(player) &amp;&amp;<br> // cells[cellIndex3].classList.contains(player)</p>
<p>在if里面调用函数 hasClass（）填入要判断的dom元素：</p>
<p><code>hasClass(cells[cellIndex1])</code></p>
<p>…</p>
</blockquote>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">   </span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    hasClass(cells[cellIndex1], player) &amp;&amp;</span><br><span class="line">    hasClass(cells[cellIndex2], player) &amp;&amp;</span><br><span class="line">    hasClass(cells[cellIndex3], player) </span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<p>….</p>
<p>我觉得没啥必要；</p>
<hr>
</li>
</ol>
<h4 id="10-3-7-判断平局"><a href="#10-3-7-判断平局" class="headerlink" title="10.3.7 判断平局"></a>10.3.7 判断平局</h4><p>思路：创建变量（steps），记录已下棋的次数，判断 steps 是否等于 9，如果等于说明平局。<br>注意：先判赢，再判断平局！</p>
<p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/steps">steps–翻译</a>；</p>
<ol>
<li><p>创建变量（steps），默认值为 0。</p>
</li>
<li><p>在玩家下棋后，让 steps 加 1。</p>
</li>
<li><p>在判赢的代码后面，判断 steps 是否等于 9。</p>
<blockquote>
<p>那这不是，拜拜判断多次；直接是否&gt;8，或者直接判断是否=9</p>
<p>不需要跟着 判赢的代码后面 多次判断；</p>
</blockquote>
</li>
<li><p>如果等于 9 说明是平局，游戏结束，就直接 return，不再执行后续代码。</p>
</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10.3.7-1. 记录已下棋的次数</span></span><br><span class="line"><span class="keyword">let</span> steps = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line"><span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">arget_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在点击事件后面</span></span><br><span class="line"><span class="comment">// 10.3.7-2. 在玩家下棋后，让 steps 加 1。</span></span><br><span class="line">steps++</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">  <span class="comment">// 此时用console.log(&#x27;当前玩家获胜&#x27;, currentPlayer)来检测一下编码是否正确，有效</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;当前玩家获胜&#x27;</span>, currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 10.3.7-3在判赢的代码后面，判断 steps 是否等于 9。</span></span><br><span class="line"> <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">   <span class="comment">// 10.3.7-4.如果等于 9 说明是平局，游戏结束，就直接 return，不再执行后续代码。</span></span><br><span class="line">   <span class="comment">// 因为游戏已经结束，所以，此处直接return</span></span><br><span class="line">   <span class="comment">// 来可以阻止后续代码执行</span></span><br><span class="line">   <span class="keyword">return</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="10-3-8-展示获胜信息；"><a href="#10-3-8-展示获胜信息；" class="headerlink" title="10.3.8 展示获胜信息；"></a>10.3.8 展示获胜信息；</h4><p>效果：在获胜或平局时，展示相应信息。</p>
<ol>
<li>获取到与获胜信息相关的两个 DOM 元素：1 #message 2 #winner。</li>
<li>显示获胜信息面板（通过 style 属性实现）。</li>
<li>展示获胜信息：如果获胜，展示“x 赢了！”或“o 赢了！”；如果是平局，展示“平局”。</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"><span class="comment">// 10.3.8-1. 获胜信息面板</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#message&#x27;</span>) <span class="keyword">as</span> HTMLDivElement</span><br><span class="line"><span class="comment">// 10.3.8-1.2 获胜者</span></span><br><span class="line"><span class="keyword">let</span> winner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#winner&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="keyword">let</span> steps = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach_1 &gt; clickCell &gt; checkWin &gt; some_isWin</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span>(<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line">    item.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    steps++</span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">      <span class="comment">// 10.3.8-3.展示获胜信息：如果获胜，展示“x 赢了！”或“o 赢了！”；如果是平局，展示“平局”。</span></span><br><span class="line">      <span class="comment">// 获胜的信息最终要 id=&quot;winner&quot; 里  &lt;p id=&quot;winner&quot;&gt;X 赢了！&lt;/p&gt;</span></span><br><span class="line">      winner.innerText = currentPlayer + <span class="string">&#x27;赢了&#x27;</span></span><br><span class="line">      <span class="comment">// 10.3.8-2.显示信息面板（通过 style 属性实现）。</span></span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">      <span class="comment">// 10.3.8-2.2.显示信息面板（通过 style 属性实现）。</span></span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      winner.innerText = <span class="string">&#x27;平局&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell3.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line">cells.forEach(forEach_1)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="10-4-重开游戏"><a href="#10-4-重开游戏" class="headerlink" title="10.4 重开游戏"></a>10.4 重开游戏</h3><p>效果：点击重新开始按钮，重新开始下棋游戏。</p>
<p>说明：重新开始游戏，实际上就是要<red>重置游戏中的所有数据</red>，恢复到初始状态。</p>
<p>比如：隐藏获胜信息、重置下棋次数、清空棋盘等等。</p>
<ol>
<li>获取到重新开始按钮（#restart），并绑定点击事件。</li>
<li>在点击事件中，重置游戏数据。</li>
<li>隐藏获胜信息、清空棋盘、移除单元格点击事件、重新给单元格绑定点击事件。</li>
<li>重置下棋次数、重置默认玩家为 x、重置下棋提示为 x。</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#message&#x27;</span>) <span class="keyword">as</span> HTMLDivElement</span><br><span class="line"><span class="keyword">let</span> winner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#winner&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line"><span class="comment">// 10.4-1. 重新开始按钮</span></span><br><span class="line"><span class="keyword">let</span> restart = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#restart&#x27;</span>) <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line"><span class="built_in">console</span>.log(restart)</span><br><span class="line"><span class="keyword">let</span> currentPlayer = Player.X</span><br><span class="line"><span class="keyword">let</span> steps = <span class="number">0</span></span><br><span class="line"><span class="comment">// 10.4-1.2 绑定点击事件</span></span><br><span class="line">restart.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">  <span class="comment">// restart 是button 要按钮出来后点击才有效；</span></span><br><span class="line">  <span class="comment">// 10.4-3 隐藏获胜信息</span></span><br><span class="line">  message.style.display= <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  <span class="comment">// 10.4-4. 重置下棋次数</span></span><br><span class="line">  steps = <span class="number">0</span></span><br><span class="line">  <span class="comment">// 10.4-4.2 重置默认玩家为x</span></span><br><span class="line">  currentPlayer = Player.X</span><br><span class="line">  <span class="comment">// 10.4-4.3 重置下棋提示为x</span></span><br><span class="line">  gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">  gameBord.classList.add(Player.X)</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">  <span class="comment">// 棋盘的内容添加，是通过添加类名而成的：target_3.classList.add(currentPlayer)</span></span><br><span class="line">  <span class="comment">// 遍历每个单元格，清空</span></span><br><span class="line">  cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cell = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    <span class="comment">// 移除类名</span></span><br><span class="line">    <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">    cell.classList.remove(Player.X, Player.O)</span><br><span class="line">    <span class="comment">// 这个时候，虽然清楚了棋盘上的XO，但是没法，再点，因为&#123; once: true &#125;</span></span><br><span class="line">    <span class="comment">// 10.4-3.3 移除单元格点击事件、重新给单元格绑定点击事件。</span></span><br><span class="line">    cell.removeEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell)</span><br><span class="line">    <span class="comment">// 10.4-3.3.2 重新给单元格绑定点击事件。</span></span><br><span class="line">    cell.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">    </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach_1 &gt; clickCell &gt; checkWin &gt; some_isWin</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_1</span>(<span class="params">item: HTMLDivElement</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> cell = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    steps++</span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">      winner.innerText = currentPlayer + <span class="string">&#x27;赢了&#x27;</span></span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      winner.innerText = <span class="string">&#x27;平局&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell3.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line">cells.forEach(forEach_1)</span><br></pre></td></tr></table></figure>

<br />

<h4 id="10-4-2-优化重新游戏"><a href="#10-4-2-优化重新游戏" class="headerlink" title="10.4.2 优化重新游戏"></a>10.4.2 优化重新游戏</h4><p>优化重新游戏功能：</p>
<p>原来，下棋分为：1 第一次游戏 2 重新开始游戏。</p>
<p>现在，将第一次游戏，也看做是“重新开始游戏”，就可以去掉第一次游戏时重复的初始化操作了。</p>
<ol>
<li>将重新开始按钮的事件处理程序修改为：函数声明形式（startGame）。</li>
<li>直接调用函数（startGame），来开始游戏。</li>
<li>移除变量 steps、currentPlayer 的默认值，并添加明确的类型注解。</li>
<li>移除给单元格绑定事件的代码。</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#message&#x27;</span>) <span class="keyword">as</span> HTMLDivElement</span><br><span class="line"><span class="keyword">let</span> winner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#winner&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line"><span class="keyword">let</span> restart = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#restart&#x27;</span>) <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line"><span class="built_in">console</span>.log(restart)</span><br><span class="line"><span class="comment">// 10.4.2-3.2 移除变量urrentPlayer 的默认值，并添加明确的类型注解。</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer: Player</span><br><span class="line"><span class="comment">// 10.4.2-3.1 移除变量 steps的默认值，并添加明确的类型注解</span></span><br><span class="line"><span class="comment">// let steps = 0</span></span><br><span class="line"><span class="keyword">let</span> steps: <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.4.2-1. 将原来的回调函数弄出来，声明新函数</span></span><br><span class="line">restart.addEventListener(<span class="string">&#x27;click&#x27;</span>, startGame)</span><br><span class="line"><span class="comment">// 10.4.2-2. 直接调用函数（startGame）初始化游戏数据，来开始游戏。</span></span><br><span class="line">startGame ()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startGame</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">  message.style.display= <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  steps = <span class="number">0</span></span><br><span class="line">  currentPlayer = Player.X</span><br><span class="line">  gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">  gameBord.classList.add(Player.X)</span><br><span class="line">  </span><br><span class="line">  cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cell = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    cell.classList.remove(Player.X, Player.O)</span><br><span class="line">    cell.removeEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell)</span><br><span class="line">    cell.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">    </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach_1 &gt; clickCell &gt; checkWin &gt; some_isWin</span></span><br><span class="line"><span class="comment">// 10.4.2-4.1 移除给单元格绑定事件的代码。</span></span><br><span class="line"><span class="comment">// function forEach_1(item: HTMLDivElement) &#123;</span></span><br><span class="line"><span class="comment">//   let cell = item as HTMLDivElement</span></span><br><span class="line"><span class="comment">//     cell.addEventListener(&#x27;click&#x27;, clickCell, &#123; once: true &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    steps++</span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">      winner.innerText = currentPlayer + <span class="string">&#x27;赢了&#x27;</span></span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">      message.style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      winner.innerText = <span class="string">&#x27;平局&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell3.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;) </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 10.4.2-4.1 移除给单元格绑定事件的代码。</span></span><br><span class="line"><span class="comment">// cells.forEach(forEach_1)</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="10-5-总结"><a href="#10-5-总结" class="headerlink" title="10.5 总结"></a>10.5 总结</h3><ol>
<li>使用学到的 TS 、Web 开发知识，从零开始完成了下棋游戏。</li>
<li>TS 知识：变量声明、枚举、类型断言、函数（参数、返回值）等。</li>
<li>枚举：是一组有名字的常量的集合，用来组织有关联的数据。</li>
<li>类型断言：在我们比 TS 更明确变量的类型时，来指定具体类型。</li>
<li>函数封装：主要考虑参数和返回值，也就是接收要处理的数据，返回处理后<br>的结果。</li>
<li>实现功能：分步骤实现，完成一步，验证一步（先实现，再优化）。</li>
<li>DOM 操作：获取元素、添加移除事件、事件对象、样式操作、文本内容。</li>
<li>伪数组：具有长度（length）属性和索引（长得像、操作也像数组）。</li>
</ol>
<p>总代码–有注释版本：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10.3.5-1判赢数组</span></span><br><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(cells)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 游戏面板</span></span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.8-1. 获胜信息面板</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#message&#x27;</span>) <span class="keyword">as</span> HTMLDivElement</span><br><span class="line"><span class="comment">// 10.3.8-1.2 获胜者</span></span><br><span class="line"><span class="keyword">let</span> winner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#winner&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line"><span class="comment">// 10.4-1.</span></span><br><span class="line"><span class="keyword">let</span> restart = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#restart&#x27;</span>) <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-2. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">// let currentPlayer = &#x27;x&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.4.2-3.2 移除变量urrentPlayer 的默认值，并添加明确的类型注解。</span></span><br><span class="line"><span class="comment">// let currentPlayer = Player.X</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer: Player</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.7-1. 记录已下棋的次数</span></span><br><span class="line"><span class="comment">// 10.4.2-3.1 移除变量 steps的默认值，并添加明确的类型注解</span></span><br><span class="line"><span class="comment">// let steps = 0</span></span><br><span class="line"><span class="keyword">let</span> steps: <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.4-1.2 绑定点击事件</span></span><br><span class="line"><span class="comment">// 10.4.2-1. 将原来的回调函数弄出来，声明新函数startGame</span></span><br><span class="line">restart.addEventListener(<span class="string">&#x27;click&#x27;</span>, startGame)</span><br><span class="line"><span class="comment">// 10.4.2-2. 直接调用函数（startGame）初始化游戏数据，来开始游戏。</span></span><br><span class="line">startGame ()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startGame</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">  <span class="comment">// 10.4-3 隐藏获胜信息</span></span><br><span class="line">  message.style.display= <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  <span class="comment">// 10.4-4. 重置下棋次数</span></span><br><span class="line">  steps = <span class="number">0</span></span><br><span class="line">  <span class="comment">// 10.4-4.2 重置默认玩家为x</span></span><br><span class="line">  currentPlayer = Player.X</span><br><span class="line">  <span class="comment">// 10.4-4.3 重置下棋提示为x</span></span><br><span class="line">  gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">  gameBord.classList.add(Player.X)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">  <span class="comment">// 棋盘的内容添加，是通过添加类名而成的：target_3.classList.add(currentPlayer)</span></span><br><span class="line">  <span class="comment">// 遍历每个单元格，清空</span></span><br><span class="line">  cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> cell = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">  <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">  cell.classList.remove(Player.X, Player.O)</span><br><span class="line">  <span class="comment">// 这个时候，虽然清楚了棋盘上的XO，但是没法，再点，因为&#123; once: true &#125;</span></span><br><span class="line">  <span class="comment">// 10.4-3.3 移除单元格点击事件、重新给单元格绑定点击事件。</span></span><br><span class="line">  cell.removeEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell)</span><br><span class="line">  <span class="comment">// 10.4-3.3.2 重新给单元格绑定点击事件。</span></span><br><span class="line">  cell.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach_1 &gt; clickCell &gt; checkWin &gt; some_isWin</span></span><br><span class="line"><span class="comment">// 10.4.2-4.1 移除给单元格绑定事件的代码。</span></span><br><span class="line"><span class="comment">// function forEach_1(item: HTMLDivElement) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     // console.log(item)</span></span><br><span class="line"><span class="comment">//     // 2.1 给每一个单元格添加点击事件</span></span><br><span class="line"><span class="comment">//     // let cell_2 = item as HTMLDivElement</span></span><br><span class="line"><span class="comment">//     item.addEventListener(&#x27;click&#x27;, clickCell, &#123; once: true &#125;)</span></span><br><span class="line"><span class="comment">//     // console.log(&#x27;click&#x27;) // 打印出点击事件本身</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在点击事件后面</span></span><br><span class="line">    <span class="comment">// 10.3.7-2. 在玩家下棋后，让 steps 加 1。</span></span><br><span class="line">    steps++</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.4-2. 调用判赢函数，判断是否获胜;因为是在玩家下棋时判断，所以在点击事件函数里面</span></span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">      winner.innerText=currentPlayer + <span class="string">&#x27;赢了&#x27;</span></span><br><span class="line">      message.style.display= <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.7-3在判赢的代码后面，判断 steps 是否等于 9。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">      <span class="comment">// 10.3.7-4.如果等于 9 说明是平局，游戏结束，就直接 return，不再执行后续代码。</span></span><br><span class="line">      <span class="comment">// 因为游戏已经结束，所以，此处直接return</span></span><br><span class="line">      <span class="comment">// 来可以阻止后续代码执行</span></span><br><span class="line">      winner.innerText= <span class="string">&#x27;平局&#x27;</span></span><br><span class="line">      message.style.display= <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.4-1. 封装判赢函数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 10.3.5-2. 取消写死的 判赢返回值</span></span><br><span class="line">  <span class="comment">// return true</span></span><br><span class="line">  <span class="comment">// 10.3.5-3. 使用 some 方法遍历数组，并将 some 方法的返回值作为判赢函数的返回结果。</span></span><br><span class="line">  <span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.5-4. 在 some 方法的回调函数中，获取到每种获胜情况对应的 3 个单元格元素。</span></span><br><span class="line">    <span class="comment">// 4.1 先拿到每种获胜情况的三个索引</span></span><br><span class="line">    <span class="comment">// 看一下item拿到winsArr的元素没</span></span><br><span class="line">    <span class="comment">// 要注意，checkWin在函数 clickCell 里面，是一个点击事件，点击才有效果</span></span><br><span class="line">    <span class="comment">// console.log(item) </span></span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 4.1.1 打印实验：每种获胜情况的三个索引</span></span><br><span class="line">    <span class="comment">// console.log(cellIndex1,cellIndex2,cellIndex3)</span></span><br><span class="line">    <span class="comment">// 4.2 通过这三个索引，从cells中获取到对应的单元格元素</span></span><br><span class="line">    <span class="comment">// 从 4.1.3 过来后</span></span><br><span class="line">    <span class="comment">// 前面拿索引，这一步拿格子</span></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line">    <span class="comment">// console.log(cell1, cell2, cell3)</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 4.2 完成后干嘛？拿到了格子，要判断格子是否满足条件；</span></span><br><span class="line">    <span class="comment">// 我们看我们的函数，是some_isWin,它被let isWin = winsArr.some(some_isWin)用着</span></span><br><span class="line">    <span class="comment">// 被一个some用着，那必须要返回布尔值；</span></span><br><span class="line">    <span class="comment">// 那么这个判断依然在这里面写；</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 10.3.5-5 </span></span><br><span class="line">    <span class="comment">// 判断这 3 个单元格元素是否同时包含当前玩家的类名。</span></span><br><span class="line">    <span class="comment">// 重点：</span></span><br><span class="line">    <span class="comment">// 5.1. 元素是否包含类名 classList.contains();可以去文章1查</span></span><br><span class="line">    <span class="comment">// 5.2. 同时包含（第一个包含 并且 第二个包含，第三个包含）</span></span><br><span class="line">    <span class="comment">// 5.3. 逻辑运算符 &amp;&amp; 逻辑与，表示并且</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell3.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 伪数组cells的遍历；</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 遍历单元格列表</span></span><br><span class="line"><span class="comment">// cells.forEach(forEach_cells)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动单元格绑定事件</span></span><br><span class="line"><span class="comment">// 10.4.2-4.1 移除给单元格绑定事件的代码。</span></span><br><span class="line"><span class="comment">// cells.forEach(forEach_1)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>总代码，少注释版本：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 10.3.5-1判赢数组</span></span><br><span class="line"><span class="keyword">let</span> winsArr = [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>], <span class="comment">//横</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>], [<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>], [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>], <span class="comment">// 竖</span></span><br><span class="line">    [<span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>], [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>] <span class="comment">//斜</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-1. 创建字符串枚举（Player），提供 X 和 O 两个成员</span></span><br><span class="line"><span class="built_in">enum</span> Player &#123;</span><br><span class="line">    X = <span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">    O = <span class="string">&#x27;o&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 获取到所有的单元格列表</span></span><br><span class="line"><span class="keyword">let</span> cells = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.cell&#x27;</span>)</span><br><span class="line"><span class="comment">// console.log(cells)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 游戏面板</span></span><br><span class="line"><span class="keyword">let</span> gameBord = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#bord&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.8-1. 获胜信息面板</span></span><br><span class="line"><span class="keyword">let</span> message = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#message&#x27;</span>) <span class="keyword">as</span> HTMLDivElement</span><br><span class="line"><span class="comment">// 10.3.8-1.2 获胜者</span></span><br><span class="line"><span class="keyword">let</span> winner = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#winner&#x27;</span>) <span class="keyword">as</span> HTMLParagraphElement</span><br><span class="line"><span class="comment">// 10.4-1.</span></span><br><span class="line"><span class="keyword">let</span> restart = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#restart&#x27;</span>) <span class="keyword">as</span> HTMLButtonElement</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3-2. 将所有用到 x 和 o 的地方全部使用枚举成员代替。</span></span><br><span class="line"><span class="comment">// 10.4.2-3.2 移除变量urrentPlayer 的默认值，并添加明确的类型注解。</span></span><br><span class="line"><span class="keyword">let</span> currentPlayer: Player</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.7-1. 记录已下棋的次数</span></span><br><span class="line"><span class="comment">// 10.4.2-3.1 移除变量 steps的默认值，并添加明确的类型注解</span></span><br><span class="line"><span class="keyword">let</span> steps: <span class="built_in">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.4-1.2 绑定点击事件</span></span><br><span class="line"><span class="comment">// 10.4.2-1. 将原来的回调函数弄出来，声明新函数startGame</span></span><br><span class="line">restart.addEventListener(<span class="string">&#x27;click&#x27;</span>, startGame)</span><br><span class="line"><span class="comment">// 10.4.2-2. 直接调用函数（startGame）初始化游戏数据，来开始游戏。</span></span><br><span class="line">startGame ()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startGame</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;click&#x27;</span>)</span><br><span class="line">  <span class="comment">// 10.4-3 隐藏获胜信息</span></span><br><span class="line">  message.style.display= <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  <span class="comment">// 10.4-4. 重置下棋次数</span></span><br><span class="line">  steps = <span class="number">0</span></span><br><span class="line">  <span class="comment">// 10.4-4.2 重置默认玩家为x</span></span><br><span class="line">  currentPlayer = Player.X</span><br><span class="line">  <span class="comment">// 10.4-4.3 重置下棋提示为x</span></span><br><span class="line">  gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">  gameBord.classList.add(Player.X)</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">  cells.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> cell = item <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">  <span class="comment">// 10.4-3.2 清空棋盘</span></span><br><span class="line">  cell.classList.remove(Player.X, Player.O)</span><br><span class="line">  <span class="comment">// 10.4-3.3 移除单元格点击事件、重新给单元格绑定点击事件。</span></span><br><span class="line">  cell.removeEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell)</span><br><span class="line">  <span class="comment">// 10.4-3.3.2 重新给单元格绑定点击事件。</span></span><br><span class="line">  cell.addEventListener(<span class="string">&#x27;click&#x27;</span>, clickCell, &#123; once: <span class="literal">true</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clickCell</span>(<span class="params">event: MouseEvent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 3. 给当前被点击的单元格添加类名 x</span></span><br><span class="line">    <span class="keyword">let</span> target_3 = event.target <span class="keyword">as</span> HTMLDivElement</span><br><span class="line">    target_3.classList.add(currentPlayer)</span><br><span class="line">    <span class="comment">// 10.3.7-2. 在玩家下棋后，让 steps 加 1。</span></span><br><span class="line">    steps++</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.4-2. 调用判赢函数，判断是否获胜;因为是在玩家下棋时判断，所以在点击事件函数里面</span></span><br><span class="line">    <span class="keyword">let</span> isWin = checkWin(currentPlayer)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWin) &#123;</span><br><span class="line">      winner.innerText=currentPlayer + <span class="string">&#x27;赢了&#x27;</span></span><br><span class="line">      message.style.display= <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 10.3.7-3在判赢的代码后面，判断 steps 是否等于 9。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( steps === <span class="number">9</span>) &#123;</span><br><span class="line">      <span class="comment">// 10.3.7-4.如果等于 9 说明是平局，游戏结束，就直接 return，不再执行后续代码。</span></span><br><span class="line">      winner.innerText= <span class="string">&#x27;平局&#x27;</span></span><br><span class="line">      message.style.display= <span class="string">&#x27;block&#x27;</span></span><br><span class="line">      <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;平局之后&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据当前玩家，得到另一个玩家</span></span><br><span class="line">    currentPlayer = currentPlayer === Player.X ? Player.O : Player.X</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 改变下一步提示；</span></span><br><span class="line">    gameBord.classList.remove(Player.X, Player.O)</span><br><span class="line">    gameBord.classList.add(currentPlayer)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10.3.4-1. 封装判赢函数</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">checkWin</span>(<span class="params"> player: Player </span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> winsArr.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cellIndex1 = item[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex2 = item[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">let</span> cellIndex3 = item[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cell1 = cells[cellIndex1]</span><br><span class="line">    <span class="keyword">let</span> cell2 = cells[cellIndex2]</span><br><span class="line">    <span class="keyword">let</span> cell3 = cells[cellIndex3]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      cell1.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell2.classList.contains(player) &amp;&amp;</span><br><span class="line">      cell3.classList.contains(player)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach_cells</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>…</p>
]]></content>
      <categories>
        <category>typescript</category>
      </categories>
      <tags>
        <tag>item</tag>
      </tags>
  </entry>
  <entry>
    <title>3-ts&#39;problem</title>
    <url>/1-(0~50)/3-ts_problem/</url>
    <content><![CDATA[<h3 id="7-1-函数调试"><a href="#7-1-函数调试" class="headerlink" title="7.1 函数调试"></a>7.1 函数调试</h3><p>自家电脑vscode调试不起，他要自己运行完，不停下；2020-8-3 21:41:29</p>
<a id="more"></a>

<p>根据：<a href="https://zhuanlan.zhihu.com/p/103334623">https://zhuanlan.zhihu.com/p/103334623</a></p>
<p><a href="https://blog.csdn.net/qq_31487797/article/details/82500720">https://blog.csdn.net/qq_31487797/article/details/82500720</a></p>
<p>等信息使用debugger调试后能成，</p>
<p>可能要多学习了解一下 debugger；</p>
]]></content>
      <categories>
        <category>typescript</category>
      </categories>
      <tags>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>4-css_个人笔记</title>
    <url>/1-(0~50)/4-css_private_note/</url>
    <content><![CDATA[<h2 id="0-words"><a href="#0-words" class="headerlink" title="0. words"></a>0. words</h2><p><a href="https://fanyi.baidu.com/#en/zh/private">private</a>；<a href="https://fanyi.baidu.com/#en/zh/cell">cell</a>；</p>
<h2 id="1-清除浮动"><a href="#1-清除浮动" class="headerlink" title="1. 清除浮动"></a>1. 清除浮动</h2><ol>
<li><p>额外标签法（在最后一个浮动标签后，新加一个标签，给其设置clear：both；）</p>
<a id="more"></a>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line">    <span class="selector-class">.fahter</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid deeppink;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.big</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background</span>: darkorange;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.small</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">        <span class="attribute">background</span>: darkmagenta;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.footer</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background</span>: darkslateblue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.clear</span>&#123;</span><br><span class="line">        <span class="attribute">clear</span>:both;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;fahter&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;big&quot;&gt;big&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;small&quot;&gt;small&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;额外标签法&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>优点：通俗易懂，方便</p>
<p>缺点：添加无意义标签，语义化差</p>
</li>
<li><p>父级添加overflow属性（父元素添加overflow:hidden）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.fahter</span>&#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">     <span class="attribute">border</span>: <span class="number">1px</span> solid deeppink;</span><br><span class="line">     <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>优点：代码简洁</p>
<p>缺点：内容增多的时候容易造成不会自动换行导致内容被隐藏掉，无法显示要溢出的元素</p>
</li>
<li><p>使用after伪元素清除浮动（推荐使用）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;<span class="comment">/*伪元素是行内元素 正常浏览器清除浮动方法*/</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">clear</span>:both;</span><br><span class="line">        <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.clearfix</span>&#123;</span><br><span class="line">        *zoom: 1;/*ie6清除浮动的方式 *号只有IE6-IE7执行，其他浏览器不执行*/</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;div class=&quot;fahter clearfix&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;big&quot;&gt;big&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;small&quot;&gt;small&lt;/div&gt;</span><br><span class="line">        &lt;!--&lt;div class=&quot;clear&quot;&gt;额外标签法&lt;/div&gt;--&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



</li>
</ol>
<p>   优点：符合闭合浮动思想，结构语义化正确</p>
<p>   缺点：ie6-7不支持伪元素：after，使用zoom:1触发hasLayout.</p>
<p>   推荐使用</p>
<ol start="4">
<li><p>使用before和after双伪元素清除浮动</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="attribute">display</span>: table;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">        <span class="attribute">clear</span>: both;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.clearfix</span>&#123;</span><br><span class="line">        *zoom: 1;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> &lt;div class=&quot;fahter clearfix&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;big&quot;&gt;big&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;small&quot;&gt;small&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>优点：代码更简洁</p>
<p>缺点：用zoom:1触发hasLayout.</p>
<p>推荐使用</p>
<hr>
<p><a href="https://blog.csdn.net/h_qingyi/article/details/81269667">https://blog.csdn.net/h_qingyi/article/details/81269667</a></p>
</li>
</ol>
<hr>
<h2 id="2-padding撑开盒子"><a href="#2-padding撑开盒子" class="headerlink" title="2. padding撑开盒子"></a>2. padding撑开盒子</h2><p>此时有一个问题想问：padding什么时候会撑开盒子</p>
<blockquote>
<p>div有宽度的情况下，会撑开盒子；</p>
<p>但，div总不能一直没宽；</p>
<p>这时，可以用父元素设置宽；子元素继承宽度设置内边距不会撑开</p>
<p><a href="https://www.jianshu.com/p/3e2d76ab9ae8">https://www.jianshu.com/p/3e2d76ab9ae8</a></p>
</blockquote>
<br />

<hr>
<h2 id="3-外边距合并（塌陷）"><a href="#3-外边距合并（塌陷）" class="headerlink" title="3. 外边距合并（塌陷）"></a>3. 外边距合并（塌陷）</h2><p><a href="https://www.cnblogs.com/nigori/p/11184303.html">https://www.cnblogs.com/nigori/p/11184303.html</a></p>
<p>外边距塌陷：两个相邻的元素框垂直相遇时，外边距会合并，合并后的外边距的高度等于两个发生合并的外边距中较高的那个边距值</p>
<p>需要注意的是：只有普通文档流中块框的垂直外边距才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并。</p>
<p>有点空虚，等实际遇到了问题，应该就会有感触；</p>
<p>这个更概念：<a href="https://www.cnblogs.com/shcrk/p/9311273.html">https://www.cnblogs.com/shcrk/p/9311273.html</a></p>
<hr>
<h2 id="4-zoom"><a href="#4-zoom" class="headerlink" title="4. zoom"></a>4. zoom</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport/zoom">MDN文档</a></p>
<p><strong><code>zoom</code></strong> <a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</a> 属性会根据 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport"><code>@viewport</code></a> 来初始化一个缩放因数。</p>
<p>当设置<code>1.0</code> 或 <code>100%</code>时表示不缩放。更大的值放大，更小的值缩小。</p>
<h3 id="4-2-应用所见"><a href="#4-2-应用所见" class="headerlink" title="4.2 应用所见"></a>4.2 应用所见</h3><p><img src="http://bucket-c70.test.upcdn.net/4/1-4-1.png" alt="1"></p>
<hr>
<h2 id="5-css选择器；"><a href="#5-css选择器；" class="headerlink" title="5. css选择器；"></a>5. css选择器；</h2><p><a href="https://www.w3school.com.cn/cssref/css_selectors.asp">链接-w3cschool</a></p>
<p>在 CSS 中，选择器是一种模式，用于选择需要添加样式的元素。</p>
<p>“CSS” 列指示该属性是在哪个 CSS 版本中定义的。（CSS1、CSS2 还是 CSS3。）</p>
<table>
<thead>
<tr>
<th align="left">选择器</th>
<th align="left">例子</th>
<th align="left">例子描述</th>
<th align="left">CSS</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_class.asp">.<em>class</em></a></td>
<td align="left">.intro</td>
<td align="left">选择 class=”intro” 的所有元素。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_id.asp">#<em>id</em></a></td>
<td align="left">#firstname</td>
<td align="left">选择 id=”firstname” 的所有元素。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_all.asp">*</a></td>
<td align="left">*</td>
<td align="left">选择所有元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_element.asp"><em>element</em></a></td>
<td align="left">p</td>
<td align="left">选择所有 <p> 元素。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_element_comma.asp"><em>element</em>,<em>element</em></a></td>
<td align="left">div,p</td>
<td align="left">选择所有 <div> 元素和所有 <p> 元素。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_element_element.asp"><em>element</em> <em>element</em></a></td>
<td align="left">div p</td>
<td align="left">选择 <div> 元素内部的所有 <p> 元素。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_element_gt.asp"><em>element</em>&gt;<em>element</em></a></td>
<td align="left">div&gt;p</td>
<td align="left">选择父元素为 <div> 元素的所有 <p> 元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_element_plus.asp"><em>element</em>+<em>element</em></a></td>
<td align="left">div+p</td>
<td align="left">选择紧接在 <div> 元素之后的所有 <p> 元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_attribute.asp">[<em>attribute</em>]</a></td>
<td align="left">[target]</td>
<td align="left">选择带有 target 属性所有元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_attribute_value.asp">[<em>attribute</em>=<em>value</em>]</a></td>
<td align="left">[target=_blank]</td>
<td align="left">选择 target=”_blank” 的所有元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp">[<em>attribute</em>~=<em>value</em>]</a></td>
<td align="left">[title~=flower]</td>
<td align="left">选择 title 属性包含单词 “flower” 的所有元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_attribute_value_start.asp">[<em>attribute</em>|=<em>value</em>]</a></td>
<td align="left">[lang|=en]</td>
<td align="left">选择 lang 属性值以 “en” 开头的所有元素。</td>
<td align="left">2</td>
</tr>
<tr>
<td align="left"><a href="https://www.w3school.com.cn/cssref/selector_link.asp">:link</a></td>
<td align="left">a:link</td>
<td align="left">选择所有未被访问的链接。</td>
<td align="left">1</td>
</tr>
</tbody></table>
<p>等；更多信息，看链接；</p>
<hr>
<h2 id="6-水平垂直居中"><a href="#6-水平垂直居中" class="headerlink" title="6. 水平垂直居中"></a>6. 水平垂直居中</h2><h3 id="6-1-absolute-transform"><a href="#6-1-absolute-transform" class="headerlink" title="6.1 absolute + transform"></a>6.1 absolute + transform</h3><p>还是绝对定位，但这个方法不需要子元素固定宽高，所以不再需要size类了，HTML代码如下</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;wp&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;<span class="number">123123</span>&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>修复绝对定位的问题，还可以使用css3新增的transform，transform的translate属性也可以设置百分比，其是相对于自身的宽和高，所以可以讲translate设置为-50%，就可以做到居中了，代码如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 此处引用上面的公共代码 */</span></span><br><span class="line"><span class="comment">/* 此处引用上面的公共代码 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 定位代码 */</span></span><br><span class="line"><span class="selector-class">.wp</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方法兼容性依赖translate2d的兼容性</p>
<p>出至：<a href="https://www.jianshu.com/p/907f99004c3e">https://www.jianshu.com/p/907f99004c3e</a></p>
<p>里面还有9种方法；</p>
<h3 id="6-2-flex"><a href="#6-2-flex" class="headerlink" title="6.2 flex"></a>6.2 flex</h3><p>flex作为现代的布局方案，颠覆了过去的经验，只需几行代码就可以优雅的做到水平垂直居中</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;wp&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;<span class="number">123123</span>&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.wp</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>目前在移动端已经完全可以使用flex了，PC端需要看自己业务的兼容性情况</p>
<p>我个人比较在意这两种方法；</p>
<p>作者：南城北港et<br>链接：<a href="https://www.jianshu.com/p/907f99004c3e">https://www.jianshu.com/p/907f99004c3e</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>居中元素定宽高固定</th>
<th>PC兼容性</th>
<th>移动端兼容性</th>
</tr>
</thead>
<tbody><tr>
<td>absolute + 负margin</td>
<td>是</td>
<td>ie6+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>absolute + margin auto</td>
<td>是</td>
<td>ie6+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>absolute + calc</td>
<td>是</td>
<td>ie9+, chrome19+, firefox4+</td>
<td>安卓4.4+, iOS6+</td>
</tr>
<tr>
<td>absolute + transform</td>
<td>否</td>
<td>ie9+, chrome4+, firefox3.5+</td>
<td>安卓3+, iOS6+</td>
</tr>
<tr>
<td>writing-mode</td>
<td>否</td>
<td>ie6+, chrome4+, firefox3.5+</td>
<td>安卓2.3+, iOS5.1+</td>
</tr>
<tr>
<td>lineheight</td>
<td>否</td>
<td>ie6+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>table</td>
<td>否</td>
<td>ie6+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>css-table</td>
<td>否</td>
<td>ie8+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>flex</td>
<td>否</td>
<td>ie10+, chrome4+, firefox2+</td>
<td>安卓2.3+, iOS6+</td>
</tr>
<tr>
<td>grid</td>
<td>否</td>
<td>ie10+, chrome57+, firefox52+</td>
<td>安卓6+, iOS10.3+</td>
</tr>
</tbody></table>
<h3 id="6-3-transform-translate解析"><a href="#6-3-transform-translate解析" class="headerlink" title="6.3 transform:translate解析"></a>6.3 transform:translate解析</h3><p><a href="https://www.cnblogs.com/yanggeng/p/11286250.html">https://www.cnblogs.com/yanggeng/p/11286250.html</a></p>
<h4 id="6-3-1-word"><a href="#6-3-1-word" class="headerlink" title="6.3.1 word"></a>6.3.1 word</h4><p>1-<a href="https://fanyi.baidu.com/translate?aldtype=16047&query=sticky&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/transform">transform</a></p>
<p>2-<a href="https://fanyi.baidu.com/translate?aldtype=16047&query=sticky&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/translate">translate</a></p>
<p>3-[ratate</p>
<h4 id="6-3-2-MDN文档"><a href="#6-3-2-MDN文档" class="headerlink" title="6.3.2 MDN文档"></a>6.3.2 MDN文档</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/translate">https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/translate</a></p>
<ul>
<li><p><strong>语法</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Single &lt;length-percentage&gt; values */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(200<span class="selector-tag">px</span>);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(50%);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Double &lt;length-percentage&gt; values */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(100<span class="selector-tag">px</span>, 200<span class="selector-tag">px</span>);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(100<span class="selector-tag">px</span>, 50%);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(30%, 200<span class="selector-tag">px</span>);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(30%, 50%);</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>值</strong></p>
<ul>
<li><p>单个 <code>&lt;length-percentage&gt;</code> 作为参数</p>
<p>该值是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/length">``</a> 或者 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/percentage">``</a> 代表翻译向量的横坐标  (horizontal, x-coordinate) . 而向量的纵坐标 (vertical, y-coordinate) 会被默认为 <code>0</code>. 例如, <code>translate(2)</code> 等价于 <code>translate(2, 0)</code> 。 里面还可以填百分比值，百分比值是指 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-box"><code>transform-box</code></a> 属性定义的参考框的宽度。</p>
</li>
<li><p>参数是两个 <code>&lt;length-percentage&gt;</code> 构成</p>
<p>此值描述两个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/length">``</a> 或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/percentage">``</a> 值，分别代表翻译的横坐标 (x-coordinate)  和纵坐标  (y-coordinate)  向量。 百分比作为第一个值表示宽度，第二个部分表示由 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-box"><code>transform-box</code></a> 属性定义的参考框的高度。</p>
</li>
</ul>
</li>
<li><p>所以：</p>
<p>transform: translate(-50%, -50%);</p>
<p>是自己box（盒子）（DIV）的宽度高度；</p>
<p>出至：里面还可以填百分比值，百分比值是指 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-box"><code>transform-box</code></a> 属性定义的参考框的宽度。</p>
<p>所以，不需要知道自身盒子的高度与宽度；</p>
<ul>
<li>更多解释，看下面的 6.3.2.2 transform-box</li>
</ul>
</li>
</ul>
<h5 id="2-transform-box"><a href="#2-transform-box" class="headerlink" title="2. transform-box"></a>2. <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-box">transform-box</a></h5><p>因为默认值是：border-box</p>
<p>而：border-box ，目前找到的是<a href="https://www.runoob.com/cssref/css3-pr-box-sizing.html">box-sizing</a>的属性</p>
<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">content-box</td>
<td align="left">这是 CSS2.1 指定的宽度和高度的行为。指定元素的宽度和高度（最小/最大属性）适用于box的宽度和高度。元素的填充和边框布局和绘制指定宽度和高度除外</td>
</tr>
<tr>
<td align="left">border-box</td>
<td align="left">指定宽度和高度（最小/最大属性）确定元素边框。也就是说，对元素指定宽度和高度包括了 padding 和 border 。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。</td>
</tr>
<tr>
<td align="left">inherit</td>
<td align="left">指定 box-sizing 属性的值，应该从父元素继承</td>
</tr>
</tbody></table>
<p>个人理解：</p>
<ul>
<li><p>盒子的高度，宽度；把border，padding的高度和宽度也算为了盒子的高度和宽度里面；</p>
</li>
<li><p>没有包括外边距</p>
</li>
</ul>
<hr>
<h3 id="6-4-vertical-align"><a href="#6-4-vertical-align" class="headerlink" title="6.4 vertical-align"></a>6.4 vertical-align</h3><p>0.word</p>
<ul>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/vertical">vertical</a></li>
</ul>
<p>1.概述</p>
<p>CSS 的 <strong>vertical-align</strong> 属性使用场景： 经常用于设置图片或者表单(行内块元素）和文字垂直对齐。</p>
<p>官方解释： 用于设置一个元素的<strong>垂直对齐方式</strong>，但是它只针对于行内元素或者行内块元素有效。</p>
<p>语法：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">vertical-align : baseline | top | middle | bottom </span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">baseline</td>
<td align="center">默认。元素放置在父元素的基线上</td>
</tr>
<tr>
<td align="center">top</td>
<td align="center">把元素的顶端与行中最高元素的顶端对齐</td>
</tr>
<tr>
<td align="center">middle</td>
<td align="center">把此元素放置在父元素的中部</td>
</tr>
<tr>
<td align="center">bottom</td>
<td align="center">把元素的顶端与行中最低的元素的顶端对齐</td>
</tr>
</tbody></table>
<p><img src="http://bucket-c70.test.upcdn.net/12/69.png" alt="69"></p>
<br />

<hr>
<p>2.默认基线</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/70.png" alt="70"></p>
<p>3.设置成底线</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br />

<p><img src="http://bucket-c70.test.upcdn.net/12/71.png" alt="71"></p>
<p>3.图片与文字垂直居中：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="2-记住"><a href="#2-记住" class="headerlink" title="2. 记住"></a>2. 记住</h4><p>1.它只针对于行内元素或者行内块元素有效。</p>
<p>2.如果不是，则要转换</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/72.png" alt="72"></p>
<ul>
<li><p>不过，<code>&lt;i&gt;</code>是行内元素，应该不需要转换</p>
<p>我实验过，在同一行(行内元素)，且高度宽度无效(不是行内块元素)。是行内元素；</p>
</li>
</ul>
<p>3.即使是文本域，也可以让它与文字居中，文本域是行内块元素</p>
<hr>
<h2 id="7-符号"><a href="#7-符号" class="headerlink" title="7. 符号"></a>7. 符号</h2><ol>
<li>左箭头；<code>&amp;lt</code>，&amp;lt</li>
<li>右箭头；&amp;gt</li>
<li></li>
</ol>
<hr>
<h2 id="8-border-radius"><a href="#8-border-radius" class="headerlink" title="8. border-radius"></a>8. border-radius</h2><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p>
<p>border-radius 属性用于设置元素的外边框圆角。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/50.png" alt="50"></p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:length</span>;    </span><br></pre></td></tr></table></figure>

<ul>
<li><p>参数值可以为数值或百分比的形式</p>
</li>
<li><p>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</p>
</li>
<li><p>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</p>
</li>
<li><p>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</p>
</li>
<li><p>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</p>
</li>
<li><p><code>&lt;length&gt;</code>定义圆形半径或椭圆的半长轴，半短轴。负值无效。</p>
<p><code>&lt;percentage&gt;</code></p>
<p>使用百分数定义圆形半径或椭圆的半长轴，半短轴。水平半轴相对于盒模型的宽度；垂直半轴相对于盒模型的高度。负值无效。</p>
</li>
</ul>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">border-radius: 1em/5em;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等价于： */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">border-top-left-radius</span>:     1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-top-right-radius</span>:    1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-right-radius</span>: 1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-left-radius</span>:  1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">border-radius: 4px 3px 6px / 2px 4px;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等价于： */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">border-top-left-radius</span>:     4<span class="selector-tag">px</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-top-right-radius</span>:    3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-right-radius</span>: 6<span class="selector-tag">px</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-left-radius</span>:  3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure>

<p>椭圆就需要设置 两个属性，一个半长轴，一个半短轴；</p>
<p>3.设置一个xpx属性，就是圆，半长轴=半短轴；</p>
<p>3.1 而百分比不是；</p>
<ul>
<li><p>百分比：x*百分比，Y*百分比</p>
</li>
<li><p>不过，如果是正方形，是个圆；</p>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果不是正方形，就是椭圆；</p>
</li>
</ul>
<hr>
<h2 id="8-引用css"><a href="#8-引用css" class="headerlink" title="8. 引用css"></a>8. 引用css</h2><p>1.三种方法：</p>
<ul>
<li>外部样式表(External style sheet)</li>
<li>内部样式表(Internal style sheet)</li>
<li>内联样式(Inline style)</li>
</ul>
<h3 id="8-1外部样式表"><a href="#8-1外部样式表" class="headerlink" title="8.1外部样式表"></a>8.1外部样式表</h3><p>1.当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 <code>&lt;link&gt;</code> 标签链接到样式表。 <code>&lt;link&gt;</code> 标签在（文档的）头部：</p>
<ul>
<li><code>&lt;head&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &lt;/head&gt;</code></li>
</ul>
<p>2.浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p>
<p>3.外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;/images/back40.gif&quot;</span>);&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p> 不要在属性值与单位之间留有空格（如：”margin-left: 20 px” ），正确的写法是 “margin-left: 20px” 。</p>
</blockquote>
<hr>
<h3 id="8-2内部样式表"><a href="#8-2内部样式表" class="headerlink" title="8.2内部样式表"></a>8.2内部样式表</h3><p>1.当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 <style> 标签在文档头部定义内部样式表，就像这样:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;images/back40.gif&quot;</span>);&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="8-3-内联样式"><a href="#8-3-内联样式" class="headerlink" title="8.3 内联样式"></a>8.3 内联样式</h3><p>1.由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，</p>
<p>例如当样式仅需要在一个元素上应用一次时。</p>
<p>2.要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 </p>
<p>CSS 属性。本例展示如何改变段落的颜色和左外边距：</p>
<p><code>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;这是一个段落。&lt;/p&gt;</code></p>
<hr>
<h3 id="8-4-优先级"><a href="#8-4-优先级" class="headerlink" title="8.4 优先级"></a>8.4 优先级</h3><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p>
<p>一般情况下，优先级如下：</p>
<p><strong>内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</strong></p>
<p><strong>注意：*</strong>如果外部样式放在内部样式的后面，则外部样式将覆盖内部样式。*</p>
<ul>
<li>因为执行html代码是，从前到后的；</li>
</ul>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>5-Markdown_note</title>
    <url>/5-md%E8%AF%AD%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7note/</url>
    <content><![CDATA[<h2 id="1-图片题注；"><a href="#1-图片题注；" class="headerlink" title="1. 图片题注；"></a>1. 图片题注；</h2><ul>
<li><p><code>&lt;center style=&quot;font-size:14px;color:#C0C0C0;text-decoration:underline&quot;&gt;图1.知乎&lt;/center&gt;</code></p>
<p>可以不要<code>text-decoration:underline</code> 就没有下划线；</p>
<p><code>&lt;center style=&quot;font-size:15px;color:#C0C0C0;&quot;&gt;图1&lt;/center&gt;</code></p>
<a id="more"></a>
</li>
<li><p>来源：<a href="https://www.zhihu.com/question/42802592">https://www.zhihu.com/question/42802592</a></p>
</li>
<li><p>实例：</p>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图1.知乎</center> 

<center style="font-size:14px;color:#C0C0C0;">图1.知乎</center> 

</li>
</ul>
<hr>
<h2 id="2-删除线"><a href="#2-删除线" class="headerlink" title="2.  删除线"></a>2.  删除线</h2><p>用~~把需要显示删除线的字符包裹起来</p>
<p><code>~~删除~~</code></p>
<p><del>删除</del> ;效果如左；</p>
<hr>
<h2 id="3-链接"><a href="#3-链接" class="headerlink" title="3. 链接"></a>3. 链接</h2><p><a href="https://www.runoob.com/markdown/md-link.html">https://www.runoob.com/markdown/md-link.html</a></p>
<p>链接使用方法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址</span>)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>例如：</p>
<p><code>这是一个链接 [菜鸟教程](https://www.runoob.com)</code></p>
<p>这是一个链接 <a href="https://www.runoob.com">菜鸟教程</a></p>
<hr>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>5-Markdown_note</title>
    <url>/1-(0~50)/5-md%E8%AF%AD%E6%B3%95%E4%B8%8E%E6%8A%80%E5%B7%A7note/</url>
    <content><![CDATA[<h2 id="1-图片题注；"><a href="#1-图片题注；" class="headerlink" title="1. 图片题注；"></a>1. 图片题注；</h2><ul>
<li><p><code>&lt;center style=&quot;font-size:14px;color:#C0C0C0;text-decoration:underline&quot;&gt;图1.知乎&lt;/center&gt;</code></p>
<p>可以不要<code>text-decoration:underline</code> 就没有下划线；</p>
<p><code>&lt;center style=&quot;font-size:15px;color:#C0C0C0;&quot;&gt;图1&lt;/center&gt;</code></p>
<a id="more"></a>
</li>
<li><p>来源：<a href="https://www.zhihu.com/question/42802592">https://www.zhihu.com/question/42802592</a></p>
</li>
<li><p>实例：</p>
<center style="font-size:14px;color:#C0C0C0;text-decoration:underline">图1.知乎</center> 

<center style="font-size:14px;color:#C0C0C0;">图1.知乎</center> 

</li>
</ul>
<hr>
<h2 id="2-删除线"><a href="#2-删除线" class="headerlink" title="2.  删除线"></a>2.  删除线</h2><p>用~~把需要显示删除线的字符包裹起来</p>
<p><code>~~删除~~</code></p>
<p><del>删除</del> ;效果如左；</p>
<hr>
<h2 id="3-链接"><a href="#3-链接" class="headerlink" title="3. 链接"></a>3. 链接</h2><p><a href="https://www.runoob.com/markdown/md-link.html">https://www.runoob.com/markdown/md-link.html</a></p>
<p>链接使用方法如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">链接名称</span>](<span class="link">链接地址</span>)</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>例如：</p>
<p><code>这是一个链接 [菜鸟教程](https://www.runoob.com)</code></p>
<p>这是一个链接 <a href="https://www.runoob.com">菜鸟教程</a></p>
<hr>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>6-github&#39;s problem_set + gitee</title>
    <url>/1-(0~50)/6-github&amp;&amp;gitee_problem/</url>
    <content><![CDATA[<h2 id="1-github问题集"><a href="#1-github问题集" class="headerlink" title="1. github问题集"></a>1. github问题集</h2><h3 id="1-github挂的网页没有样式"><a href="#1-github挂的网页没有样式" class="headerlink" title="1. github挂的网页没有样式"></a>1. github挂的网页没有样式</h3><p><img src="/img/13-github/1.png" alt="Image"></p>
<a id="more"></a>

<div align='center'>
    <h4>
        1.2. 2020-7-22 20:44:31
    </h4>
</div>



<p><img src="../img/13-github/2.png" alt="avatar"></p>
<p>仓库的名字不能乱改；</p>
<p>后面的.github.io得要。</p>
<p>2020-7-22 20:54:09</p>
<p><img src="../img/13-github/3.png" alt="Image"></p>
<hr>
<h2 id="2-gitee；"><a href="#2-gitee；" class="headerlink" title="2. gitee；"></a>2. gitee；</h2><h3 id="2-1-gitee显示不了博客了；"><a href="#2-1-gitee显示不了博客了；" class="headerlink" title="2.1 gitee显示不了博客了；"></a>2.1 gitee显示不了博客了；</h3><p>没有切到那个模样的图，差不多啥都没有，就只有个背景</p>
<p>报错的图也没截，记录报错的笔记还是不熟练，写不下笔记，只想着怎么去修改错误；</p>
<ol>
<li><p>以为是部署，gitee要手动部署（当然网上有自动部署的配置，我不会弄）部署后还是那个样子；</p>
</li>
<li><p>emmm，突然看到这句话；</p>
<blockquote>
<p>就是每次上传gitee文件后，还是老的页面，这是因为每次上传后必须手动在pages服务里，再点下更新，进行重新部署，要不然还是之前的页面缓存，我的感觉就是删除缓存……<br> pages pro据说可以自动更新，要99元/年，现在量小，用的也不频繁，先不买吧</p>
<p>作者：小魚傳説<br>链接：<a href="https://www.jianshu.com/p/1f860c8f93ef">https://www.jianshu.com/p/1f860c8f93ef</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
</blockquote>
<p>让我回想起缓存，于是我F12，在页面左上角刷新按钮，鼠标右键，点击第三个清理缓存；</p>
<p>成功；</p>
<p><img src="https://note.youdao.com/yws/public/resource/20880918385295a41922f241b7b5ca5d/xmlnote/73FFCB97B07B489D996CB6E07DD89597/39737" alt="图片_picture"></p>
<hr>
</li>
</ol>
<hr>
<h3 id="2-2-第二个号添加公匙"><a href="#2-2-第二个号添加公匙" class="headerlink" title="2.2 第二个号添加公匙"></a>2.2 第二个号添加公匙</h3><h4 id="0-哪个号？第二个号是？"><a href="#0-哪个号？第二个号是？" class="headerlink" title="0. 哪个号？第二个号是？"></a>0. 哪个号？第二个号是？</h4><p>1.<code>3293433914@qq.com</code></p>
<h4 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h4><p>1.在文章：7-blog’s_problem_set.md——4</p>
<ul>
<li><p>且在目录：C:\Users\Administrator.ssh下的config里</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">github_1.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">C:/Users/Administrator/.ssh/id_rsa</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">C:/Users/Administrator/.ssh/id_rsa_gitee</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>得出：</p>
<p>id为：id_rsa_gitee，的密匙gitee还没用过；</p>
</li>
</ul>
<p>2.实验：不在config里面配置，直接用，看能行不</p>
<ul>
<li><p>先不部署了，先直接用gitee pages 生成的公匙看行不行；</p>
<p>不行；报错：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">warning</span>: LF will be replaced <span class="keyword">by</span> CRLF <span class="keyword">in</span> tags/blog/<span class="keyword">index</span>.html.</span><br><span class="line">The file will have its original <span class="type">line</span> endings <span class="keyword">in</span> your working directory</span><br><span class="line"><span class="built_in">warning</span>: LF will be replaced <span class="keyword">by</span> CRLF <span class="keyword">in</span> tags/<span class="keyword">index</span>.html.</span><br><span class="line">The file will have its original <span class="type">line</span> endings <span class="keyword">in</span> your working directory</span><br><span class="line"><span class="keyword">On</span> branch master</span><br><span class="line"><span class="keyword">nothing</span> <span class="keyword">to</span> <span class="keyword">commit</span>, working tree clean</span><br><span class="line"><span class="keyword">Access</span> deined: You <span class="keyword">do</span> <span class="keyword">not</span> have permission push <span class="keyword">to</span> this repository</span><br><span class="line">fatal: Could <span class="keyword">not</span> <span class="keyword">read</span> <span class="keyword">from</span> remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct <span class="keyword">access</span> rights</span><br><span class="line"><span class="keyword">and</span> the repository <span class="keyword">exists</span>.</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>3.继续配置</p>
<p>3.1 设置config</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line">Host gitee_2.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile C:<span class="regexp">/Users/</span>Administrator<span class="regexp">/.ssh/i</span>d_rsa_gitee</span><br></pre></td></tr></table></figure>

<p>3.2 验证：<code>ssh -T git@gitee_2.com</code></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Administrator@</span>SKY<span class="number">-20160609</span>AOR MINGW64 ~/.ssh</span><br><span class="line">$ ssh -T <span class="symbol">git@</span>gitee_2.com</span><br><span class="line"><span class="symbol">git@</span>gitee.com: Permission denied (publickey).</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>git@gitee.com: Permission denied (publickey).</code></p>
<p>含义：<a href="mailto:git@gitee.com">git@gitee.com</a>：权限被拒绝（公钥）。</p>
</li>
</ul>
<p>3.3 是不是因为gitee那边没有配置的原因？</p>
<p>3.4 实验：</p>
<ul>
<li><p>注意：id_rsa.pub是公匙，id_rsa是私匙；</p>
</li>
<li><p>成功：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="type">Administrator</span><span class="meta">@SKY</span><span class="number">-20160609</span>AOR <span class="type">MINGW64</span> ~/.ssh</span><br><span class="line">$ ssh -<span class="type">T</span> git<span class="meta">@gitee</span>_2.com</span><br><span class="line">git<span class="meta">@gitee</span>.com: <span class="type">Permission</span> denied (publickey).</span><br><span class="line"></span><br><span class="line"><span class="type">Administrator</span><span class="meta">@SKY</span><span class="number">-20160609</span>AOR <span class="type">MINGW64</span> ~/.ssh</span><br><span class="line">$ ssh -<span class="type">T</span> git<span class="meta">@gitee</span>_2.com</span><br><span class="line"><span class="type">Hi</span> qilin2! <span class="type">You</span><span class="symbol">&#x27;ve</span> successfully authenticated, but <span class="type">GITEE</span>.<span class="type">COM</span> does not provide shell access.</span><br><span class="line"></span><br><span class="line"><span class="type">Administrator</span><span class="meta">@SKY</span><span class="number">-20160609</span>AOR <span class="type">MINGW64</span> ~/.ssh</span><br><span class="line">$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>4.blog的config.yml配置：</p>
<ul>
<li>我的目录：G:\1-sanciyuan\11-qilin_meiyao_luka</li>
</ul>
<p>4.1 主要是：<code>gitee: git@gitee_2.com:qilin2/zkdm-2.git</code></p>
<ul>
<li><p>而不是：<code>gitee: git@gitee.com:qilin2/zkdm-2.git</code></p>
</li>
<li><pre><code>deploy:
  type: git
  #repo: https://gitee.com/qilinclolik/qilinclolik.git
  repo:
        # github: git@github_1.com:qilin-meiyao-luka/qilin-meiyao-luka.git
        gitee: git@gitee_2.com:qilin2/zkdm-2.git

  # example, https://github.com/hexojs/hexojs.github.io
  branch: master</code></pre></li>
<li><p>网址：</p>
</li>
</ul>
<p>5.over;2020-9-7 05:28:06</p>
<h4 id="2-疑问："><a href="#2-疑问：" class="headerlink" title="2. 疑问："></a>2. 疑问：</h4><p>1.如果先在gitee那边配置的公匙；</p>
<ul>
<li>不在先C:\Users\Administrator.ssh下的config里配置</li>
<li>能不能用？</li>
</ul>
<p>2.即使能用，也无法准确的<code>ssh -T git@gitee_2.com</code></p>
<ul>
<li>因为没那个host</li>
</ul>
<hr>
<h3 id="2-3-不能加载css"><a href="#2-3-不能加载css" class="headerlink" title="2.3. 不能加载css"></a>2.3. 不能加载css</h3><p>1.听说仓库名与个人名要一样</p>
<p><img src="http://bucket-c70.test.upcdn.net/6/1.png" alt="1"></p>
<p>2.试试</p>
<ul>
<li>成功</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>7-bolg Problem_set</title>
    <url>/1-(0~50)/7-blog&#39;s_problem_set/</url>
    <content><![CDATA[<h3 id="0-博客注意事项"><a href="#0-博客注意事项" class="headerlink" title="0. 博客注意事项"></a>0. 博客注意事项</h3><hr>
<h4 id="0-1-自定义文件"><a href="#0-1-自定义文件" class="headerlink" title="0.1 自定义文件"></a>0.1 自定义文件</h4><p>1.如果有修改的文件可以自定义，就尽量在一旁新建一个文件使用；</p>
<a id="more"></a>

<p><img src="http://bucket-c70.test.upcdn.net/7/4.png" alt="4"></p>
<h4 id="0-2-有时候hexo-s报错"><a href="#0-2-有时候hexo-s报错" class="headerlink" title="0.2 有时候hexo s报错"></a>0.2 有时候hexo s报错</h4><p>1.有时候hexo s 报错</p>
<ul>
<li>又不知道怎么呢</li>
</ul>
<p>2.或者你知道，刚才有个操作没保存，现在报错了</p>
<ul>
<li>确实修改了东西，但这个修改前后，之前都没报错</li>
<li>而现在修改就报错了</li>
</ul>
<p>3.你用了 hexo g</p>
<p>4.hexo clean 即可</p>
<p>5.具体为什么不知。</p>
<p>6.例如：</p>
<p>配置了加密</p>
<ul>
<li><pre><code>password: muyiio
abstract: 这里有东西被加密了，需要输入密码查看哦。
message: 您好，这里需要密码。
wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。
wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容
&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;如果hexo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;g过，不hexo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;clean，修改其中配置，hexo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;就会报错。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;明明没改博客的config，等其他系统配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;当时还有点慌，毕竟没改系统方面的配置怎么在报错？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### 0.3 往下滑，页面缩小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.鼠标右键左上角刷新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;选择清空缓存，并硬件刷新（其实我想清空缓存刷新，可都是硬件刷新）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;### 1. 博客图片不显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![1.png](/img/14/1.png)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;绝对路径的&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;“/”号会被&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;变成%，无法识别；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;相对路径，不知道为什么没有用；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;但比较迷惑性的是，在Typora里面是看的到的；2020-7-22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;:09:37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![1.png](../img/14/2.png)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### 1.2. 最终&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.无意中发现了这个：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![1.png](../img/14/3.png)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;虽然在typora里面看不到；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;但是hexo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;s能看到；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;组队说了：不能同时的，解析规则不一样；2020-9-5&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;:37:00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;![1.png](/img/14/4.png)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.之后hexo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;试试；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;有效；2020-7-23&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;:24:50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### 1.3. 还是用网络&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;空间问题，还是把图片弄到网络上；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;目前用的有道云笔记&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;；2020-8-3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;:25:21&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### 1.4 让typore可以预览&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.在上面1.2里，说了不能预览&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.因为，permalink没配置好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;hexo的_config.yml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;```yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# URL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;## If your site is put in a subdirectory, set url as &amp;#x27;http://yoursite.com/child&amp;#x27; and root as &amp;#x27;/child/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;url:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https://qilinclolik.gitee.io&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#http://yoursite.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;root:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 永久链接格式：分类/文件名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;permalink:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;:title/&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#:category/:title/ ; :lang/:title/ &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;permalink_defaults:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;pretty_urls:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;trailing_index:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Set to false to remove trailing &amp;#x27;index.html&amp;#x27; from permalinks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;trailing_html:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Set to false to remove trailing &amp;#x27;.html&amp;#x27; from permalinks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;


</code></pre></li>
</ul>
<ul>
<li><p>之前permalink那里是 :category/:title/</p>
</li>
<li><p>让每次url都多了一个category（分类名)</p>
</li>
</ul>
<p>3.改成<code>permalink: :title/</code>就好了</p>
<ul>
<li><p>为什么呢？</p>
</li>
<li><p>你看相对路径：例如：</p>
<ul>
<li><p>../img/14/2.png；</p>
</li>
<li><p>含义是：文字的上一级目录；</p>
<p><img src="../img/7/1.png" alt="1"></p>
<p>上一级目录是source，文章在_posts目录里面；</p>
</li>
</ul>
<p>3.3 好，回到source，然后进入img，进入14，获取2.png；</p>
<p>3.4 这就是相对路径的含义；<br>3.5 而以前的永久链接格式：</p>
<p>permalink: :category/:title/ ;让url多了一个category(分类名)</p>
<p>3.6 这样相对路径就找不到img了</p>
<ul>
<li>写成<code>../img/category/14/2.png</code>才可以；</li>
</ul>
</li>
</ul>
<h3 id="2-密匙已经被使用；"><a href="#2-密匙已经被使用；" class="headerlink" title="2. 密匙已经被使用；"></a>2. 密匙已经被使用；</h3><ol>
<li><p>也许在github，一个账户正在使用了一个ssh密匙后，那个ssh就会被记录。</p>
<p>而gitee那边不冲突；</p>
<p>一个ssh密匙，分别可以在github与gitee都使用；</p>
<!--more-->

<p>但一个密匙应该不能在两个github号上用；</p>
</li>
<li><p>只有这样假设了。去追求是否正确就不用了。</p>
</li>
<li><p>第二个github号：qilin-meiyao-luka，用的是3293-ssh密匙</p>
<p>唯一的gitee号也是这个密匙；</p>
<p>大号github，用的7920ssh密匙；</p>
<p>2020-8-7 18:35:45</p>
<hr>
</li>
</ol>
<h3 id="3-报错–not-found：git；"><a href="#3-报错–not-found：git；" class="headerlink" title="3. 报错–not found：git；"></a>3. 报错–not found：git；</h3><p><img src="https://i.loli.net/2020/08/07/rC3tXaVGJubNLBo.png" alt=""></p>
<p>那手动创建一个试试；</p>
<p><code>npm install hexo-deployer-git --save</code></p>
<p>不对，这是个插件，单纯的没安装这个插件。没有这个，应该就不能生成本地静态文件吧；</p>
<hr>
<h3 id="4-hexo-d-报错-–第二个github账号–ssh冲突；"><a href="#4-hexo-d-报错-–第二个github账号–ssh冲突；" class="headerlink" title="4. hexo d 报错 –第二个github账号–ssh冲突；"></a>4. hexo d 报错 –第二个github账号–ssh冲突；</h3><p>报错内容：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ERROR</span>: Permission to qilin-meiyao-luka/qilin-meiyao-luka.git denied to Cqilin.</span><br><span class="line"><span class="attribute">fatal</span>: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL &#123;</span><br><span class="line">  err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (G:\1-sanciyuan\11-qilin_meiyao_luka\node_modu</span><br><span class="line"><span class="attribute">les\hexo-deployer-git\node_modules\hexo-util\lib\spawn.js:51:21)</span></span><br><span class="line">      at ChildProcess.emit (events.js:210:5)</span><br><span class="line">      at ChildProcess.cp.emit (G:\1-sanciyuan\11-qilin_meiyao_luka\node_modules\</span><br><span class="line"><span class="attribute">cross-spawn\lib\enoent.js:34:29)</span></span><br><span class="line">      at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12)</span><br><span class="line">&#123;</span><br><span class="line">    code: 128</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Something&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/do</span><br><span class="line"><span class="attribute">cs/troubleshooting.html</span></span><br></pre></td></tr></table></figure>

<br />

<p>貌似是找不到仓库地址；不弄了，累了；2020-8-7 19:18:14</p>
<h4 id="4-1-百度，多个ssh对应不同的github账号；"><a href="#4-1-百度，多个ssh对应不同的github账号；" class="headerlink" title="4.1 百度，多个ssh对应不同的github账号；"></a>4.1 百度，多个ssh对应不同的github账号；</h4><ul>
<li><p>虽然gitee用的3293-ssh，而不是大号github用的；</p>
</li>
<li><p>但在config里面有配置。</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">C:/Users/Administrator/.ssh/id_rsa_gitee</span></span><br></pre></td></tr></table></figure>

<p>根据网上资料所说：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">git<span class="meta">@github</span>.<span class="attr">com:</span>name/project.git (这是原来直接复制过来的的url)</span><br><span class="line">这时候要改一下:</span><br><span class="line">git<span class="meta">@github</span>_1.<span class="attr">com:</span>name/project.git </span><br><span class="line">这个github_1就是之前在config配置文件里修改的host</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>因为我配置了config，所以第二个github账号也用到了第一个github账号的ssh，从而第二个号没有权限；</p>
</li>
<li><p>假如我这么设置试试：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># gitee</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">gitee.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">C:/Users/Administrator/.ssh/id_rsa_gitee</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line"><span class="attr">Host</span> <span class="string">github_1.com</span></span><br><span class="line"><span class="attr">HostName</span> <span class="string">github.com</span></span><br><span class="line"><span class="attr">PreferredAuthentications</span> <span class="string">publickey</span></span><br><span class="line"><span class="attr">IdentityFile</span> <span class="string">C:/Users/Administrator/.ssh/id_rsa</span></span><br></pre></td></tr></table></figure>

<p>虽然第一个gitee与最下面的github用的同一个ssh。</p>
<p>但万一不冲突呢？先实验试试；</p>
<blockquote>
<p>如果不行，就创建第三个ssh；</p>
</blockquote>
</li>
</ul>
<h4 id="4-2-在git-bash里面验证试试："><a href="#4-2-在git-bash里面验证试试：" class="headerlink" title="4.2 在git bash里面验证试试："></a>4.2 在git bash里面验证试试：</h4>  <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">Administrator@SKY-<span class="number">20160609</span>AOR MINGW64 ~</span><br><span class="line">$ ssh -T git@gitee.com</span><br><span class="line">Hi Cqilin! Yo<span class="string">u&#x27;ve successfully authenticated, but GITEE.COM does not provide shell access.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Administrator@SKY-20160609AOR MINGW64 ~</span></span><br><span class="line"><span class="string">$ ssh -T git@github.com</span></span><br><span class="line"><span class="string">Hi Cqilin! You&#x27;</span>ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br><span class="line">Administrator@SKY-<span class="number">20160609</span>AOR MINGW64 ~</span><br><span class="line">$ ssh -T git@github_1.com</span><br><span class="line">Hi qilin-meiyao-luka! Yo<span class="string">u&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Administrator@SKY-20160609AOR MINGW64 ~</span></span><br><span class="line"><span class="string">$</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>

<p>  成功！</p>
  <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">Administrator@</span>SKY<span class="number">-20160609</span>AOR MINGW64 ~</span><br><span class="line">$ ssh -T <span class="symbol">git@</span>github_1.com</span><br><span class="line">Hi qilin-meiyao-luka! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure>

<p>  成功获取到第二个github账号：qilin-meiyao-luka;</p>
<p>  3.3  注意远程仓库的url也要改：</p>
  <figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  #<span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//gitee.com/qilinclolik/qilinclolik.git</span></span><br><span class="line">  <span class="attribute">repo</span>:</span><br><span class="line">        <span class="attribute">github</span>: <span class="attribute">https</span>:<span class="comment">//github_1.com/qilin-meiyao-luka/qilin-meiyao-luka.git</span></span><br><span class="line">  # example, <span class="attribute">https</span>:<span class="comment">//github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>

<p>  也要改成github_1 ;</p>
<p>  改了就报错；</p>
<p>  试试不改能不能行；（改是文章里面说的，但既然报错，只有不改试试）</p>
<p>  3.3.1 发现问题，没有用仓库的ssh链接，用的html链接；但也不应该报错；</p>
<ul>
<li><p>改成ssh链接，并遵循文章的修改为github_1，先这么试试；</p>
<p><code>git@github_1.com:qilin-meiyao-luka/qilin-meiyao-luka.git</code></p>
<p>上传失败；</p>
<p>改用 git bash；</p>
<p>上传成功；</p>
<p>但是没有css；</p>
<p>…..</p>
</li>
</ul>
<h4 id="4-3-解决博客没有css"><a href="#4-3-解决博客没有css" class="headerlink" title="4.3 解决博客没有css"></a>4.3 解决博客没有css</h4><ol>
<li><p>老问题，仓库名字：</p>
<p>qilin-meiyao-luka.github.io</p>
<p>它默认的是：qilin-meiyao-luka</p>
<p>必须把.github.io填上；</p>
<p>还有右边的确认；</p>
<p><img src="https://i.loli.net/2020/08/10/EVWGMBmpvRba78S.png" alt="1"></p>
<p>over；2020-8-7 20:19:16</p>
</li>
</ol>
<hr>
<h3 id="5-next主题侧边栏没有统计；"><a href="#5-next主题侧边栏没有统计；" class="headerlink" title="5. next主题侧边栏没有统计；"></a>5. next主题侧边栏没有统计；</h3><p>8.0版本；问题：</p>
<p><img src="https://i.loli.net/2020/08/10/oWJSukc9IrihlUT.png" alt="1"></p>
<p>解决：<a href="https://theme-next.js.org/docs/theme-settings/index.html?highlight=configuring+menu+items#Configuring-Menu-Items">https://theme-next.js.org/docs/theme-settings/index.html?highlight=configuring+menu+items#Configuring-Menu-Items</a></p>
<p>最下面：4.5. Configuring Menu Items</p>
<p>y default NexT shows the icons of menu items without badges.</p>
<ul>
<li><a href="https://theme-next.js.org/docs/getting-started/#menu_settings-1"><code>icons</code></a></li>
<li><a href="https://theme-next.js.org/docs/getting-started/#menu_settings-2"><code>badges</code></a></li>
</ul>
<p>Set the value <code>badges</code> to <code>true</code> to display the count of Posts / Categories / Tags within menu items in <code>menu_settings</code> section in theme config file as following:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">next/_config.yml</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>2020-8-10 14:53:55</p>
<p>2.现在不是这个样子了，现在又改了；2020-9-12 11:12:41</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Configuring Menu Items</span><br><span class="line">Menu<span class="built_in"> settings </span>items have format Key: /link/ || icon which contains 3 values:</span><br><span class="line"></span><br><span class="line">Key</span><br><span class="line">link</span><br><span class="line">icon</span><br><span class="line">Key → is the name of menu item (home, archives, etc.).</span><br><span class="line"><span class="keyword">If</span> translate <span class="keyword">for</span> this menu will be found <span class="keyword">in</span> languages, this translate will be loaded; <span class="keyword">if</span> <span class="keyword">not</span>, Key name will be used.</span><br><span class="line"></span><br><span class="line">Key value is case sensitive (e.g. home is <span class="keyword">not</span> same as Home).</span><br><span class="line"></span><br><span class="line">By default, all menu items are commented out <span class="keyword">to</span> ensure that you can override them <span class="keyword">in</span> the Alternate Theme Config.</span><br><span class="line"><span class="keyword">To</span> customize menu items, <span class="builtin-name">edit</span> the following content <span class="keyword">in</span> theme<span class="built_in"> config </span>file:</span><br><span class="line"></span><br><span class="line">next/_config.yml</span><br><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  #about: /about/ || fa fa-user</span><br><span class="line">  #tags: /tags/ || fa fa-tags</span><br><span class="line">  #categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br><span class="line">Except home <span class="keyword">and</span> archives, all custom pages under menu section need <span class="keyword">to</span> be created manually. See «Custom<span class="built_in"> Page </span>Support».</span><br><span class="line"></span><br><span class="line">Besides, hexo-generator-sitemap plugin is required <span class="keyword">for</span> sitemap support.</span><br><span class="line"></span><br><span class="line">Dynamic sub-menu within hierarchy structure is also supported. <span class="builtin-name">Add</span> your sub-menu items <span class="keyword">in</span> menu section <span class="keyword">in</span> theme<span class="built_in"> config </span>file as following:</span><br><span class="line"></span><br><span class="line">next/_config.yml</span><br><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  Docs:</span><br><span class="line">    default: /docs/ || fa fa-book</span><br><span class="line">    Getting Started:</span><br><span class="line">      default: /getting-started/ || fa fa-flag</span><br><span class="line">      Installation: /installation.html || fa fa-download</span><br><span class="line">      Configuration: /configuration.html || fa fa-wrench</span><br><span class="line">    Third Party Services:</span><br><span class="line">      default: /third-party-services/ || fa fa-puzzle-piece</span><br><span class="line">      Math Equations: /math-equations.html || fa fa-square-root-alt</span><br><span class="line">      Comment Systems: /comments.html || fa fa-comment-alt</span><br><span class="line">A<span class="built_in"> default page </span>is required <span class="keyword">for</span> each sub-menu item.</span><br><span class="line"></span><br><span class="line">By<span class="built_in"> default </span>NexT shows the icons of menu items without badges.</span><br><span class="line"></span><br><span class="line">icons</span><br><span class="line">badges</span><br><span class="line"><span class="builtin-name">Set</span> the value badges <span class="keyword">to</span> <span class="literal">true</span> <span class="keyword">to</span> display the count of Posts / Categories / Tags within menu items <span class="keyword">in</span> menu_settings section <span class="keyword">in</span> theme<span class="built_in"> config </span>file as following:</span><br><span class="line"></span><br><span class="line">next/_config.yml</span><br><span class="line">menu_settings:</span><br><span class="line">  badges: <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<ul>
<li><p>这句话说明：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">Set</span> the value badges <span class="keyword">to</span> <span class="literal">true</span> <span class="keyword">to</span> display the count of Posts / Categories / Tags within menu items <span class="keyword">in</span> menu_settings section <span class="keyword">in</span> theme<span class="built_in"> config </span>file as following:</span><br></pre></td></tr></table></figure>
</li>
<li><p>将值<code>badges</code>设置<code>true</code>为显示其中的帖子/类别/标签的数量菜单 项目在部分<code>menu_settings</code>主题配置文件 如下：</p>
</li>
<li><p>只有  帖子/类别/标签</p>
</li>
</ul>
<hr>
<hr>
<h3 id="6-阅读统计与评论被刷新；"><a href="#6-阅读统计与评论被刷新；" class="headerlink" title="6. 阅读统计与评论被刷新；"></a>6. 阅读统计与评论被刷新；</h3><ol>
<li><p>我估计是因为我在另一个博客上面用了同一个leancloud账号的id和key；</p>
<p>未时间，但根据那个时候的事情；</p>
<p>再上我重复的点击，刷新页面，修改文字title，都没有刷新阅读统计和评论；</p>
<p>想的就应该是这个了；</p>
</li>
<li><p>2020-8-11 05:30:05</p>
</li>
</ol>
<hr>
<h3 id="7-报错hexo-them-next"><a href="#7-报错hexo-them-next" class="headerlink" title="7. 报错hexo-them-next"></a>7. 报错hexo-them-next</h3><p><img src="http://bucket-c70.test.upcdn.net/4/1-7-1.png" alt="1"></p>
<p>直接在node_modules目录下把这个文件夹删了；</p>
<hr>
<h3 id="8-url乱码-过去式"><a href="#8-url乱码-过去式" class="headerlink" title="8. url乱码-过去式"></a>8. url乱码-过去式</h3><p>1.</p>
<hr>
<h3 id="9-如何修改侧边栏标签本身"><a href="#9-如何修改侧边栏标签本身" class="headerlink" title="9. 如何修改侧边栏标签本身"></a>9. 如何修改侧边栏标签本身</h3><p>1.标签本身</p>
<ul>
<li>把关于 改成 关于我</li>
<li><img src="http://bucket-c70.test.upcdn.net/7/2.png" alt="2" style="zoom:80%;" />

</li>
</ul>
<p>2.在哪修改？</p>
<ul>
<li><code>languages</code>文件夹里面的<code>zh-Hans.yml</code>文件，<code>menu</code>子项中修改；</li>
<li>我的路径：G:\1-sanciyuan\8-bolg\themes\next2-8.0\languages</li>
</ul>
<hr>
<h3 id="10-博客目录乱码"><a href="#10-博客目录乱码" class="headerlink" title="10. 博客目录乱码"></a>10. 博客目录乱码</h3><p><img src="http://bucket-c70.test.upcdn.net/4/2.png" alt="2"></p>
<p>可能是因为目录跳级了；</p>
<p>###，下面 写成 #####了</p>
<hr>
<h3 id="11-如果有两个本地blog"><a href="#11-如果有两个本地blog" class="headerlink" title="11. 如果有两个本地blog"></a>11. 如果有两个本地blog</h3><p>1.只另一个本地时，要换一个端口</p>
<p><code>hexo s -p 5000</code></p>
<p>2.预览：</p>
<p><img src="http://bucket-c70.test.upcdn.net/7/3.png" alt="3"></p>
<br/>

<hr>
<h3 id="12-不能显示css"><a href="#12-不能显示css" class="headerlink" title="12. 不能显示css"></a>12. 不能显示css</h3><p>在文章6-github&amp;&amp;gitee_problem有笔记；2020-9-10 05:20:56</p>
<hr>
<h3 id="13-解释插件网站"><a href="#13-解释插件网站" class="headerlink" title="13. 解释插件网站"></a>13. 解释插件网站</h3><p><a href="https://www.npmjs.com/search?q=hexo-blog-encrypt">https://www.npmjs.com/search?q=hexo-blog-encrypt</a></p>
<hr>
<h3 id="14-文章目录多"><a href="#14-文章目录多" class="headerlink" title="14. 文章目录多"></a>14. 文章目录多</h3><p>1.每一篇文章就会在本地建一个文件夹。</p>
<p><img src="http://bucket-c70.test.upcdn.net/7/5.png" alt="5"></p>
<ul>
<li>1.这样hexo d，上传给仓库的时候，也会很多文件夹</li>
</ul>
<p>2.实验得出，是永久链接的问题</p>
<ul>
<li><p>1.如果永久链接是：<code>permalink: :title/</code>，就会在本地文件夹下创建–以文件名称 (relative to “source/_posts/“ folder)为名称的文件夹</p>
</li>
<li><p>2.同时因为它是看source/_posts/目录下的文件。</p>
<p>实验得出，在source/_posts/目录下，创建新目录存储md文件，本地也是创建新目录存储新文件。</p>
<ul>
<li>G:\1-sanciyuan\11-qilin_meiyao_luka.deploy_git\1-(0~50)</li>
<li>G:\1-sanciyuan\11-qilin_meiyao_luka\source_posts\1-(0~50)</li>
</ul>
</li>
<li><p>3.目前就用这个方法来整理，本地图片需要多一个../</p>
<ul>
<li>例如：../../img/xx/x.png;</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>problem</tag>
      </tags>
  </entry>
  <entry>
    <title>8-blog&#39;s function add</title>
    <url>/1-(0~50)/8-blog&#39;s_function_add/</url>
    <content><![CDATA[<h1 id="1-Function"><a href="#1-Function" class="headerlink" title="1. Function"></a>1. Function</h1><h2 id="1-添加音乐"><a href="#1-添加音乐" class="headerlink" title="1. 添加音乐"></a>1. 添加音乐</h2><p><a href="http://liangzhikai.cn/2020/07/07/hexo-next%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90/">http://liangzhikai.cn/2020/07/07/hexo-next%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90/</a></p>
<p>别人写的资料；</p>
<p>自己还没实验过，所以还没笔记；2020-8-3 06:41:58</p>
<a id="more"></a>

<p><a href="https://blog.csdn.net/soul7y/article/details/105768906?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-105768906.nonecase">https://blog.csdn.net/soul7y/article/details/105768906?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-1-105768906.nonecase</a></p>
<p>这个好像也不错；2020-8-3 06:46:51</p>
<hr>
<h2 id="2-文章自定义排序"><a href="#2-文章自定义排序" class="headerlink" title="2. 文章自定义排序"></a>2. 文章自定义排序</h2><p><a href="https://blog.csdn.net/stormdony/article/details/86745805">https://blog.csdn.net/stormdony/article/details/86745805</a></p>
<p>然后设置top，越大，越在前面；<a href="http://www.mamicode.com/info-detail-2363262.html">http://www.mamicode.com/info-detail-2363262.html</a></p>
<ol start="2">
<li><p>npm uninstall hexo-generator-index –save</p>
<p>后，也许会报错；</p>
<p>是老朋友了；</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">G:\<span class="number">1</span>-sanciyuan\<span class="number">8</span>-bolg&gt;npm uninstall hexo-generator-index --save</span><br><span class="line">added <span class="number">1</span> package <span class="keyword">from</span> <span class="number">1</span> contributor, removed <span class="number">1</span> package <span class="keyword">and</span> audited <span class="number">274</span> packages i</span><br><span class="line">n <span class="number">4.323</span>s</span><br><span class="line"></span><br><span class="line"><span class="number">6</span> packages are looking <span class="keyword">for</span> funding</span><br><span class="line">  run `npm fund` <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">found <span class="number">6</span> vulnerabilities (<span class="number">4</span> low, <span class="number">2</span> high)</span><br><span class="line">  run `npm audit fix` to fix them, <span class="keyword">or</span> `npm audit` <span class="keyword">for</span> details</span><br></pre></td></tr></table></figure>
</li>
<li><p>刚开始，我还很在意，想去解决；结果往往会陷入泥潭；</p>
<p>3.1 不过经历过几次换next后，我已经知道，没什么报错是换个next不能解决的</p>
<p>3.2 当时不懂，还以为会损坏hexo；</p>
</li>
<li><p>npm install hexo-generator-index-pin-top –save</p>
<p>后，也许会报错：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg&gt;hexo clean</span><br><span class="line">ERROR &#123;</span><br><span class="line">  err: Error: Cannot find module &#x27;gulp&#x27;</span><br><span class="line">  Require stack:</span><br><span class="line">  - G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\h</span>exo-theme-next<span class="symbol">\g</span>ulpfile.js</span><br><span class="line">      at Function.Module._resolveFilename (internal/modules/cjs/loader.js:794:15</span><br><span class="line">)</span><br><span class="line">      at Function.Module._load (internal/modules/cjs/loader.js:687:27)</span><br><span class="line">      at Module.require (internal/modules/cjs/loader.js:849:19)</span><br><span class="line">      at require (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\h</span>exo<span class="symbol">\l</span>ib<span class="symbol">\h</span>exo<span class="symbol">\i</span>ndex.js:302:</span><br><span class="line">23)</span><br><span class="line">      at G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\h</span>exo-theme-next<span class="symbol">\g</span>ulpfile.js:3:14</span><br><span class="line">      at G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\h</span>exo<span class="symbol">\l</span>ib<span class="symbol">\h</span>exo<span class="symbol">\i</span>ndex.js:315:14</span><br><span class="line">      at tryCatcher (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>elease<span class="symbol">\u</span>til</span><br><span class="line">.js:16:23)</span><br><span class="line">      at Promise._settlePromiseFromHandler (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span></span><br><span class="line">luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>elease<span class="symbol">\p</span>romise.js:547:31)</span><br><span class="line">      at Promise._settlePromise (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s\</span><br><span class="line">release<span class="symbol">\p</span>romise.js:604:18)</span><br><span class="line">      at Promise._settlePromise0 (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s</span><br><span class="line"><span class="symbol">\r</span>elease<span class="symbol">\p</span>romise.js:649:10)</span><br><span class="line">      at Promise._settlePromises (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s</span><br><span class="line"><span class="symbol">\r</span>elease<span class="symbol">\p</span>romise.js:729:18)</span><br><span class="line">      at _drainQueueStep (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>elease</span><br><span class="line"><span class="symbol">\a</span>sync.js:93:12)</span><br><span class="line">      at _drainQueue (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>elease<span class="symbol">\a</span>sy</span><br><span class="line">nc.js:86:9)</span><br><span class="line">      at Async._drainQueues (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>ode_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>ele</span><br><span class="line">ase<span class="symbol">\a</span>sync.js:102:5)</span><br><span class="line">      at Immediate.Async.drainQueues [as _onImmediate] (G:<span class="symbol">\1</span>-sanciyuan<span class="symbol">\8</span>-bolg<span class="symbol">\n</span>o</span><br><span class="line">de_modules<span class="symbol">\b</span>luebird<span class="symbol">\j</span>s<span class="symbol">\r</span>elease<span class="symbol">\a</span>sync.js:15:14)</span><br><span class="line">      at processImmediate (internal/timers.js:439:21) &#123;</span><br><span class="line">    code: &#x27;MODULE_NOT_FOUND&#x27;,</span><br><span class="line">    requireStack: [</span><br><span class="line">      &#x27;G:<span class="symbol">\\</span>1-sanciyuan<span class="symbol">\\</span>8-bolg<span class="symbol">\\</span>node_modules<span class="symbol">\\</span>hexo-theme-next<span class="symbol">\\</span>gulpfile.js&#x27;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125; Plugin load failed: <span class="variable">%s hexo-theme-next</span></span><br><span class="line"><span class="variable">INFO  Deleted database.</span></span><br><span class="line"><span class="variable">INFO  Deleted public folder.</span></span><br></pre></td></tr></table></figure>

<p>4.1 把<code>node_modules\hexo-theme-next</code>里的hexo-theme-next删了；</p>
<p>时不时会下载一个hexo-theme-next 到node_modules里面，也不知道为啥；</p>
</li>
</ol>
<hr>
<h2 id="3-文章访问统计"><a href="#3-文章访问统计" class="headerlink" title="3. 文章访问统计"></a>3. 文章访问统计</h2><h3 id="3-0-用官网的方法"><a href="#3-0-用官网的方法" class="headerlink" title="3.0 用官网的方法"></a>3.0 用官网的方法</h3><p>1.<strong>重要：next主题配置一定要使用相关的，7.8就用7.8，8.0一定要用8.0的config；</strong></p>
<ul>
<li><p><strong>不能因为是next.yml 或者是现在最新版的_config.next就用以前的文件；</strong></p>
</li>
<li><p>换了主题8.0的config后就有效了；</p>
</li>
<li><p><a href="https://theme-next.js.org/docs/third-party-services/statistics-and-analytics.html#Firebase">https://theme-next.js.org/docs/third-party-services/statistics-and-analytics.html#Firebase</a></p>
</li>
<li><p>好了使用官方的，都散了吧；2020-8-9 11:52:18</p>
</li>
</ul>
<h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2. 步骤:"></a>2. 步骤:</h4><p>1.打开官网</p>
<p>2.有三种计数:</p>
<p><img src="../img/8/1.png" alt="1"></p>
<p>2.1 如果选择LeanCloud，会报错：</p>
<ul>
<li><p>err: TypeError: serverURL option is required for apps from CN region；</p>
<p>错误：类型错误：来自CN区域的应用程序需要serverURL选项</p>
</li>
<li><p>它要让你验证服务器</p>
</li>
</ul>
<p>2.2 如果你用Busuanzi，下面评论系统的时候又要使用LeanCloud;</p>
<ul>
<li><p>所以这里使用3.1 评论的计数；</p>
</li>
<li><p>相关配置去3.1看；</p>
</li>
<li><p>over；</p>
</li>
</ul>
<p>3.如果简单点，不需要评论，只要计数，或者想快点</p>
<ul>
<li>用Busuanzi；</li>
<li>可安装官网步骤使用；</li>
</ul>
<p>3.1 ok，3是错误的，只是像官网那么配置是无效的</p>
<ul>
<li>还是要在某云端申请账号；</li>
<li>以后都用<code>3.1 用评论的计数</code></li>
</ul>
<p>3.2 哦，首页没有，文字里面有计数；2020-9-7 03:59:08</p>
<p>4.中间的Firebase没用过；</p>
<hr>
<h3 id="3-05-以前的失败经历"><a href="#3-05-以前的失败经历" class="headerlink" title="3.05 以前的失败经历"></a>3.05 以前的失败经历</h3><p>1.这是没使用0时候的卡关</p>
<p>卡在：</p>
<p>err: TypeError: serverURL option is required for apps from CN region；</p>
<p>LeanCloud自己给的<strong>REST API 服务器地址</strong>还是报错；看来要自己用域名解析，来配置LeanCloud的API访问域名</p>
<hr>
<p>0.1 很好，gitee不能被域名解析，要收费；</p>
<p>0.2 只有github速度不行；</p>
<p>0.3 必须要有一个国内的；</p>
<p>0.4 coding可以去试试；2020-8-9 12:11:17</p>
<p>0.5 目前先不去弄了，还有其他事要做；2020-8-9 12:11:37</p>
<hr>
<p>使用的最下面的 <strong>算盘子计数（中国）</strong>；2020-8-9 12:42:14</p>
<p><a href="https://cloud.tencent.com/developer/article/1482008">https://cloud.tencent.com/developer/article/1482008</a></p>
<ol start="2">
<li><p>注意：</p>
<blockquote>
<p>点击创建Class之后，理论上来说名字可以随意取名，只要你交互代码做相应的更改即可，但是为了保证我们前面对NexT主题的修改兼容，此处的新建Class名字必须为Counter。</p>
</blockquote>
<blockquote>
<p>counter；英 [ˈkaʊntə(r)]   美 [ˈkaʊntər]<br>n.(商店、银行等的)柜台;(某些棋盘游戏的)筹码;(电子)计数器，计算器<br>v.反驳;驳斥;抵制;抵消<br>adv.逆向地;相反地;反对地</p>
</blockquote>
<p>但没实验；</p>
</li>
<li><p>本想用：字数统计里面的换行</p>
<p>默认情况下，NexT在单独的行中显示单词计数和估计的阅读时间。您可以通过将in 设置<code>symbols_count_time.separated_meta</code>为<code>false</code>in 来将它们添加到一行中主题配置文件。</p>
<blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span>  </span><br><span class="line"><span class="attr">separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>但是没有效果</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在本地访问后，没有回数据；</p>
<p>试试在github那边访问；</p>
<p>4.1 还是没有访问量</p>
<p>连LeanCloud那边也没返回数据，时不时ID和key有错误？</p>
<p>检查看看；</p>
<p>没有问题；</p>
</li>
<li><p>现在也许改版了；不能用了；</p>
<p>网上也找不到教程；</p>
<p>我估计需要配置API访问域名；github的无法连接，gitee等待配置CNAME</p>
<p><img src="https://i.loli.net/2020/08/09/yW5n9HJscECdrlY.png" alt="1"></p>
<p>但是gitee自己部署的page 是无法配置CNAM的。</p>
<p>这需要一个自己的域名；</p>
</li>
<li><p>我记得我有域名，我去试试；</p>
<p>腾讯云启动；</p>
<p>没有域名over；</p>
</li>
<li><p>百度云启动；</p>
<p>有域名，解析配置：cqilin.gitee.io；</p>
<p>主机记录：@ ；类型：CNAME；解析状态正常；</p>
<p>域名访问：<a href="http://www.meiyao.top">www.meiyao.top</a>  403；</p>
<blockquote>
<p>403 Forbidden<br>对不起，您访问的页面或站点不存在。<br>管局备案数据同步可能发生延迟，若您的主机已经完成备案或者为无需备案的香港主机，请进入BCH控制面板 &gt; 常用操作 &gt;域名绑定 中解绑并重新绑定域名，并手动刷新主机状态。</p>
</blockquote>
<p>如果是备案，那就没法了，gitee咋备案；</p>
<p>7.1 是不是绑定域名出错？百度 gitee域名配置，无果，居然说无法配置；</p>
</li>
<li><p>失败告终；2020-8-9 10:50:37 ；问问其他人；</p>
</li>
<li><p><a href="https://blog.csdn.net/qq_43444349/article/details/105282442?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.channel_param">https://blog.csdn.net/qq_43444349/article/details/105282442?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.channel_param</a></p>
<p>没有效果；</p>
<p>默认就是：visitor: false</p>
</li>
<li><p><a href="https://blog.csdn.net/Hodors/article/details/103979281">https://blog.csdn.net/Hodors/article/details/103979281</a></p>
<p>使用文章中的第二种方法</p>
<p>未实验，2020-8-9 11:13:47</p>
</li>
<li><p>试试？</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Another tool to show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># Visit https://console.firebase.google.com/u/0/ to get apiKey and projectId.</span></span><br><span class="line"><span class="comment"># Visit https://firebase.google.com/docs/firestore/ to get more information about firestore.</span></span><br><span class="line"><span class="attr">firestore:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">collection:</span> <span class="string">articles</span> <span class="comment"># Required, a string collection name to access firestore database</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="comment"># Required</span></span><br><span class="line">  <span class="attr">projectId:</span> <span class="comment"># Required</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<pre><code>实在不行，还有google这边访问统计；2020-8-9 11:15:03</code></pre><ol start="12">
<li><p><a href="https://leaferx.online/2018/02/11/lc-security/">https://leaferx.online/2018/02/11/lc-security/</a></p>
<p>这个网址里有</p>
<ul>
<li><p>部署云引擎以保证访客数量不被随意篡改；未实验与使用</p>
</li>
<li><p>博客配置文件_config.yml ；其他都没有，就你有…</p>
</li>
<li><p>由于Leancloud免费版的云引擎存在请求线程数和运行时间限制以及休眠机制，很多时候访客数量加载会很慢。如果设置<code>betterPerformance</code>为<code>true</code>，则网页则会在提交请求之前直接显示访客人数为查询到的人数+1，以增加用户体验。</p>
<p>已经在next配置中添加；2020-8-9 11:31:08</p>
</li>
</ul>
</li>
<li><p><a href="https://blog.qust.cc/archives/48665.html">https://blog.qust.cc/archives/48665.html</a></p>
<p>又是一个；更新与2020-06-22的</p>
<p>写得是最详细的；只不过，危险的地方很多</p>
</li>
</ol>
<h3 id="3-1-用评论的计数；"><a href="#3-1-用评论的计数；" class="headerlink" title="3.1 用评论的计数；"></a>3.1 用评论的计数；</h3><ol>
<li><p>用官方的计数，会卡在：err: TypeError: serverURL option is required for apps from CN region；</p>
<p>1.1 它要让你接服务器；</p>
</li>
<li><p>评论系统那边有计数功能，不需要服务器连接；</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">l9X7oYVrse5t6umGkFbQyhXs-gzGzoHsz</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="string">dcwRazDbDakW6HdC3xERrYHu</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">meta:</span> [<span class="string">nick</span>, <span class="string">mail</span>, <span class="string">link</span>] <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<p>其中：</p>
<p><code>visitor: true # Article reading statistic</code>就是控制计数的；</p>
<p>2.2 翻译：</p>
<p>访客：正确＃文章阅读统计</p>
</li>
</ol>
<hr>
<h3 id="3-2-问题：计数被刷新为0"><a href="#3-2-问题：计数被刷新为0" class="headerlink" title="3.2 问题：计数被刷新为0"></a>3.2 问题：计数被刷新为0</h3><p>1.不过昨天遇到一个问题，计数和评论被刷新了；</p>
<p>2.我不知道1.的昨天是哪一天，可惜我没记录时间；2020-9-6 12:07:40</p>
<ul>
<li><p>不过今天又遇到了；2020-9-6 12:07:49</p>
</li>
<li><p>它被刷新的依据是什么？</p>
</li>
<li><p>我的去那边看看，LeanCloud，是记录次数的。</p>
</li>
<li><p>计数是有的，而且在对着本地与gitee的数据时，我发现了url不同</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/4.png" alt="4"></p>
</li>
</ul>
<p>3.也许是我改了blog的_config.yml</p>
<ul>
<li>我改了永久链接permalink:</li>
<li>blog的url改变了</li>
</ul>
<p>3.1 为什么修改了永久链接</p>
<ul>
<li>因为：文章7-1.4；</li>
</ul>
<p>4.是url改变的原因吗？</p>
<ul>
<li>不清楚，但目前只有这么猜想了</li>
<li>不会后端的无奈</li>
</ul>
<hr>
<h2 id="4-评论系统"><a href="#4-评论系统" class="headerlink" title="4. 评论系统"></a>4. 评论系统</h2><p><strong>重要：next主题配置一定要使用相关的，7.8就用7.8，8.0一定要用8.0的config；</strong></p>
<p><strong>不能因为是next.yml 或者是现在最新版的_config.next就用以前的文件；</strong></p>
<p>换了主题8.0的config后就有效了；</p>
<p>官方：<a href="https://theme-next.js.org/docs/third-party-services/comments.html#Valine">https://theme-next.js.org/docs/third-party-services/comments.html#Valine</a></p>
<p>2020-8-9 12:42:42</p>
<ol start="2">
<li><p>评论要新建class-Comment；</p>
<p><img src="https://i.loli.net/2020/08/10/Wv1adeubTLgcyi8.png" alt="1"></p>
<hr>
</li>
</ol>
<h2 id="5-动态背景；"><a href="#5-动态背景；" class="headerlink" title="5.  动态背景；"></a>5.  动态背景；</h2><h3 id="5-1-让next8-0-canvas-next-有效；"><a href="#5-1-让next8-0-canvas-next-有效；" class="headerlink" title="5.1 让next8.0-canvas_next 有效；"></a>5.1 让next8.0-canvas_next 有效；</h3><ol>
<li><p><a href="https://www.dazhuanlan.com/2019/12/09/5dedf5666dc17/">https://www.dazhuanlan.com/2019/12/09/5dedf5666dc17/</a></p>
<blockquote>
<p>1.1 在这个网站上 <a href="https://github.com/theme-next/theme-next-canvas-nest">https://github.com/theme-next/theme-next-canvas-nest</a> 的README.md清楚地给出了next的背景动态使用：</p>
<ul>
<li>进入<code>themes/next/source/lib</code>路径,输入<code>$ git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</code></li>
<li>在next的<code>_config.yml</code>修改canvas_nest: true</li>
<li>回到themes/next/source/lib/canvas-nest文件夹，git bash：<code>git pull</code></li>
<li><code>hexo clean</code> <code>hexo g</code> <code>hexo s</code>就可以预览了。</li>
</ul>
<p>最后那个语言问题，并不是next官网和google的一堆信息都是把languages改成zh_Hans，这是无效的，需要在站点配置文件_comfig.yml中把languages改成zh_CN。</p>
</blockquote>
<blockquote>
<p>1.2 languages那些不管，以前就经历过，zh_Hans早已被官方删除，只有zh_CN</p>
<p>1.3 <code>themes/next/source/lib</code>这个路径下确实没有canvas-nest文件；</p>
<p>1.4 不过lib里面的似乎和博客目录下的node_modules 不同；</p>
<p>它可以直接复制；于是在：</p>
<p>G:\1-sanciyuan\8-bolg\source\lib 目录下复制了canvas-nest文件夹；</p>
<p>到：G:\1-sanciyuan\8-bolg\themes\next2-8.0\source\lib 下；</p>
<p>没有效果；</p>
</blockquote>
<blockquote>
<p>1.5 文章原话：当然这个方法我也试过了，不行。还是得重新找方法，最后还是使用修改_layout.swig奏效。方法就是在里面加入</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.canvas_nest %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,0,0&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.5&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">count</span>=<span class="string">&quot;150&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>1.6 有效；</p>
<p>不过next8.0，文件后缀名改变；变为：.njk</p>
<p>位置在：G:\1-sanciyuan\8-bolg\themes\next2-8.0\layout</p>
</blockquote>
</li>
<li><p>删除<code>themes/next/source/lib</code>下的canvas-nest文件夹，看是否还有效果；</p>
<blockquote>
<p>有效，既然有效那就删了；</p>
</blockquote>
</li>
<li><p>删除next配置文件里的：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自己添加</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="comment"># 网络背景</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,0&#x27;</span> <span class="comment"># RGB values, use &#x27;,&#x27; to separate</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">150</span> <span class="comment"># the number of lines</span></span><br><span class="line"><span class="comment"># 自己添加</span></span><br></pre></td></tr></table></figure>

<p>可以得出结论到底是_layout.njk在控制，还是上面主题配置里控制着</p>
<blockquote>
<p>有效，<red>确定是_layout.njk在控制</red></p>
</blockquote>
</li>
<li><p>可不可以让线条更多一点？这也是3的目的，为了改变效果，要找准控制的地方；</p>
<p>翻译上面的:</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">onmobile:<span class="literal">true</span>？是否在移动设备上显示</span><br><span class="line">color:<span class="string">&#x27;0,0,0&#x27;</span>#RGB值，使用<span class="string">&#x27;&#x27;</span>分隔</span><br><span class="line">不透明度：<span class="number">0.5</span>#线条的不透明度：<span class="number">0</span>~<span class="number">1</span></span><br><span class="line">zIndex:<span class="number">-1</span>#背景的z索引属性</span><br><span class="line">计数：<span class="number">150</span>行</span><br></pre></td></tr></table></figure>

<ul>
<li><p>调整：count，增加线条次数为200条；</p>
</li>
<li><p>虽然文章里面给的，没有 <code>onmobile: true</code>，但添加试试；让移动设备上面能看到也好；使用相同的格式：onmobile=”true”</p>
</li>
<li><p>调整 opacity为0.7；加深颜色；</p>
</li>
<li><p>我最想的是增加粗细，既然里面没有，那先不乱添加；</p>
</li>
<li><p>over；实验开始；先在cmd里ctrl+c，免得报错；2020-8-10 03:36:59</p>
</li>
</ul>
<blockquote>
<ol>
<li><p><red>有效</red>,虽然没有调整线条的粗细，但也许减少了透明度，看起来也粗了一些；</p>
</li>
<li><p>count调整有效，比较后，线条肉眼可看的增加了；</p>
</li>
<li><p>onmobile=”true” 有效，至少在F12的移动查看中有效</p>
</li>
</ol>
<p>很好</p>
</blockquote>
</li>
</ol>
<h3 id="5-2-qilin-meiyao-luka-没效"><a href="#5-2-qilin-meiyao-luka-没效" class="headerlink" title="5.2 qilin_meiyao_luka 没效"></a>5.2 qilin_meiyao_luka 没效</h3><ol>
<li><p>emm，奇怪的地方出现了；</p>
<p>第二个hexo这样配置后，没效果；2020-8-10 16:29:47</p>
<p>5.1 难道是要 hexo g ？</p>
<p>没效；</p>
<p>5.2 把 这个添加了试试</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自己添加</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="comment"># 网络背景</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,0&#x27;</span> <span class="comment"># RGB values, use &#x27;,&#x27; to separate</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">150</span> <span class="comment"># the number of lines</span></span><br><span class="line"><span class="comment"># 自己添加</span></span><br></pre></td></tr></table></figure>

<p>效…效果出现？？？</p>
<p>什么？什么情况？这不就和上面第三个冲突了？</p>
<p>5.3 再删除试试？是不是因为5.2 把</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.canvas_nest %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,0,0&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.5&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">count</span>=<span class="string">&quot;150&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>激活了？</p>
<p>删除后，没了效果？怎么回事？</p>
<p>难道这里是看next主题配置里的  canvas_nest 配置？</p>
<p>5.4 那把 _layout.njk 里的</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.canvas_nest %&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">color</span>=<span class="string">&quot;0,0,0&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.5&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">count</span>=<span class="string">&quot;150&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>删除实验；</p>
<p>无？？无效？</p>
<p>怎么这里两个都要了？</p>
<p>怎么G:\1-sanciyuan\11-qilin_meiyao_luka 这个博客要两边都要配置？</p>
<p>而：8-blog 学习博客就不用？</p>
<p>lib里的  canvas-nest 一样，主题配置更是从8-blog复制的；</p>
<p>只有config不一样；不对，hexo的config那么少，对照一下就能看出哪里不一样；</p>
</li>
<li><p>对照 hexo的config</p>
<ul>
<li>一样；</li>
<li>emm，没有法子。实现只能到此为止了</li>
</ul>
</li>
<li><p><strong>以后若 光有 _layout.njk 里的配置，而没有效果</strong></p>
<p><strong>就把next主题配置里的 canvas_nest 加上试试</strong>；</p>
</li>
<li></li>
</ol>
<hr>
<h2 id="6-改变高亮颜色"><a href="#6-改变高亮颜色" class="headerlink" title="6. 改变高亮颜色"></a>6. 改变高亮颜色</h2><p>网上所说：</p>
<p><a href="https://blog.csdn.net/tl4832194/article/details/107921933">https://blog.csdn.net/tl4832194/article/details/107921933</a></p>
<p>1.位置：</p>
<p>C:\Users\Administrator\AppData\Roaming\Typora\themes</p>
<p>2.这是自己找到过一次了，最开始在这：</p>
<ul>
<li>在typora左上角文件里面</li>
<li>偏好设置</li>
<li>外观</li>
<li>打开主题文件夹；就是上面的路径；</li>
</ul>
<p>3.正文：</p>
<ul>
<li>mark是找不到的，自己添加</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#DC143C</span>;  <span class="comment">/* #DC143C 代表红色 */</span></span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0px</span> solid <span class="number">#ffffff</span>;  <span class="comment">/* 这里是字体颜色，也可以更改 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>不知道border-bottom干嘛，说是字体颜色，也没有变化；</p>
<p>难道要把 0px 改为 1px？</p>
<p>我没有多想，直接改为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);  <span class="comment">/* #DC143C 代表红色 */</span></span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#DC143C</span>;  <span class="comment">/* 这里是字体颜色，也可以更改 */</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>backgorund是背景色，如果不修改，默认是黄色</p>
<p>而且：修改为：#fafafa，居然有灰色；</p>
<p>就换成255，255，255（也是white）</p>
<p>没有灰色；</p>
</blockquote>
<p>依然有效；</p>
<br />

<hr>
<hr>
<h2 id="10-淘宝镜像npm→cnpm"><a href="#10-淘宝镜像npm→cnpm" class="headerlink" title="10. 淘宝镜像npm→cnpm"></a>10. 淘宝镜像npm→cnpm</h2><ol>
<li><p>安装：</p>
<p>安装：命令提示符执行<code>npm install -g cnpm --registry=[https://registry.npm.taobao.org](https://link.jianshu.com?t=https://registry.npm.taobao.org)</code>；<br> 注意：安装完后最好查看其版本号cnpm -v或关闭命令提示符重新打开，安装完直接使用有可能会出现错误；<br> 注：cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm（以下操作将以cnpm代替npm）。</p>
</li>
</ol>
<p>   作者：lMadman<br>   链接：<a href="https://www.jianshu.com/p/22ca76100155">https://www.jianshu.com/p/22ca76100155</a><br>   来源：简书<br>   著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<ol start="2">
<li><p>官网：<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">https://developer.aliyun.com/mirror/NPM?from=tnpm</a></p>
</li>
<li><p>自己已安装；</p>
<p><img src="http://bucket-c70.test.upcdn.net/4/2-10-1.png" alt="2"></p>
</li>
<li><p>下载预览：</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/10.png" alt="10"></p>
<ul>
<li>cnpm下载东西的格式与npm不一样</li>
<li>同时 查看cnpm版本时<ul>
<li>还有显示npm的版本</li>
<li>node的版本</li>
<li>npminstall的版本</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="10-1-问题"><a href="#10-1-问题" class="headerlink" title="10.1 问题"></a>10.1 问题</h3><p>1.同时目录下，也多一个文件夹：</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/11.png" alt="11"></p>
<p>   1.3 先看看下载的东西有没有效果；2020-9-7 04:09:56</p>
<p>   1.4 没有下载出hexo-theme-next，还不错，免得我去删了；</p>
<ul>
<li>用npm切换淘宝镜像下载依赖包，不会有这个问题</li>
</ul>
<p>2.同时，还下载了很多其他的东西</p>
<ul>
<li><p>在我<code>cnpm install --save hexo-blog-encrypt</code>时，发生的；2020-9-9 17:54:50</p>
</li>
<li><img src="http://bucket-c70.test.upcdn.net/8/15.png" alt="15" style="zoom:80%;" />



</li>
</ul>
<ul>
<li>下面还有，没有截图了，不过全部把这种_开头的删了，hexo s 也不报错；</li>
</ul>
<hr>
<h3 id="10-2-npm切换淘宝镜像下载依赖包"><a href="#10-2-npm切换淘宝镜像下载依赖包" class="headerlink" title="10.2 npm切换淘宝镜像下载依赖包"></a>10.2 npm切换淘宝镜像下载依赖包</h3><p>设置：<a href="https://blog.csdn.net/qq_16683689/article/details/89376577">https://blog.csdn.net/qq_16683689/article/details/89376577</a></p>
<p>1.好像是说cnpm有很多坑，但又没说清楚</p>
<p>2.上面下载两个文件，也许是其中之一，没有试验；2020-9-9 17:41:37</p>
<p>3.还有人说：漏掉依赖（目前不懂）</p>
<ul>
<li><a href="https://www.cnblogs.com/lxwphp/p/7754812.html">https://www.cnblogs.com/lxwphp/p/7754812.html</a></li>
</ul>
<hr>
<h2 id="11-修改页面字体"><a href="#11-修改页面字体" class="headerlink" title="11. 修改页面字体"></a>11. 修改页面字体</h2><p><a href="https://theme-next.js.org/docs/theme-settings/miscellaneous.html#Fonts-Customization">官网链接</a></p>
<p>预览：</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/3-11.png" alt="3"></p>
<p>next/_config.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="comment"># Use custom fonts families or not.</span></span><br><span class="line">  <span class="comment"># Depended options: `external` and `family`.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line">    <span class="attr">size:</span> <span class="number">1.125</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lobster</span> <span class="string">Two</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Amita</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Montserrat</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">PT</span> <span class="string">Mono</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="12-跳转到其他笔记；"><a href="#12-跳转到其他笔记；" class="headerlink" title="12. 跳转到其他笔记；"></a>12. 跳转到其他笔记；</h2><h3 id="12-1-蒙对；"><a href="#12-1-蒙对；" class="headerlink" title="12.1 蒙对；"></a>12.1 蒙对；</h3><p><a href="../2-ts_first_item/#10-项目：下棋游戏">转移到了 5-ts first item</a></p>
<blockquote>
<p><img src="https://i.loli.net/2020/08/08/e7rOmNwfpD3sdTg.png" alt=""></p>
<p>由这个和：</p>
<p><a href="https://cqilin.github.io/typescript/26-typescript_introduction/">https://cqilin.github.io/typescript/26-typescript_introduction/</a></p>
<p><a href="https://cqilin.github.io/typescript/5-ts_first_item/">https://cqilin.github.io/typescript/5-ts_first_item/</a></p>
<p>而感得出，跳转文件；</p>
<p><code>[转移到了 5-ts first item](../5-ts_first_item/#10-项目：下棋游戏)</code></p>
<p>都在typescript文件下，那先返回上一级：../</p>
<p>然后是5-ts_first_item ：../5-ts_first_item</p>
<p>但这样是无法跳转的；然后早就知道图上①处的地方。但是之前没观察②处</p>
<p>这次看了②处，才知道是url发生了改变；正好有#定位，用之</p>
</blockquote>
<h3 id="12-2-发现分类规则"><a href="#12-2-发现分类规则" class="headerlink" title="12.2 发现分类规则"></a>12.2 发现分类规则</h3><p>笔记：<a href="../../css/4-css_private_note/#6-水平垂直居中">4-css_个人笔记-6. 水平垂直居中</a>；有更多解析；</p>
<blockquote>
<p>这里的跳转：../4-css_private_note/#6-水平垂直居中</p>
<p>没有效果；</p>
<p>使用：../../css/4-css_private_note/#6-水平垂直居中</p>
<p>才有效；</p>
</blockquote>
<p>当初：</p>
<ol>
<li><p>先../4-css_private_note/#6-水平垂直居中</p>
<p>结果跳转的是：</p>
<p><a href="http://localhost:4000/html-css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/html-css/4-css_private_note/#6-水平垂直居中</a></p>
<p>而正确链接是：</p>
<p><a href="http://localhost:4000/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/css/4-css_private_note/#6-水平垂直居中</a></p>
</li>
<li><p>这让我发现了分类；</p>
<p>因为12.md本身分类于：html_css (url里面变成了html-css)</p>
</li>
<li><p>原来上次1-typescript_introduction-10.项目：下棋游戏；是蒙对的</p>
<p>他们正好都是分类于typescript</p>
</li>
<li><p>怎么办了？既然是在css下面，那么这样行吗？</p>
<p>../css/4-css_private_note/#6-水平垂直居中</p>
<p>跳转的是：</p>
<p><a href="http://localhost:4000/html-css/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/html-css/css/4-css_private_note/#6-水平垂直居中</a></p>
<p>还是在html-css下面，仍然是错误链接；</p>
</li>
<li><p>怎么办？</p>
<p>没有概念，没有原理；只有实验；</p>
<p>我突发奇想，百度相对连接；</p>
<p><a href="https://blog.csdn.net/LIU_YANZHAO/article/details/78895096?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">https://blog.csdn.net/LIU_YANZHAO/article/details/78895096?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param</a></p>
<p>找到../../</p>
<p>../../ 代表上两级目录</p>
<p>实验链接：</p>
<p>../../4-css_private_note/#6-水平垂直居中</p>
<p>链接是：<a href="http://localhost:4000/4-css_private_note/#6-水平垂直居中">http://localhost:4000/4-css_private_note/#6-水平垂直居中</a></p>
<p>没有css；</p>
</li>
<li><p>我一度迷茫；</p>
<p>没有发现，这次摆脱了html-css/的束缚；</p>
<p>过了一会，我发现了；</p>
</li>
<li><p>于是，我加上css/实验；</p>
<p>实验链接为：../../css/4-css_private_note/#6-水平垂直居中</p>
<p>成功；</p>
<p>跳转到了：</p>
<p><a href="http://localhost:4000/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/css/4-css_private_note/#6-水平垂直居中</a></p>
</li>
</ol>
<h3 id="12-3-发现permalink"><a href="#12-3-发现permalink" class="headerlink" title="12.3 发现permalink"></a>12.3 发现permalink</h3><p>1.permalink才是关键之一</p>
<p>2.它构成了url的路径定位；</p>
<hr>
<h2 id="13-进度条"><a href="#13-进度条" class="headerlink" title="13. 进度条"></a>13. 进度条</h2><p>1.上面会有一个条，根据页面的进度</p>
<img src="http://bucket-c70.test.upcdn.net/8/5.png" alt="5" style="zoom:110%;" />

<p>2.官网</p>
<p><a href="https://theme-next.js.org/docs/third-party-services/external-libraries.html#Progress-Bar">https://theme-next.js.org/docs/third-party-services/external-libraries.html#Progress-Bar</a></p>
<p>3.配置：</p>
<p>next/_config.yml</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="attr">pace:</span>  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="14-滚动百分比"><a href="#14-滚动百分比" class="headerlink" title="14. 滚动百分比"></a>14. 滚动百分比</h2><h3 id="14-1-预览："><a href="#14-1-预览：" class="headerlink" title="14.1 预览："></a>14.1 预览：</h3><img src="http://bucket-c70.test.upcdn.net/8/6.png" alt="8" style="zoom:80%;" />

<p>在左下角</p>
<h3 id="14-2-配置"><a href="#14-2-配置" class="headerlink" title="14.2 配置"></a>14.2 配置</h3><p>1.在官网上没找到</p>
<p>2.百度</p>
<ul>
<li><p><a href="https://blog.csdn.net/u011236348/article/details/88169113">https://blog.csdn.net/u011236348/article/details/88169113</a></p>
</li>
<li><p>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>scrollpercent</code> ,把 <code>false</code> 改为 <code>true</code> </p>
</li>
<li><p>在next.yml文档里，代码的样子是：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span> <span class="comment"># 滚动百分比</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>3.同时，这个箭头（返回最上边）</p>
<p>也是back2top：enable：true 就有了；</p>
<hr>
<h2 id="15-主题添加留言"><a href="#15-主题添加留言" class="headerlink" title="15. 主题添加留言"></a>15. 主题添加留言</h2><h3 id="15-1-预览"><a href="#15-1-预览" class="headerlink" title="15.1 预览"></a>15.1 预览</h3><p><img src="http://bucket-c70.test.upcdn.net/8/7.png" alt="7"></p>
<h3 id="15-2-步骤："><a href="#15-2-步骤：" class="headerlink" title="15.2 步骤："></a>15.2 步骤：</h3><p>1.首先，next主题的_config.yml里面是没有的；</p>
<ul>
<li>自己加:<code>guestbook: /guestbook/ || fa fa-comment #留言</code></li>
</ul>
<p>1.1 加在哪？</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">guestbook:</span> <span class="string">/guestbook/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-comment</span> <span class="comment">#留言</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<br />

<p>2.然后要在<code>languages</code>文件夹里面的<code>zh-Hans.yml</code>文件，<code>menu</code>子项中添加：</p>
<ul>
<li><code>guestbook: 留言</code></li>
<li>不然显示的是 guestbook;</li>
</ul>
<p>3.完毕；</p>
<hr>
<h2 id="16-刷新页面-实现加载效果"><a href="#16-刷新页面-实现加载效果" class="headerlink" title="16. 刷新页面-实现加载效果"></a>16. 刷新页面-实现加载效果</h2><h3 id="16-1-预览"><a href="#16-1-预览" class="headerlink" title="16.1 预览"></a>16.1 预览</h3><p><img src="http://bucket-c70.test.upcdn.net/8/9.png" alt="9"></p>
<h3 id="16-2-步骤："><a href="#16-2-步骤：" class="headerlink" title="16.2 步骤："></a>16.2 步骤：</h3><p>1.打开主题配置</p>
<ul>
<li>我的主题配置是<code>next.yml</code></li>
<li>我的路径：G:\1-sanciyuan\8-bolg\source_data</li>
<li>这是一种设置，这里不讲这个</li>
<li>正常情况是，主题目录下的_config.yml</li>
</ul>
<p>2.找到pace</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Themes list:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">loading-bar</span> <span class="comment"># 默认：minimal</span></span><br></pre></td></tr></table></figure>

<p>把them修改为loading-bar;</p>
<p>over;2020-9-7 03:57:17</p>
<hr>
<h2 id="17-文章界面透明"><a href="#17-文章界面透明" class="headerlink" title="17. 文章界面透明"></a>17. 文章界面透明</h2><h3 id="17-1-预览："><a href="#17-1-预览：" class="headerlink" title="17.1 预览："></a>17.1 预览：</h3><p>1.首页文章页面处，透明，能看到背景动态图像</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/12.png" alt="12"></p>
<p>2.点击文章里面，也能看到；</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/13.png" alt="13"></p>
<h3 id="17-2-实现步骤"><a href="#17-2-实现步骤" class="headerlink" title="17.2 实现步骤"></a>17.2 实现步骤</h3><p>1.激活主题配置文件里的custom_file_path: style</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.njk</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<p>2.在source/_data/目录下，创建styles.styl</p>
<ul>
<li><p>我的目录是：G:\1-sanciyuan\8-bolg\source_data</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/14.png" alt="14"></p>
</li>
</ul>
<p>3.刚开始里面是空白的，什么都没有</p>
<ul>
<li>是这样的</li>
</ul>
<p>4.修改.post-block.animated.fadeIn</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span><span class="selector-class">.animated</span><span class="selector-class">.fadeIn</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.1 用0.2进行透明</p>
<p>5.这不是当时找的时候做的笔记；</p>
<ul>
<li>所以，为什么修改这个类？</li>
<li>怎么找打的这个类？</li>
</ul>
<p>5.1 具体过程我忘记了</p>
<ul>
<li>印象中，肯定是从F12开始</li>
<li>但总觉得没这么简单</li>
</ul>
<p>6.over；2020-9-7 04:36:14</p>
<hr>
<h2 id="18-文章加密"><a href="#18-文章加密" class="headerlink" title="18. 文章加密"></a>18. 文章加密</h2><p>资料：<a href="https://zhuanlan.zhihu.com/p/113235573">https://zhuanlan.zhihu.com/p/113235573</a></p>
<ul>
<li>这个有一些注释，和插件来源：<a href="https://www.jianshu.com/p/44e211829447">https://www.jianshu.com/p/44e211829447</a></li>
</ul>
<h3 id="18-1-按标签加密"><a href="#18-1-按标签加密" class="headerlink" title="18.1 按标签加密"></a>18.1 按标签加密</h3><ul>
<li><strong>修改文章信息头如下：</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 加密文章tag</span><br><span class="line">date: <span class="number">2020</span>-<span class="number">03</span>-<span class="number">13</span> <span class="number">21</span>:<span class="number">12</span>:<span class="number">21</span></span><br><span class="line">password: muyiio</span><br><span class="line"><span class="keyword">abstract</span>: 这里有东西被加密了，需要输入密码查看哦。</span><br><span class="line">message: 您好，这里需要密码。</span><br><span class="line">wrong_pass_message: 抱歉，这个密码看着不太对，请再试试。</span><br><span class="line">wrong_hash_message: 抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>对博客根目录_config添加如下字段：</strong></li>
</ul>
<h3 id="18-2-toc加密"><a href="#18-2-toc加密" class="headerlink" title="18.2 toc加密"></a>18.2 toc加密</h3><p>1.什么是toc？</p>
<ul>
<li>好像是目录，文章目录。例如：<a href="https://yelog.org/2019/09/24/3-hexo-toc/">https://yelog.org/2019/09/24/3-hexo-toc/</a></li>
<li>百度：hexo toc，也有相关信息</li>
</ul>
<p>2.需要额外配置：</p>
<p>如果您有一篇文章使用了TOC，您需要修改模板的部分代码。这里以matery主题作为示例：</p>
<ul>
<li><strong>在hexo/themes/matery/layout/_partial/article.ejs找到article.ejs。</strong></li>
<li><strong>然后找到&lt;％post.content％&gt;这段代码，通常在30行左右。</strong></li>
<li><strong>使用如下的代码来替代它：</strong></li>
</ul>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;% if(post.toc == true)&#123; %&gt;</span><br><span class="line">  &lt;div id=&quot;toc-div&quot; class=&quot;toc-article&quot; &lt;% if (post.encrypt == true) &#123; %&gt;style=&quot;display:none&quot; &lt;% &#125; %&gt;&gt;</span><br><span class="line">    &lt;strong class=&quot;toc-title&quot;&gt;Index&lt;/strong&gt;</span><br><span class="line">      &lt;% if (post.encrypt == true) &#123; %&gt;</span><br><span class="line">        &lt;%- toc(post.origin, &#123;list_number: true&#125;) %&gt;</span><br><span class="line">      &lt;% &#125; else &#123; %&gt;</span><br><span class="line">        &lt;%- toc(post.content, &#123;list_number: true&#125;) %&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;%- post.content %&gt;</span><br></pre></td></tr></table></figure>

<p>…</p>
<p>2.1 我在 G:\1-sanciyuan\8-bolg\themes\next2-8.0\layout_partials 目录下没找到啊</p>
<ul>
<li>是我版本的问题吧？以前旧版本有？</li>
<li>是我主题问题吗？我这里是next主题，上面教程是matery主题？</li>
<li>总之不了了之；</li>
</ul>
<p>2.1.5 应该是不是一个主题的原因</p>
<ul>
<li>作者是想举这个例子，让其他主题使用者，要对着修改自己的主题</li>
<li>而我这种不懂其中原理的，就没法举一反三；2020-9-10 05:18:56</li>
</ul>
<p>2.2 找不到，也没法，先hexo s 本地试试如何；2020-9-9 18:28:45</p>
<h3 id="18-3-问题："><a href="#18-3-问题：" class="headerlink" title="18.3 问题："></a>18.3 问题：</h3><h4 id="18-3-1-没有目录"><a href="#18-3-1-没有目录" class="headerlink" title="18.3.1 没有目录"></a>18.3.1 没有目录</h4><p>1.文章里面的目录没有，就是toc配置</p>
<p>2.但是没有效果，即使找到next主题的配置</p>
<ul>
<li><a href="https://www.jianshu.com/p/be095c5fdeb7">https://www.jianshu.com/p/be095c5fdeb7</a></li>
</ul>
<p>3.没有版本，只有放弃这个方法，另寻加密方法；</p>
<p>4.找到个网页：<a href="https://yuyuforest.com/2018/10/18/encrypt-toc/">https://yuyuforest.com/2018/10/18/encrypt-toc/</a></p>
<ul>
<li>有相关问题，但是很久以前的版本；2020-9-10 05:56:26</li>
<li>文章来源：<a href="https://github.com/MikeCoder/hexo-blog-encrypt/issues/58">https://github.com/MikeCoder/hexo-blog-encrypt/issues/58</a></li>
</ul>
<p>4.1 看了许久的网页；</p>
<ul>
<li><p>根据网页中的最终的解决方案</p>
</li>
<li><p>我把<code>&lt;section class=&quot;site-overview-wrap sidebar-panel&#123;% if not display_toc or page.encrypt == false and toc(page.content).length <= 1 or page.encrypt == true and toc(page.origin).length <= 1 %&#125; sidebar-panel-active&#123;% endif %&#125;&quot;&gt;</code></p>
<p>替换了：</p>
<p><img src="http://bucket-c70.test.upcdn.net/8/16.png" alt="16"></p>
</li>
<li><p>还是没有效果，我应该放弃了；</p>
</li>
</ul>
<hr>
<h3 id="18-4-方法二-简单法"><a href="#18-4-方法二-简单法" class="headerlink" title="18.4 方法二-简单法"></a>18.4 方法二-简单法</h3><p>1.<a href="https://www.jianshu.com/p/44e211829447">https://www.jianshu.com/p/44e211829447</a></p>
<p>2.然后简单的方法…密码错了，也可以进，</p>
<ul>
<li>而且还是没toc，我也是醉了；2020-9-9 20:54:38</li>
</ul>
<hr>
<h2 id="19-next配置文件重置位置"><a href="#19-next配置文件重置位置" class="headerlink" title="19. next配置文件重置位置"></a>19. next配置文件重置位置</h2><p><a href="https://theme-next.js.org/docs/getting-started/configuration.html">https://theme-next.js.org/docs/getting-started/configuration.html</a></p>
<hr>
<h1 id="2-hexo-or-next-config"><a href="#2-hexo-or-next-config" class="headerlink" title="2. hexo or next config"></a>2. hexo or next config</h1><h2 id="1-搜索"><a href="#1-搜索" class="headerlink" title="1. 搜索"></a>1. 搜索</h2><p>之前用的不是这个方法，插件名称也不是这个；少了db；</p>
<p>hexo-generator-search；忽然没了搜索功能，去官网看，又觉得陌生；可惜之前没做笔记；想不起了</p>
<p><a href="https://theme-next.js.org/docs/third-party-services/search-services.html#Local-Search">官网文档</a></p>
<h3 id="本地搜寻"><a href="#本地搜寻" class="headerlink" title="本地搜寻"></a>本地搜寻</h3><p>本地搜索不需要任何外部第三方服务，并且可以由搜索引擎额外索引。建议大多数用户使用此搜索方法。</p>
<ul>
<li><p><a href="https://theme-next.js.org/docs/third-party-services/search-services.html#local-search-1">安装→</a></p>
<p><code>hexo-generator-searchdb</code>通过执行以下命令来安装站点根目录：</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">npm</span>安装hexo-generator-searchdb</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p><a href="https://theme-next.js.org/docs/third-party-services/search-services.html#local-search-2">六方配置→</a></p>
<p>Edit site config file and add following content:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">hexo/_config.yml</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://theme-next.js.org/docs/third-party-services/search-services.html#local-search-3">NexT配置</a></p>
<p>Edit theme config file to enable Local Search:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">next/_config.yml</span></span><br><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<hr>
<h2 id="2-next配置文件重置位置"><a href="#2-next配置文件重置位置" class="headerlink" title="2. next配置文件重置位置"></a>2. next配置文件重置位置</h2><p><a href="https://theme-next.js.org/docs/getting-started/configuration.html">https://theme-next.js.org/docs/getting-started/configuration.html</a></p>
<hr>
<h2 id="3-页脚修改"><a href="#3-页脚修改" class="headerlink" title="3. 页脚修改"></a>3. 页脚修改</h2><p><a href="https://theme-next.js.org/docs/theme-settings/footer.html">官网介绍</a></p>
<h3 id="3-1-可能会用于又拍云领取；"><a href="#3-1-可能会用于又拍云领取；" class="headerlink" title="3.1 可能会用于又拍云领取；"></a>3.1 可能会用于又拍云领取；</h3><p><a href="https://www.upyun.com/league；领取免费额度与存储空间">https://www.upyun.com/league；领取免费额度与存储空间</a></p>
<hr>
<h2 id="4-归档页面页数"><a href="#4-归档页面页数" class="headerlink" title="4. 归档页面页数"></a>4. 归档页面页数</h2><h3 id="4-1-在hexo的配置中"><a href="#4-1-在hexo的配置中" class="headerlink" title="4.1 在hexo的配置中"></a>4.1 在hexo的配置中</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment"># 归档一页多少</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">17</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br></pre></td></tr></table></figure>

<ul>
<li>大概第85行</li>
</ul>
<h3 id="4-2-首页一页文章数"><a href="#4-2-首页一页文章数" class="headerlink" title="4.2 首页一页文章数"></a>4.2 首页一页文章数</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">7</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure>

<ul>
<li>大约56行</li>
</ul>
<p>如果添加了新的东西，行数都会变化；2020-9-12 10:57:29</p>
<hr>
<br />

<h1 id="3-npm’s-order"><a href="#3-npm’s-order" class="headerlink" title="3. npm’s order"></a>3. npm’s order</h1><h2 id="1-卸载插件"><a href="#1-卸载插件" class="headerlink" title="1. 卸载插件"></a>1. 卸载插件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">npm uninstall <span class="tag">&lt;<span class="name">你的插件名</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>一般都我是在blog_博客目录下用的npm命令；</p>
<p><img src="http://bucket-c70.test.upcdn.net/4/1-8-1.png" alt="1"></p>
<hr>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
  </entry>
  <entry>
    <title>8.1-blog&#39;s创建</title>
    <url>/1-(0~50)/8.1-blog&#39;s_SetUp/</url>
    <content><![CDATA[<h2 id="1-安装hexo与配置"><a href="#1-安装hexo与配置" class="headerlink" title="1.安装hexo与配置"></a>1.安装hexo与配置</h2><h3 id="1-1-前提安装"><a href="#1-1-前提安装" class="headerlink" title="1.1 前提安装"></a>1.1 前提安装</h3><p>1.安装hexo之前，要安装有node.js和git；</p>
<p><a href="https://hexo.io/zh-cn/docs/#安装前提">https://hexo.io/zh-cn/docs/#安装前提</a></p>
<a id="more"></a>

<h3 id="1-2-全局安装hexo"><a href="#1-2-全局安装hexo" class="headerlink" title="1.2 全局安装hexo"></a>1.2 全局安装hexo</h3><p>1.<code>npm install -g hexo-cli</code></p>
<ul>
<li>在cmd，或git bash 都行；我个人喜欢git bash</li>
<li>但两者不完全相同，有些命令不相同。</li>
</ul>
<h3 id="1-3-初始化hexo"><a href="#1-3-初始化hexo" class="headerlink" title="1.3 初始化hexo"></a>1.3 初始化hexo</h3><p>1.初始化，不是格式化，这里应该是新建一个hexo 的意思</p>
<p><code>hexo init &lt;folder&gt;</code></p>
<ul>
<li>我记得，我新建一个文件夹后，直接<code>hexo init</code>没有后面的<code>&lt;folder&gt;</code></li>
<li>folder<br>英 [ˈfəʊldə(r)]  美 [ˈfoʊldər]<br>n.文件夹;纸夹;(某些计算机系统中的)文件夹</li>
</ul>
<p>2.npm install</p>
<ul>
<li>按理说，这里没说安装什么，可能是因为前面初始化了hexo，所以这里就是安装hexo</li>
</ul>
<hr>
<h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><p>1.配置，在_config里面配置，blog目录下；怎么配置，配置什么都是按需求的。</p>
<p>2.但是，新手，什么都不知道，即连可以有什么需求都不知道（我）</p>
<p>3.百度；</p>
<p>4.我也没有记录，我配置了些啥。也说不出；</p>
<ul>
<li><p>就算是为了自己，也留个云盘吧。随缘更新</p>
</li>
<li><p><a href="https://wws.lanzous.com/iolVsgk4k2h">配置文件-链接</a>，密码:ay6i</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>9-website_collect</title>
    <url>/1-(0~50)/9-Function_website/</url>
    <content><![CDATA[<h1 id="1-功能网站"><a href="#1-功能网站" class="headerlink" title="1. 功能网站"></a>1. 功能网站</h1><h2 id="1-压缩图片网"><a href="#1-压缩图片网" class="headerlink" title="1. 压缩图片网"></a>1. 压缩图片网</h2><p><a href="https://tinypng.com/">https://tinypng.com/</a></p>
<a id="more"></a>

<hr>
<h2 id="2-特殊符号网"><a href="#2-特殊符号网" class="headerlink" title="2.  特殊符号网"></a>2.  特殊符号网</h2><p><a href="https://www.jiuwa.net/fuhao/agg/16/">https://www.jiuwa.net/fuhao/agg/16/</a></p>
<hr>
<h1 id="2-学习网"><a href="#2-学习网" class="headerlink" title="2. 学习网"></a>2. 学习网</h1><h2 id="2-1-MyBatis-Plus"><a href="#2-1-MyBatis-Plus" class="headerlink" title="2.1 MyBatis-Plus"></a>2.1 MyBatis-Plus</h2><p><a href="https://mp.baomidou.com/">https://mp.baomidou.com/</a></p>
<h3 id="2-1-1-myBatis"><a href="#2-1-1-myBatis" class="headerlink" title="2.1.1  myBatis"></a>2.1.1  myBatis</h3><p><a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></p>
<hr>
<h2 id="2-2-VUE后台"><a href="#2-2-VUE后台" class="headerlink" title="2.2 VUE后台"></a>2.2 VUE后台</h2><p><a href="https://github.com/PanJiaChen/vue-admin-template/blob/master/README-zh.md">https://github.com/PanJiaChen/vue-admin-template/blob/master/README-zh.md</a></p>
<p>这是一个极简的 vue admin 管理后台。它只包含了 Element UI &amp; axios &amp; iconfont &amp; permission control &amp; lint，这些搭建后台必要的东西。</p>
<hr>
<h2 id="2-2-牛客网"><a href="#2-2-牛客网" class="headerlink" title="2.2 牛客网"></a>2.2 牛客网</h2><p><a href="https://www.nowcoder.com/">https://www.nowcoder.com</a></p>
<p>上面有题可以做；</p>
<hr>
<h2 id="3-云盘"><a href="#3-云盘" class="headerlink" title="3. 云盘"></a>3. 云盘</h2><h3 id="3-1-蓝奏云"><a href="#3-1-蓝奏云" class="headerlink" title="3.1 蓝奏云"></a>3.1 蓝奏云</h3><p><a href="https://www.baidu.com/link?url=D1rMAyldiFnTci0fG81_N045SMGguJvE87Rkg_AMe2mANeabYS3yw3RRymasGC12&amp;wd=&amp;eqid=9440a9510014caf8000000065f597f7e">https://www.baidu.com/link?url=D1rMAyldiFnTci0fG81_N045SMGguJvE87Rkg_AMe2mANeabYS3yw3RRymasGC12&amp;wd=&amp;eqid=9440a9510014caf8000000065f597f7e</a></p>
<ul>
<li>注意：蓝奏云，只能上传100mb以内的文件</li>
<li>空间无限；</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>website_网站</category>
      </categories>
      <tags>
        <tag>Function_website</tag>
      </tags>
  </entry>
  <entry>
    <title>10-PicGo_图床</title>
    <url>/1-(0~50)/10-PicGo/</url>
    <content><![CDATA[<h2 id="0-下载安装"><a href="#0-下载安装" class="headerlink" title="0.  下载安装"></a>0.  下载安装</h2><ol>
<li><p>下载</p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85">https://picgo.github.io/PicGo-Doc/zh/guide/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85</a></p>
<p><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>下载速度很慢，即使用IDM；</p>
<p>在笔记本上面下载的时候忘记了用梯子；（前来笔记）</p>
<p><strong>记得梯子</strong></p>
<blockquote>
<p>如果不是电信网，picgo的网址打不开；</p>
</blockquote>
<a id="more"></a>
</li>
<li><p>安装</p>
<p>选路径安装，没配置，配置在安装后的里面；</p>
</li>
<li><p>有空记得去赞助一下；2020-8-22 18:05:54</p>
</li>
</ol>
<h2 id="1-设置图床"><a href="#1-设置图床" class="headerlink" title="1. 设置图床"></a>1. 设置图床</h2><ol>
<li><p>辛苦，给腾讯云弄了子账号后；</p>
<p><img src="https://i.loli.net/2020/08/04/2WmcELx4HbgrGFU.png" alt="有时效"></p>
<hr>
</li>
</ol>
<ol start="2">
<li><p>本想用国产，去弄默认的SM.MS图床吧，既然是默认的，估计有东西。</p>
<p>根据说明配置后：</p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#smms">https://picgo.github.io/PicGo-Doc/zh/guide/config.html#smms</a></p>
<p><img src="https://i.loli.net/2020/08/04/WAJoxiHZdvn57aD.png" alt=""></p>
<p>去下载插件，没下载插件的时候也能正常使用。甚至不配置也可以；</p>
<p>不过还是去下载了吧</p>
</li>
<li><p>因为：</p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E6%A6%82%E8%BF%B0">https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E6%A6%82%E8%BF%B0</a></p>
<ul>
<li><code>微博图床</code> v1.0 <strong>微博图床从 2019 年 4 月开始进行防盗链，不建议继续使用</strong></li>
<li><code>七牛图床</code> v1.0</li>
<li><code>腾讯云 COS v4\v5版本</code> v1.1 &amp; v1.5.0</li>
<li><code>又拍云</code> v1.2.0</li>
<li><code>GitHub</code> v1.5.0</li>
<li><code>SM.MS</code> v1.5.1 <strong>由于官方不再支持V1版本，暂时请使用<a href="https://github.com/xlzy520/picgo-plugin-smms-user">smms-user</a>插件</strong></li>
<li><code>阿里云 OSS</code> v1.6.0</li>
<li><code>Imgur</code> v1.6.0</li>
</ul>
</li>
<li><p>说什么不再支持V1，不懂；然后就去下载了</p>
</li>
<li><p>下载</p>
<p>为 <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> 开发的一款插件，新增了<a href="https://sm.ms/home/">SM.MS注册用户</a> 图床。 使用SM.MS V2的API上传，适用于注册了SM.MS的用户。填写<code>Authorization</code>即可</p>
<ul>
<li><p>在线安装</p>
<p>打开 <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> 详细窗口，选择<strong>插件设置</strong>，搜索<strong>smms-user</strong>安装，然后重启应用即可。</p>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="1-2-SM-ms"><a href="#1-2-SM-ms" class="headerlink" title="1.2 SM.ms"></a>1.2 SM.ms</h3><h4 id="1-2-1-概述"><a href="#1-2-1-概述" class="headerlink" title="1.2.1 概述"></a>1.2.1 概述</h4><ul>
<li><p>配置完后，在SM.MS官网上就能看到上传的图片了，免费空间有5个g</p>
</li>
<li><p>不过没有试验在没有安装插件时，能不能上传到SM.MS</p>
</li>
<li><p>反正前两张图片，在没有配置SM.MS的API时，是没有上传在SM.MS里面的，估计是本地？</p>
<img src="https://i.loli.net/2020/08/04/MRr3Ly2bnzIjYqP.png" alt="没有1和2" style="zoom:150%;" />

</li>
</ul>
<hr>
<h4 id="1-2-2-没有配置却还是可以上传与使用"><a href="#1-2-2-没有配置却还是可以上传与使用" class="headerlink" title="1.2.2 没有配置却还是可以上传与使用"></a>1.2.2 没有配置却还是可以上传与使用</h4><p>试验一下，如果把本地的1和2删除，那么md里面的链接还有效吗？</p>
<p>如果没效，说明就是弄在本地了。如果有效，那…也不知道啥情况；</p>
<ol>
<li><p>试验开始，删除本地图片；</p>
</li>
<li><p>查看md文件图片显示；</p>
</li>
<li><p>没有影响，也许是没有刷新，关闭Typora，重新打开试验；</p>
<ul>
<li>还是有效果，但是我忽然想到，连本地都加载不出来了，Tyora上面都能看到，没有要探索它的价值。从Ty上面获得的信息，没有价值</li>
<li>建议跳过第三步</li>
</ul>
</li>
<li><p>hexo s 本地查看图片效果；还是先 hexo clean 一下；2020-8-4 02:12:34</p>
</li>
<li><p>有效，非常恐怖。那么问题来了，本地没有，SM.MS上面没有，那么这个图片的地基在哪里？</p>
<ul>
<li>如果hexo g -d部署后还有效果，那么这个问题将正式提出，虽然只能说个不晓得；</li>
</ul>
</li>
<li><p><font color='red'>有效！</font>可怕，不知道怎么回事，这样的话，我一直上传，空间无限？只是SM.MS那边没有数据不好管理；因为PicGo软件里面图片没有名字；</p>
<p>6.1 有没有可能让PicGo图片有名字，这样方便看，也方便管理；百度；</p>
<p>6.2 似乎找到：super-prefix：用于自定义图像文件名和前缀</p>
<p>6.3 <a href="https://zhuanlan.zhihu.com/p/128014135">https://zhuanlan.zhihu.com/p/128014135</a></p>
<p>6.4 下载后不知道如何使用</p>
<p>6.5 百度后，无果。倒是发现了b站图床的可能；</p>
</li>
<li><p>picgo-plugin-bilibili</p>
<p>7.1 <a href="https://www.npmjs.com/package/picgo-plugin-bilibili">https://www.npmjs.com/package/picgo-plugin-bilibili</a></p>
<p>7.2 日后再弄吧。2020-8-4 02:31:18</p>
<hr>
</li>
</ol>
<h3 id="1-3-又拍云"><a href="#1-3-又拍云" class="headerlink" title="1.3 又拍云"></a>1.3 又拍云</h3><p>辣鸡移动宽带无法连接sm.ms，需要翻墙。我也是笑了；2020-8-18 16:25:16</p>
<ol>
<li><p>在<a href="https://www.upyun.com/，创建账号；">https://www.upyun.com/，创建账号；</a></p>
</li>
<li><p>进入控制台；</p>
</li>
<li><p>云存储，立即使用；</p>
</li>
<li><p>没有，就创建服务</p>
</li>
<li><p>配置：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;bucket&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="regexp">//</span> 存储空间名，及你的服务名</span><br><span class="line">  <span class="string">&quot;operator&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="regexp">//</span> 操作员</span><br><span class="line">  <span class="string">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="regexp">//</span> 密码</span><br><span class="line">  <span class="string">&quot;options&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="regexp">//</span> 针对图片的一些后缀处理参数</span><br><span class="line">  <span class="string">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="regexp">//</span> 自定义存储路径，比如img/</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;&quot;</span> <span class="regexp">//</span> 加速域名，注意要加http:<span class="regexp">//</span>或者https:<span class="regexp">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>移动网连PicGo的网址都打不开；</p>
<p><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html">https://picgo.github.io/PicGo-Doc/zh/guide/config.html</a></p>
<br />

</li>
</ol>
<h4 id="1-3-2-注意"><a href="#1-3-2-注意" class="headerlink" title="1.3.2 注意"></a>1.3.2 注意</h4><ol>
<li><p>如果是https，Typora是无法看到图的，本地和部署没有实验；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/7-%E6%B3%A8%E6%84%8F.png" alt="1"></p>
</li>
<li><p>在PicGo图床设置–又拍云这里设置</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/8-7.2.png" alt="2"></p>
</li>
<li></li>
</ol>
<hr>
<h2 id="2-暂时的相册的文件名字"><a href="#2-暂时的相册的文件名字" class="headerlink" title="2. 暂时的相册的文件名字"></a>2. 暂时的相册的文件名字</h2><p>PicGo图片里面看不到文件名，暂时在这里序列</p>
<p>2-腾讯云cos没免费.png</p>
<p>3-sm.ms配置.png</p>
<p>4-1.2 SM.ms.png</p>
<p>5-3.1 無感情冷.png</p>
<p>26-8.2-图一.png  忘记前面的6- 了</p>
]]></content>
      <categories>
        <category>图片_picture</category>
      </categories>
      <tags>
        <tag>图片_picture</tag>
      </tags>
  </entry>
  <entry>
    <title>11-git</title>
    <url>/1-(0~50)/11-git/</url>
    <content><![CDATA[<h2 id="1-git上传项目到码云-gitee"><a href="#1-git上传项目到码云-gitee" class="headerlink" title="1. git上传项目到码云(gitee)"></a>1. git上传项目到码云(gitee)</h2><p><a href="https://www.cnblogs.com/uudon/p/12618043.html">git上传项目到码云(gitee)</a></p>
<p>码云官方：<a href="https://gitee.com/help/articles/4114">https://gitee.com/help/articles/4114</a></p>
<p>使用成功：<a href="https://www.jianshu.com/p/287ab9f46035">https://www.jianshu.com/p/287ab9f46035</a></p>
<blockquote>
<p>如果本地仓库出错，可以马上再另外创建文件夹，再建一个即可；</p>
<p>这不是hexo+next，随便新建，目前；2020-8-10 15:21:50</p>
</blockquote>
<a id="more"></a>

<p>1.建立本地git仓库</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">cd 到你的本地项目根目录下，执行git命令<span class="string">``</span>git init</span><br></pre></td></tr></table></figure>

<p> 2.第二步：将本地项目工作区的所有文件添加到暂存区</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">add</span> .  <span class="comment">// . 表示所有文件, 如果想添加项目中的指定文件，那就把 . 改为指定文件名即可</span></span><br></pre></td></tr></table></figure>

<p>3.第三步：将暂存区的文件提交到本地仓库</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;&quot;</span>  <span class="regexp">//</span>冒号里面写注释语句 eg:git commit -m <span class="string">&quot;init project&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>参数<code>-m</code>后为当次提交的备注信息</p>
</li>
<li><p><code>git status -s</code>可以查看提交成功没有，（A：提交成功；AM：文件在添加到缓存之后又有改动）</p>
</li>
</ul>
<p>4.将本地仓库关联到码云上</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git remote add origin https:<span class="regexp">//gi</span>tee.com<span class="regexp">/tyb321/</span>leopard.git     <span class="regexp">//</span>后面的URL地址就是我在第四步最后图片时复制的那个https地址</span><br></pre></td></tr></table></figure>

<ul>
<li>这不是我的地址，只是复制别人的的笔记　　</li>
</ul>
<p>在这一步时如果出现错误：fatal:remote origin already exists 意思是路径存在了，就需要删除原来的路径从新添加</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">那就先输入  git remote rm origin</span><br><span class="line">再输入     git remote add origin https:<span class="regexp">//gi</span>tee.com<span class="regexp">/tyb321/</span>leopard.git 就不会报错了。</span><br></pre></td></tr></table></figure>

<p>5.最后一步，将代码由本地仓库上传到Github远程仓库</p>
<p>git push -u origin master</p>
<ul>
<li><p>如果没有第四步关联，这样也行，出至：gitee官网</p>
<p><code>git push https://gitee.com/***/test.git</code></p>
</li>
</ul>
<br />

<hr>
<h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2. 安装git"></a>2. 安装git</h2><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></p>
<p>在第9步后面，多了一个：</p>
<p>Choose the default behavior of ‘git pull’</p>
<p>随后还多了一个管理证书的；</p>
<p><img src="http://bucket-c70.test.upcdn.net/11/1-2-1.png" alt=""></p>
<p>我选的中间的；</p>
<blockquote>
<ul>
<li><p>Git Credential Managert</p>
<p>Git凭据Managert</p>
</li>
<li><p>The Git Credential Manager for Windows handles credentials e.g. for AzureDevOps and GitHub (requires .NET framework v4.5.1 or later).</p>
<p>Windows的Git凭据管理器处理AzureDevOps和GitHub的凭据(需要. net framework v4.5.1或更高版本)。</p>
</li>
</ul>
</blockquote>
<p>第三个选项是：</p>
<blockquote>
<ul>
<li><p>Git Credential Manager Core</p>
<p>Git Credential管理器核心</p>
</li>
<li><p>(NEW!)Use the new, cross-platform version of the Git Credential Manager.</p>
<p>(新!)使用新的、跨平台版本的Git凭据管理器。</p>
</li>
<li><p>See more information about the future of Git Credential Manager here.</p>
<p>有关Git Credential Manager未来的更多信息，请点击这里。</p>
</li>
</ul>
</blockquote>
<p>后面的大同小异；</p>
<p>在安装后的界面（也是最后一个界面）勾选View Release Notes 会给一个说明html；不过是本地的；</p>
<p>file:///C:/Program%20Files/Git/ReleaseNotes.html</p>
<p>这里有2.27版本的安装：</p>
<p><a href="https://blog.csdn.net/qq_19394437/article/details/107250235">https://blog.csdn.net/qq_19394437/article/details/107250235</a></p>
<hr>
<h2 id="3-git-remote-v"><a href="#3-git-remote-v" class="headerlink" title="3. git remote -v"></a>3. git remote -v</h2><p>1.查看当前仓库对应的远程仓库地址</p>
<p>2.这条命令能显示你当前仓库中已经添加了的仓库名和对应的仓库地址，通常来讲，会有两条一模一样的记录，分别是fetch和push，其中fetch是用来从远程同步 push是用来推送到远程</p>
<p>3.<a href="https://gitee.com/help/articles/4114#查看当前仓库对应的远程仓库地址">出至</a>：</p>
<p>4.实验：</p>
<p><img src="../img/11/4.png" alt="4"></p>
<br />

<hr>
<h2 id="4-git-clone"><a href="#4-git-clone" class="headerlink" title="4. git clone"></a>4. git clone</h2><p>1.git clone <a href="https://github.com/×××">https://github.com/×××</a>  从远程库中克隆,克隆一个版本库到新的目录，可以在当前目录新建一个文件夹，也可以git clone [地址] [本地目录]</p>
<p>2.git clone ssh://igerrit.storm:29418/tools/repo.git // 同上，</p>
<p>3.之后 git pull origin master //origin是远程主机，master是默认分支</p>
<p>4.要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</p>
<p>5.Git支持多种协议，包括<code>https</code>，但通过<code>ssh</code>支持的原生<code>git</code>协议速度最快</p>
<p>6.单一仓库的更新可以使用git pull命令。</p>
<hr>
<h2 id="5-git挂代理"><a href="#5-git挂代理" class="headerlink" title="5. git挂代理"></a>5. git挂代理</h2><h3 id="5-1-代码"><a href="#5-1-代码" class="headerlink" title="5.1 代码"></a>5.1 代码</h3><p><img src="../img/11/2.png" alt="2"></p>
<h3 id="5-2-gitconfig文件"><a href="#5-2-gitconfig文件" class="headerlink" title="5.2 gitconfig文件"></a>5.2 gitconfig文件</h3><p>1.这个文件在：C:\Documents and Settings\Administrator</p>
<p>2.Documents and Settings文件夹不一定有权限，需要改；</p>
<ul>
<li>权限笔记：文章21-3</li>
</ul>
<p>3.组队的例子：</p>
<p><img src="../img/11/3.png" alt="3"></p>
<ul>
<li>现在有点困，睡觉了，下次再来解析；2020-9-14 03:54:39</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>12-html+css-入门-pink</title>
    <url>/1-(0~50)/12-html+css_introdiction-pink/</url>
    <content><![CDATA[<h2 id="0-建议使用的软件"><a href="#0-建议使用的软件" class="headerlink" title="0. 建议使用的软件"></a>0. 建议使用的软件</h2><h2 id="1-盒子模型"><a href="#1-盒子模型" class="headerlink" title="1. 盒子模型"></a>1. 盒子模型</h2><h3 id="1、网页布局的本质"><a href="#1、网页布局的本质" class="headerlink" title="1、网页布局的本质"></a>1、网页布局的本质</h3><p>网页布局的核心本质： 就是利用 CSS 摆盒子。</p>
<a id="more"></a>

<p>网页布局过程：</p>
<ol>
<li>先准备好相关的网页元素，网页元素基本都是盒子 Box 。</li>
<li>利用 CSS 设置好盒子样式，然后摆放到相应位置。</li>
<li>往盒子里面装内容</li>
</ol>
<h3 id="2、盒子模型（Box-Model）组成"><a href="#2、盒子模型（Box-Model）组成" class="headerlink" title="2、盒子模型（Box Model）组成"></a>2、盒子模型（Box Model）组成</h3><p>​        盒子模型：把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p>
<p>​        CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<strong>边框</strong>、<strong>外边距</strong>、<strong>内边距</strong>、和 <strong>实际内容</strong></p>
<h3 id="1-3、边框（border）"><a href="#1-3、边框（border）" class="headerlink" title="1.3、边框（border）"></a>1.3、边框（border）</h3><h4 id="1-3-1、边框的使用"><a href="#1-3-1、边框的使用" class="headerlink" title="1.3.1、边框的使用"></a>1.3.1、边框的使用</h4><p>1、border可以设置元素的边框。边框有三部分组成：边框宽度(粗细) 边框样式  边框颜色；</p>
<p>2、语法：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">border : border-width || border-style || border-color;   </span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th>属性</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>border-width</td>
<td>定义边框粗细，单位是px</td>
</tr>
<tr>
<td>border-style</td>
<td>边框的样式</td>
</tr>
<tr>
<td>border-color</td>
<td>边框的颜色</td>
</tr>
</tbody></table>
<p>边框样式 border-style 可以设置如下值：</p>
<ul>
<li>none：没有边框即忽略所有边框的宽度（默认值）</li>
<li>solid：边框为单实线(最为常用的)</li>
<li>dashed：边框为虚线  </li>
<li>dotted：边框为点线</li>
</ul>
<p>3、边框的合写分写</p>
<p>边框简写：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;  </span><br></pre></td></tr></table></figure>

<p>边框分开写法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-top</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;  <span class="comment">/* 只设定上边框， 其余同理 */</span>   </span><br></pre></td></tr></table></figure>

<h4 id="1-3-2、表格的细线边框"><a href="#1-3-2、表格的细线边框" class="headerlink" title="1.3.2、表格的细线边框"></a>1.3.2、表格的细线边框</h4><p>1、border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p>
<p>2、语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-collapse</span><span class="selector-pseudo">:collapse</span>; </span><br></pre></td></tr></table></figure>

<p>collapse 单词是合并的意思</p>
<p>border-collapse: collapse; 表示相邻边框合并在一起</p>
<h4 id="1-3-3、边框会影响盒子实际大小"><a href="#1-3-3、边框会影响盒子实际大小" class="headerlink" title="1.3.3、边框会影响盒子实际大小"></a>1.3.3、边框会影响盒子实际大小</h4><p>边框会额外增加盒子的实际大小。因此我们有两种方案解决：</p>
<ul>
<li>测量盒子大小的时候,不量边框。</li>
<li>如果测量的时候包含了边框,则需要 width/height 减去边框宽度</li>
</ul>
<h4 id="1-3-4-圆角边框"><a href="#1-3-4-圆角边框" class="headerlink" title="1.3.4 圆角边框"></a>1.3.4 圆角边框</h4><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p>
<p>border-radius 属性用于设置元素的外边框圆角。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/50.png" alt="50"></p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:length</span>;    </span><br></pre></td></tr></table></figure>

<ul>
<li><p>参数值可以为数值或百分比的形式</p>
</li>
<li><p>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</p>
</li>
<li><p>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</p>
</li>
<li><p>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</p>
</li>
<li><p>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</p>
</li>
<li><p><code>&lt;length&gt;</code>定义圆形半径或椭圆的半长轴，半短轴。负值无效。</p>
<p><code>&lt;percentage&gt;</code></p>
<p>使用百分数定义圆形半径或椭圆的半长轴，半短轴。水平半轴相对于盒模型的宽度；垂直半轴相对于盒模型的高度。负值无效。</p>
</li>
</ul>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">border-radius: 1em/5em;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等价于： */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">border-top-left-radius</span>:     1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-top-right-radius</span>:    1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-right-radius</span>: 1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-left-radius</span>:  1<span class="selector-tag">em</span> 5<span class="selector-tag">em</span>;</span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">border-radius: 4px 3px 6px / 2px 4px;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等价于： */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">border-top-left-radius</span>:     4<span class="selector-tag">px</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-top-right-radius</span>:    3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-right-radius</span>: 6<span class="selector-tag">px</span> 2<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-bottom-left-radius</span>:  3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure>

<p>椭圆就需要设置 两个属性，一个半长轴，一个半短轴；</p>
<p>3.设置一个xpx属性，就是圆，半长轴=半短轴；</p>
<p>3.1 而百分比不是；</p>
<ul>
<li>百分比：x*百分比，Y*百分比</li>
</ul>
<hr>
<h4 id="1-3-5、边框透明"><a href="#1-3-5、边框透明" class="headerlink" title="1.3.5、边框透明"></a>1.3.5、边框透明</h4><hr>
<h3 id="4、内边距（padding）"><a href="#4、内边距（padding）" class="headerlink" title="4、内边距（padding）"></a>4、内边距（padding）</h3><h4 id="4-1、内边距的使用方式"><a href="#4-1、内边距的使用方式" class="headerlink" title="4.1、内边距的使用方式"></a>4.1、内边距的使用方式</h4><p>1、padding 属性用于设置内边距，即边框与内容之间的距离。</p>
<p>2、语法：</p>
<p>合写属性：</p>
<p><img src="G:/%E4%B8%89%E6%AC%A1%E5%85%83/2-%E5%AD%A6%E4%B9%A0/11-web/6-html5%E4%B8%8Ecss3%E7%9A%84%E5%A4%8D%E4%B9%A0/1-%E8%B5%84%E6%96%99/3-%E8%B5%84%E6%96%99%E5%85%A8/05-%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80CSS%E7%AC%AC%E4%B8%89%E5%A4%A9/%E7%AC%94%E8%AE%B0/images/1571493298248.png" alt="1571493298248"></p>
<p>分写属性：</p>
<p><img src="G:/%E4%B8%89%E6%AC%A1%E5%85%83/2-%E5%AD%A6%E4%B9%A0/11-web/6-html5%E4%B8%8Ecss3%E7%9A%84%E5%A4%8D%E4%B9%A0/1-%E8%B5%84%E6%96%99/3-%E8%B5%84%E6%96%99%E5%85%A8/05-%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80CSS%E7%AC%AC%E4%B8%89%E5%A4%A9/%E7%AC%94%E8%AE%B0/images/1571493260536.png" alt="1571493260536"></p>
<h4 id="4-2、内边距会影响盒子实际大小"><a href="#4-2、内边距会影响盒子实际大小" class="headerlink" title="4.2、内边距会影响盒子实际大小"></a>4.2、内边距会影响盒子实际大小</h4><p>1、当我们给盒子指定 padding 值之后，发生了 2 件事情：</p>
<ol>
<li>内容和边框有了距离，添加了内边距。</li>
<li>padding影响了盒子实际大小。</li>
</ol>
<p>2、内边距对盒子大小的影响：</p>
<ul>
<li>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</li>
<li>如何盒子本身没有指定width/height属性, 则此时padding不会撑开盒子大小。</li>
</ul>
<p>3、解决方案：</p>
<p>​        如果保证盒子跟效果图大小保持一致，则让 width/height 减去多出来的内边距大小即可。</p>
<h3 id="5、外边距（margin）"><a href="#5、外边距（margin）" class="headerlink" title="5、外边距（margin）"></a>5、外边距（margin）</h3><h4 id="5-1、外边距的使用方式"><a href="#5-1、外边距的使用方式" class="headerlink" title="5.1、外边距的使用方式"></a>5.1、外边距的使用方式</h4><p>margin 属性用于设置外边距，即控制盒子和盒子之间的距离。</p>
<p><img src="G:/%E4%B8%89%E6%AC%A1%E5%85%83/2-%E5%AD%A6%E4%B9%A0/11-web/6-html5%E4%B8%8Ecss3%E7%9A%84%E5%A4%8D%E4%B9%A0/1-%E8%B5%84%E6%96%99/3-%E8%B5%84%E6%96%99%E5%85%A8/05-%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80CSS%E7%AC%AC%E4%B8%89%E5%A4%A9/%E7%AC%94%E8%AE%B0/images/1571493741272.png" alt="1571493741272"></p>
<h4 id="5-2、外边距典型应用"><a href="#5-2、外边距典型应用" class="headerlink" title="5.2、外边距典型应用"></a>5.2、外边距典型应用</h4><p>外边距可以让块级盒子水平居中的两个条件：</p>
<ul>
<li>盒子必须指定了宽度（width）。</li>
<li>盒子左右的外边距都设置为 auto 。</li>
</ul>
<p>常见的写法，以下三种都可以：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">margin-left</span>: <span class="selector-tag">auto</span>;   <span class="selector-tag">margin-right</span>: <span class="selector-tag">auto</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>;</span><br></pre></td></tr></table></figure>

<p>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-align:center 即可。</p>
<h4 id="5-3、外边距合并"><a href="#5-3、外边距合并" class="headerlink" title="5.3、外边距合并"></a>5.3、外边距合并</h4><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p>
<p>主要有两种情况:</p>
<p>1、相邻块元素垂直外边距的合并</p>
<p>​        当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并。</p>
<p>解决方案：<br>        尽量只给一个盒子添加 margin 值。</p>
<p>2、嵌套块元素垂直外边距的塌陷</p>
<p>​        对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p>
<p>解决方案：</p>
<ul>
<li>可以为父元素定义上边框。</li>
<li>可以为父元素定义上内边距。</li>
<li>可以为父元素添加 overflow:hidden。</li>
</ul>
<h4 id="5-4、清除内外边距"><a href="#5-4、清除内外边距" class="headerlink" title="5.4、清除内外边距"></a>5.4、清除内外边距</h4><p>​        网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">0</span>;   <span class="comment">/* 清除内边距 */</span></span><br><span class="line">   <span class="attribute">margin</span>:<span class="number">0</span>;    <span class="comment">/* 清除外边距 */</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>​        注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</p>
<hr>
<h2 id="2-表格"><a href="#2-表格" class="headerlink" title="2. 表格"></a>2. 表格</h2><hr>
<h2 id="5-学成在线案例"><a href="#5-学成在线案例" class="headerlink" title="5. 学成在线案例"></a>5. 学成在线案例</h2><h3 id="5-1-页面布局整体思路"><a href="#5-1-页面布局整体思路" class="headerlink" title="5.1 页面布局整体思路"></a>5.1 页面布局整体思路</h3><p>为了提高网页制作的效率，布局时通常有以下的整体思路：</p>
<ol>
<li><p>必须确定页面的版心（可视区），我们测量可得知。</p>
</li>
<li><p>分析页面中的行模块，以及每个行模块中的列模块。其实页面布局第一准则.</p>
</li>
<li><p>一行中的列模块经常浮动布局, 先确定每个列的大小,之后确定列的位置. 页面布局第二准则</p>
</li>
<li><p>制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要.</p>
</li>
<li><p>所以, 先理清楚<red>布局结构</red>,再写代码尤为重要. 这需要我们多写多积累.</p>
</li>
<li><p>视频：<a href="https://www.bilibili.com/video/BV14J4114768?p=198">https://www.bilibili.com/video/BV14J4114768?p=198</a></p>
</li>
</ol>
<hr>
<h3 id="5-2-确定版心"><a href="#5-2-确定版心" class="headerlink" title="5.2 确定版心"></a>5.2 确定版心</h3><p>因为这里资料里面给了 学成网首页.psd 材料，所以可以在PS里面截取宽度查看；</p>
<p>平常我们没有这类资料，应该是直接在ta人网页F12，查看；</p>
<ol>
<li><p>这个页面的版心是 1200 像素，每个版心都要水平居中对齐，可以定义版心为公共类：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<br />

<h3 id="5-3-头部制作"><a href="#5-3-头部制作" class="headerlink" title="5.3 头部制作"></a>5.3 头部制作</h3><p><img src="https://i.loli.net/2020/08/11/LJ3vYGbqMw8rfmP.png" alt="1"></p>
<ol>
<li><p>1 号是版心盒子 header 1200 * 42 的盒子水平居中对齐，上下给一个 margin 值就可以</p>
</li>
<li><p>版心盒子里面包含 2 号盒子 logo</p>
<blockquote>
<p>导航栏注意点:<br><strong>实际开发中，我们不会直接用链接a 而是用 li 包含链接(li+a)的做法。</strong></p>
<ol>
<li>li+a 语义更清晰，一看这就是有条理的列表型内容。</li>
<li>如果直接用a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎有降权的风险），从而影响网站排名</li>
</ol>
<blockquote>
<p>seo网站优化？网站优化的重点之一；</p>
</blockquote>
<p>注意:</p>
<ol>
<li>让导航栏一行显示, 给 li 加浮动, 因为 li 是块级元素, 需要一行显示.</li>
<li>这个nav导航栏可以不给宽度,将来可以继续添加其余文字</li>
<li>因为导航栏里面文字不一样多,所以最好给链接 a 左右padding 撑开盒子,而不是指定宽度</li>
</ol>
</blockquote>
</li>
<li><p>版心盒子里面包含 3 号盒子 nav 导航栏</p>
<blockquote>
<p>3.1 xxx</p>
<p>….</p>
<p>3.5 a放上去有下边框效果；</p>
<p>3.6 光有a的pdding还是有点近，给li也设置padding 0 10px；</p>
<p>padding在不断的撑开盒子，a的padding撑开一次，li的padding也撑开一次；P203</p>
</blockquote>
</li>
<li><p>版心盒子里面包含 4 号盒子 search 搜索框</p>
<blockquote>
<p>4.1 先是框架：</p>
<p><img src="https://i.loli.net/2020/08/12/G529DpBHdKtMvb1.png" alt="2"></p>
<p>一个是input文本框，一个是button按钮；</p>
<p>文本框不需要右边框；</p>
<p>4.2 找到最外层.search的宽度；412px；高度统一价：42px</p>
<p>4.3 一浮全浮</p>
<p>4.4 量测input文本框的宽度；360px；</p>
<p>高度不是42，因为有上下边框，所以是42-2=40px；</p>
<p>4.5 placeholder=”输入关键词”</p>
<p>4.6 将”输入关键词”右移一些，padding-left: 15px；</p>
<p>但此时input有实际的宽度360px，内边距会撑大盒子；</p>
<p><img src="https://i.loli.net/2020/08/13/7Lq5wlPSX3eijIp.png" alt="3"></p>
<p>这需要把width：360px - 15px，345px；</p>
<p>4.7  按道理说，input和button的宽度合适，不会让button掉下</p>
<p>也是行内块元素。</p>
<p>但是行内块元素之间有一个缝隙。所以还是得用浮动；</p>
</blockquote>
</li>
<li><p>版心盒子里面包含 5 号盒子 user 个人信息</p>
<blockquote>
<p>5.1 html的框架：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index2/user-h.png&quot;</span>&gt;</span></span><br><span class="line">   li-webchong</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>…</p>
<p>5.2 css</p>
<p>图片此时不居中，后面再讲；</p>
<p>5.3 最后整体背景颜色；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f3f5f7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.4 去掉以前为了方便看模块的背景图；</p>
</blockquote>
</li>
<li><p>注意：要求里面的 4 个盒子必须都是浮动</p>
</li>
</ol>
<p>word:</p>
<p>1-<a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/decoration">decoration</a></p>
<br />

<h4 id="5-3-2-自写"><a href="#5-3-2-自写" class="headerlink" title="5.3.2 自写"></a>5.3.2 自写</h4><ol>
<li>html 没啥变化，不是没啥。没有变化；</li>
<li>css句数明显少了一些。</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<h4 id="5-3-3-问题："><a href="#5-3-3-问题：" class="headerlink" title="5.3.3 问题："></a>5.3.3 问题：</h4><p>img点击下边有框。而background-image没有；</p>
<br />

<h3 id="5-4-banner-制作"><a href="#5-4-banner-制作" class="headerlink" title="5.4 banner 制作"></a>5.4 banner 制作</h3><h4 id="5-4-1-单词"><a href="#5-4-1-单词" class="headerlink" title="5.4.1 单词"></a>5.4.1 单词</h4><p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=banner&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/banner">banner</a></p>
<p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/course">course</a></p>
<h4 id="5-4-2-思路"><a href="#5-4-2-思路" class="headerlink" title="5.4.2 思路"></a>5.4.2 思路</h4><p><img src="https://i.loli.net/2020/08/18/SDCeEnQv4bPHB2d.png" alt="1"></p>
<p><img src="https://i.loli.net/2020/08/18/vu3VwmaX9PhUqAW.png" alt="2"></p>
<ol>
<li><p>1号盒子是通栏的大盒子<strong>banner</strong>， 不给宽度，给高度，给一个蓝色背景。</p>
<p>1.1 背景颜色#1c036c</p>
<p>1.2 背景图片不重复，居中；</p>
<p>1.3 若在紧靠盒子上面，可以加top</p>
<p><code>background: url(../2-img/index4/banner2.png) no-repeat top center;</code></p>
</li>
<li><p>2号盒子是版心 <strong>w</strong>， 要水平居中对齐。</p>
<p>2.1 宽度190px，高度421px</p>
</li>
<li><p>3号盒子版心内，左对齐 <strong>subnav</strong> 侧导航栏。</p>
<p>3.1 subnav 盒子 背景色 黑色半透明</p>
<p>3.2 重要的导航栏，li 包 a ，行高45px</p>
<blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;subnav&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样后全在一排；</p>
<p>css那边display：block;</p>
<p>有点感觉了；</p>
<p>3.2.2  设置 li高度为45px；不设置a；</p>
<p>3.2.3  左右两边有间距；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/6-12HCIP-5.4.2-3.png" alt="3"></p>
<p><code>padding:0 20px</code></p>
<p>此时有一个问题想问：padding什么时候会撑开盒子</p>
<blockquote>
<p>div有宽度的情况下，会撑开盒子；</p>
<p>但，div总不能一直没宽；</p>
<p>这时，可以用父元素设置宽；</p>
<p><a href="https://www.jianshu.com/p/3e2d76ab9ae8">https://www.jianshu.com/p/3e2d76ab9ae8</a></p>
</blockquote>
<p>在这里：</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.subnav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="comment">/* 2-2.3 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>li没有宽度，subnav设置的宽度，ul设置宽度应该也行。</p>
<p>实验一下；</p>
<p>虽然效果一样：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/9-5.4.2-3.2.3-1.png" alt=""></p>
<p>但由于subnav没有设置宽度，它自动继承父元素的宽度，占领了整个w(class)</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/10-5.4.2-3.2.3-2.png" alt="10"></p>
</blockquote>
<p>所以还是设置subnav的；</p>
</blockquote>
<p>3.3 a里面包含文字和span，span右浮动</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因为是在a里面，a在li里面，li已经设置好了padding；</p>
<p>所以完事；</p>
</blockquote>
<p>3.4 当鼠标经过a ，a里面的内容（文字和span）变蓝色</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="4">
<li><p>4号盒子版心内，右对齐  <strong>course</strong> 课程。</p>
<p>4.1 一浮全浮。如果subnav没有浮动，course就会被挤在下面；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/11-5.4.2-4-1.png" alt="11"></p>
<p>4.2 外边距合并，塌陷问题；</p>
<p><a href="https://www.cnblogs.com/nigori/p/11184303.html">https://www.cnblogs.com/nigori/p/11184303.html</a></p>
<p>不过，浮动的盒子是不会塌陷的；</p>
<p>只有普通文档流中块框的垂直外边距才会发生外边距合并。行内框、浮动框或绝对定位之间的外边距不会合并。<a href="https://www.cnblogs.com/shcrk/p/9311273.html">链接</a></p>
<hr>
<p>4.3 上面h2，下面div</p>
<p>4.3.2 .bd 分为2部分；</p>
<img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/12-5.4.3-4.3.2.png" alt="12" style="zoom:50%;" />

<p>上面用li；下面用<a></p>
<blockquote>
<p>li上h4，下P</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>若css<code>.bd .more</code>没有效果；</p>
<p>看是不是把a写在.bd的外面了；…</p>
</li>
</ol>
<h4 id="5-4-3-编程"><a href="#5-4-3-编程" class="headerlink" title="5.4.3 编程"></a>5.4.3 编程</h4><h5 id="1-html"><a href="#1-html" class="headerlink" title="1. html"></a>1. html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./3-css/css4.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1 头部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header w&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.1 logo --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/1-logo-h.png&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.2 nav_导航 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>职业规划<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.3 搜索_search --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;关键词&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.4 user --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/user-h.png&quot;</span> &gt;</span></span><br><span class="line">            li-youlail</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 头部结束 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. banner_横幅 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2.1 subnav --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;subnav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2.2 course --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;course&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的课程表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 5.4.2-4.3.2 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bd&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;more&quot;</span>&gt;</span>全部课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span>               </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. banner_横幅 end --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="2-css"><a href="#2-css" class="headerlink" title="2. css"></a>2. css</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 全局js */</span></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &lt;!-- 1.2 nav_导航 --&gt; */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="comment">/* a是行内元素没有高度宽度，转换成块级元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#0097fd</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0097fd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &lt;!-- 1.3 搜索_search --&gt; */</span></span><br><span class="line"><span class="selector-class">.search</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">412px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">345px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../<span class="number">2</span>-img/index4/fa-search2.png);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 2. banner */</span></span><br><span class="line"><span class="comment">/* 2-1 */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="comment">/* background-image: url(../2-img/index4/banner2.png);</span></span><br><span class="line"><span class="comment">    background-repeat: no-repeat;</span></span><br><span class="line"><span class="comment">    background-position: center; */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1c036c</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../<span class="number">2</span>-img/index4/banner2.png) no-repeat top center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="comment">/* 2-2.3 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="comment">/* 3.2.3 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 3.3 */</span></span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4 */</span></span><br><span class="line"><span class="selector-class">.course</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3 */</span></span><br><span class="line"><span class="selector-class">.course</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9bceea</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3.2 */</span></span><br><span class="line"><span class="selector-class">.bd</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4e4e4e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a5a5a5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-class">.more</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>; <span class="comment">/*&lt;a&gt;是行内元素没有高度宽度*/</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3.2 - :end*/</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="5-5-推荐小模块"><a href="#5-5-推荐小模块" class="headerlink" title="5.5 推荐小模块"></a>5.5 推荐小模块</h3><p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/13-5.5.png" alt="13"></p>
<ul>
<li><strong>复习点：</strong>  因为里面三个盒子都要垂直居中，我们利用 继承性，给 最大的盒子 一个垂直居中的代码就好了，还记得 那些 样式可以继承吗？？？ font-  line-  text- color</li>
</ul>
<ul>
<li><p>大盒子水平居中 goods  精品 ，注意此处有个盒子阴影</p>
<blockquote>
<p><a href="https://www.runoob.com/cssref/css3-pr-box-shadow.html">box-shadow</a>:</p>
<p>语法:box-shadow: h-shadow v-shadow blur spread color inset;</p>
<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em>h-shadow</em></td>
<td align="left">必需的。水平阴影的位置。允许负值</td>
</tr>
<tr>
<td align="left"><em>v-shadow</em></td>
<td align="left">必需的。垂直阴影的位置。允许负值</td>
</tr>
<tr>
<td align="left"><em>blur</em></td>
<td align="left">可选。模糊距离</td>
</tr>
<tr>
<td align="left"><em>spread</em></td>
<td align="left">可选。阴影的大小</td>
</tr>
<tr>
<td align="left"><em>color</em></td>
<td align="left">可选。阴影的颜色。在<a href="https://www.runoob.com/cssref/css_colors_legal.aspx">CSS颜色值</a>寻找颜色值的完整列表</td>
</tr>
<tr>
<td align="left">inset</td>
<td align="left">可选。从外层的阴影（开始时）改变阴影内侧阴影</td>
</tr>
</tbody></table>
</blockquote>
</li>
<li><p>1号盒子是标题 H3  左侧浮动</p>
</li>
<li><p>2号盒子 里面放链接  左侧浮动  goods-item    距离可以控制链接的 左右外边距（注意行内元素只给左右内外边距）</p>
<blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>css没效果？是不是把goods写成good了；</p>
</blockquote>
</li>
<li><p>3号盒子 右浮动 mod 修改</p>
</li>
</ul>
<h4 id="5-5-2-步骤"><a href="#5-5-2-步骤" class="headerlink" title="5.5.2 步骤"></a>5.5.2 步骤</h4><ol start="0">
<li><p>….（前面没有记录）</p>
</li>
<li><p>大盒子内边距；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/14-5.5.2.png" alt="14"></p>
<p>因为有width；padding需要减宽度；</p>
<p>这里用精品推荐和修改兴趣的外边距；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 精品推荐 */</span></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修改兴趣 */</span></span><br><span class="line"><span class="selector-class">.mod</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/15-5.5.2-2.png" alt="15"></p>
</li>
</ol>
<ol start="2">
<li><p>修改 精品推荐和修改兴趣 的 样式；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 精品推荐 */</span></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修改兴趣 */</span></span><br><span class="line"><span class="selector-class">.mod</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/16-5.5.2-3.png" alt="16"></p>
</li>
<li><p>中间：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/17-5.5.2-4.png" alt="17"></p>
<p>3.1 先要分开；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.2 然后与精品推荐 隔开；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<br />

<hr>
<h3 id="5-6-精品推荐大模块"><a href="#5-6-精品推荐大模块" class="headerlink" title="5.6 精品推荐大模块"></a>5.6 精品推荐大模块</h3><h4 id="5-6-1-words"><a href="#5-6-1-words" class="headerlink" title="5.6.1 words"></a>5.6.1 words</h4><ol>
<li><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=item&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/outside">outside</a></li>
</ol>
<hr>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/18-5.6-1.png" alt="18"></p>
<ul>
<li>1号盒子为最大的盒子 <strong>box</strong>  版心水平居中对齐</li>
<li>2号盒子为上面部分 <strong>box-hd</strong>  – 里面   左侧标题H3 左浮动   右侧 链接 a 右浮动</li>
<li>3号盒子为底下部分 <strong>box-bd</strong> — 里面是无序列表 有 10个 小li 组成</li>
<li>小li 外边距的问题， 这里有个小技巧。  给box-hd 宽度为 1215 就可以一行装开5个 li了</li>
<li>复习点：我们用到清除浮动，因为 box-hd 里面的盒子个数不一定是多少，所以我们就不给高度了，但是里面的盒子浮动会影响下面的布局，因此需要清除浮动。</li>
</ul>
<h4 id="5-6-2-步骤："><a href="#5-6-2-步骤：" class="headerlink" title="5.6.2 步骤："></a>5.6.2 步骤：</h4><ol>
<li><p>建立div，.box;</p>
</li>
<li><p>创建 .box-hd</p>
<p>2.1 写 <code>精品推荐</code> 与<code>查看全部</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box w&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-hd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>精品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.2 左，右；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-hd</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-hd</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.3 .box-hd高度45px；</p>
<p>2.4 <code>精品推荐</code>字号为20px；字体颜色#494949；</p>
<p>2.5  查看全部；字号12px；字体颜色#a5a5a5；</p>
<p>2.6 <code>查看全部</code>上外边距10px；浮动的盒子不考虑塌陷；右外边距30px；</p>
</li>
<li><p>box 分为上下，上为box-hd，下为box-bd；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12-html+css_introdictin-pink/19-5.6-2.png" alt="19"></p>
</li>
</ol>
<p>   3.1 建立box-bd;</p>
<p>   <code>&lt;div class=&quot;box-bd&quot;&gt;abc&lt;/div&gt;</code></p>
<p>   总体目前为：</p>
   <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box w&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-hd clearfix&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>精品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-bd&quot;</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ol start="4">
<li><p>box-bd里面由li组成；</p>
<p>4.1 每个li宽度228px；高度270px；</p>
<p>4.2 先给个背景颜色，方便看，后面再删除；</p>
<p>4.3 页面高度见底，给body设置高度3000px；3000多了，1500即可</p>
</li>
<li><p>有10个li；建立10个</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-bd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>每个li需要浮动，不然就是竖着一排；</p>
<p>li原本的外部显示类型为：</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/display-listitem">display-list_item</a></p>
<p>将这个元素的外部显示类型变为 block 盒，并将内部显示类型变为多个 list-item inline 盒。</p>
<p>单个值<code>list-item</code>将导致元素的行为类似于列表项。可以与<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type"><code>list-style-type</code></a>和一起使用<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-position"><code>list-style-position</code></a>。</p>
<p><code>list-item</code>也可以与任何<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display-outside">``</a>关键字和<code>flow</code>或<code>flow-root</code> <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display-inside">``</a>关键字组合。</p>
<p><strong>注意</strong>：在支持二值语法的浏览器中，如果未指定内部值，则默认为<code>flow</code>。如果未指定外部值，则主体框的外部显示类型为<code>block</code>。</p>
</li>
<li><p>每个li都有小缝隙15px；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/20-5.6-6-3.png" alt="20"></p>
<p>margin-right: 15px;</p>
</li>
<li><p>第五个与第十个不需要右外边距；以为要用children了；结果</p>
<p>7.1 因为右边是空白；</p>
<p>7.2 把li的ul修改足够宽，装5个盒子；</p>
</li>
<li><p>但是，我要用:nth-chlid();</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-child">MDN文档</a></p>
<p><strong><code>:nth-child(an+b)</code></strong> 这个 <a href="https://developer.mozilla.org/en-US/docs/CSS/Pseudo-classes">CSS 伪类</a>首先找到所有当前元素的兄弟元素，然后按照位置先后顺序从1开始排序，选择的结果为CSS伪类:nth-child括号中表达式（an+b）匹配到的元素集合（n=0，1，2，3…）。示例：</p>
<ul>
<li><code>0n+3</code> 或简单的 <code>3</code> 匹配第三个元素。</li>
<li><code>1n+0</code> 或简单的 <code>n</code> 匹配每个元素。（兼容性提醒：在 Android 浏览器 4.3 以下的版本 <code>n</code> 和 <code>1n</code> 的匹配方式不一致。<code>1n</code> 和 <code>1n+0</code> 是一致的，可根据喜好任选其一来使用。）</li>
<li><code>2n+0</code> 或简单的 <code>2n</code> 匹配位置为 2、4、6、8…的元素（n=0时，2n+0=0，第0个元素不存在，因为是从1开始排序)。你可以使用关键字 <strong><code>even</code></strong> 来替换此表达式。</li>
<li><code>2n+1</code> 匹配位置为 1、3、5、7…的元素。你可以使用关键字 <strong><code>odd</code></strong> 来替换此表达式。</li>
<li><code>3n+4</code> 匹配位置为 4、7、10、13…的元素。</li>
</ul>
<p><code>*a*</code> 和 <code>*b*</code> 都必须为整数，并且元素的第一个子元素的下标为 1。换言之就是，该伪类匹配所有下标在集合 { an + b; n = 0, 1, 2, …} 中的子元素。另外需要特别注意的是，<code>*an*</code> 必须写在 <code>*b*</code> 的前面，不能写成 <code>*b+an*</code> 的形式。</p>
</li>
</ol>
<ol start="9">
<li><p>6~8代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">       <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">228px</span>;</span><br><span class="line">       <span class="attribute">height</span>: <span class="number">270px</span>;</span><br><span class="line">       <span class="attribute">background-color</span>: pink;</span><br><span class="line">       <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5n)</span> &#123;</span><br><span class="line">       <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="10">
<li><p>.box-bd ul li下外边距15px；</p>
</li>
<li><p>到li里面了；li里面分为三部分；</p>
<img src="http://bucket-c70.test.upcdn.net/12/21-5.6.2_11-4.png" alt="21" style="zoom:80%;" />

<p>11-1. 先是 img；没用div；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是图片宽度233px，比li的228px大；</p>
<p>设置:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<pre><code>11-2. 

第二个部分，用h4，还是没用div；

左外边距25px；右20px；

字号14px；颜色#050505；

字体不加粗;font-weight: 400;

上下外边距20px；



11-3.

第三部分；div，.info ；

左外边距25px；右20px；

字号12px；颜色#999；

不过高级是另一个颜色

给高级加一个span标签；设置颜色#ff7c2d;</code></pre><ol start="12">
<li><p>去掉之前用来查看的背景颜色pink后；</p>
<p>发现，融入了一体；不分明；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/22-5.6.2_12-5.png" alt="22"></p>
<p>而视频里面，是分明的，总体背景颜色有可能不对劲，不是#fff；</p>
<p>截图捕捉后，颜色是#f1f5f7；在body这是背景颜色；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1500px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f5f7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<pre><code>分明；

![24](http://bucket-c70.test.upcdn.net/12/23-5.6.2.png)</code></pre><hr>
<h3 id="5-7-底部模块"><a href="#5-7-底部模块" class="headerlink" title="5.7 底部模块"></a>5.7 底部模块</h3><p>  <img src="http://bucket-c70.test.upcdn.net/12/24-5.7.png" alt="24"></p>
<ul>
<li>1号盒子通栏大盒子 底部 <strong>footer</strong>  给高度  底色是白色</li>
<li>2号盒子版心水平居中</li>
<li>3号盒子版权 <strong>copyright</strong>  左对齐 </li>
<li>4号盒子 链接组 <strong>links</strong>  右对齐</li>
</ul>
<h4 id="5-7-2-步骤；"><a href="#5-7-2-步骤；" class="headerlink" title="5.7.2 步骤；"></a>5.7.2 步骤；</h4><ol>
<li><p>准备大盒子.footer</p>
<p><code>&lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</code></p>
<p>高度415px；</p>
<p>用背景颜色pink观察模板；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">415px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>问题：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/25-5.7.png" alt="25"></p>
<p>div-footer跑到了上面去；</p>
<p>浮动；</p>
<p>box盒子里的子元素有浮动，box本身又没有高度height；</p>
<p>所以，其实box子元素的内容也没装在box盒子里，而是浮在上面，视觉假象；box高度是0</p>
<p>更多信息可以查看视频<a href="https://www.bilibili.com/video/BV14J4114768?p=172">链接</a>说的很好；</p>
<p>2.1 </p>
<p>那么就要清除浮动；</p>
<p>给浮动元素的父元素ul添加清除浮动；</p>
<p><code>&lt;ul class=&quot;clearfix&quot;&gt;</code></p>
<p>成功，有效；</p>
</li>
<li><p>建立模块2，添加.w</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>w上边距35px；</p>
<p>但是会塌陷；</p>
<p>用内上边距；这里w应该是没设置高度，所以没有撑大；</p>
<p>设置高度试试会不会撑大；</p>
<p>也没撑大高度本身；去css笔记那边看看padding撑大的信息；</p>
<p>好像是宽度会撑开，高度没具体说，大概是不会影响高度；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>建立模块3，div+class=”copyright”</p>
<p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=item&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/copyright">copyright-单词</a></p>
<p>左侧对齐，左浮动；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
   <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.copyright</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ol start="6">
<li><p>建立模块4</p>
<p><code>&lt;div class=&quot;links&quot;&gt;&lt;/div&gt;</code></p>
<p>右对齐；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.link</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="7">
<li><p>做模块3的内容；</p>
<p>浮动的盒子可以不给宽度，用内容撑；</p>
<p>7.1  logo；</p>
<p>7.2 文字P；</p>
<p>字号12px；颜色#666；</p>
<p>上外边距20，下外边距15px；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/1-logo-h.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>学成在线致力于普及中国最好的教育它与中国一流大学和机构合作提供在线课程。<span class="tag">&lt;<span class="name">br</span>&gt;</span> © 2017年XTCG Inc.保留所有权利。-沪ICP备15025210号             <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span>下载APP<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<p>   7.3 .app;</p>
<p>   <code>&lt;a href=&quot;#&quot; class=&quot;app&quot;&gt;下载APP&lt;/a&gt;</code></p>
<p>   宽度118px；高度33px；</p>
<p>   边框1px 实线 #00a4ff;</p>
<p>   没有效果：</p>
<p>   <img src="http://bucket-c70.test.upcdn.net/12/26-5.7.png" alt="26"></p>
<p>   因为<code>&lt;a&gt;</code>是行内元素，没有宽高；</p>
<p>   改为块级元素；</p>
<p>   <code>display: block;</code></p>
<p>   文字大小16px；文字水平居中；颜色#00a4ff;</p>
   <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">118px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<ol start="8">
<li><p>模块4的内容；</p>
<p>三个dr；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/27-5.7-8.png" alt="27"></p>
<p>不过我自己对dl没啥印象；….</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>关于学成网<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>管理团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>工作机会<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>客户服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>帮助<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>dt字号16px，颜色#333；</p>
<p>dd&gt;a,字号12px；颜色#333；</p>
<p>dt下外边距5px；</p>
<blockquote>
<p>dd&gt;a的写法似乎有点错误；</p>
<p>含义不是dd的子元素a；</p>
<table>
<thead>
<tr>
<th><a href="https://www.w3school.com.cn/cssref/selector_element.asp"><em>element</em></a></th>
<th>p</th>
<th>选择所有 <p> 元素。</th>
<th>1</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.w3school.com.cn/cssref/selector_element_comma.asp"><em>element</em>,<em>element</em></a></td>
<td>div,p</td>
<td>选择所有 <div> 元素和所有 <p> 元素。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/selector_element_element.asp"><em>element</em> <em>element</em></a></td>
<td>div p</td>
<td>选择 <div> 元素内部的所有 <p> 元素。</td>
<td>1</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/selector_element_gt.asp"><em>element</em>&gt;<em>element</em></a></td>
<td>div&gt;p</td>
<td>选择父元素为 <div> 元素的所有 <p> 元素。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.w3school.com.cn/cssref/selector_element_plus.asp"><em>element</em>+<em>element</em></a></td>
<td>div+p</td>
<td>选择紧接在 <div> 元素之后的所有 <p> 元素。</td>
<td>2</td>
</tr>
</tbody></table>
<p>不过含义差不多；</p>
<p>div p ；的写法，可以隔代；</p>
<p>比如 </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>而：div&gt;p应该是不能隔代的；</p>
</blockquote>
<p>8.2  3个dl；</p>
<p>复制3份；</p>
<blockquote>
<p>因为dl是块级元素；排在了一竖；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/28-5.7-8.2.png" alt="28"></p>
<p>使用浮动；</p>
</blockquote>
<p>左外边距100px；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.links</span> <span class="selector-tag">dl</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把背景颜色pink去掉；</p>
</li>
<li><p>个人操作：</p>
<p>注释掉body的高度1500px；</p>
<p>修改.footer的高度415px改为315px试试效果；</p>
<p>再减少50px试试；265px；</p>
<p>265px可以；</p>
</li>
</ol>
<h3 id="5-8-代码："><a href="#5-8-代码：" class="headerlink" title="5.8 代码："></a>5.8 代码：</h3><h4 id="5-8-1-html"><a href="#5-8-1-html" class="headerlink" title="5.8.1 html"></a>5.8.1 html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./3-css/css4.css&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1 头部 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header w&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.1 logo --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/1-logo-h.png&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.2 nav_导航 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>职业规划<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.3 搜索_search --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;关键词&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1.4 user --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/user-h.png&quot;</span> &gt;</span></span><br><span class="line">            li-youlail</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 头部结束 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. banner_横幅 start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2.1 subnav --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;subnav&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>后端开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>移动开发<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>人工智能<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>商业预测<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>云计算&amp;大数据<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>运维&amp;从测试<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>UI设计<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>产品<span class="tag">&lt;<span class="name">span</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2.2 course --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;course&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的课程表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 5.4.2-4.3.2 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bd&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">h4</span>&gt;</span>继续学习 程序语言设计<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span>&gt;</span>正在学习-使用对象<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;more&quot;</span>&gt;</span>全部课程<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span>               </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span>           </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. banner_横幅 end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 精品推荐模块-start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods w&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>精品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>jQuery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Html<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>TyoeScript<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>AXJX<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;mod&quot;</span>&gt;</span>修改兴趣<span class="tag">&lt;/<span class="name">a</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 精品推荐模块-end--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4. box核心内容-start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box w&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-hd clearfix&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>精品推荐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-bd&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;clearfix&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4. box核心内容-end --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 5. footer 模块制作 - start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/1-logo-h.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>学成在线致力于普及中国最好的教育它与中国一流大学和机构合作提供在线课程。<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    © 2017年XTCG Inc.保留所有权利。-沪ICP备15025210号<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span>下载APP<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;links&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>关于学成网<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>管理团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>工作机会<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>客户服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>帮助<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>关于学成网<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>管理团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>工作机会<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>客户服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>帮助<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>关于学成网<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>管理团队<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>工作机会<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>客户服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>帮助<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 5. footer 模块制作 - end --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-8-2-css"><a href="#5-8-2-css" class="headerlink" title="5.8.2 css"></a>5.8.2 css</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* height: 1500px; */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f5f7</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span>&#123;</span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 全局js */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &lt;!-- 1.2 nav_导航 --&gt; */</span></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="comment">/* a是行内元素没有高度宽度，转换成块级元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#0097fd</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0097fd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &lt;!-- 1.3 搜索_search --&gt; */</span></span><br><span class="line"><span class="selector-class">.search</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">412px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">345px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.search</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(../<span class="number">2</span>-img/index4/fa-search2.png);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 2. banner */</span></span><br><span class="line"><span class="comment">/* 2-1 */</span></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="comment">/* background-image: url(../2-img/index4/banner2.png);</span></span><br><span class="line"><span class="comment">    background-repeat: no-repeat;</span></span><br><span class="line"><span class="comment">    background-position: center; */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1c036c</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../<span class="number">2</span>-img/index4/banner2.png) no-repeat top center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="comment">/* 2-2.3 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="comment">/* 3.2.3 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 3.3 */</span></span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subnav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4 */</span></span><br><span class="line"><span class="selector-class">.course</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3 */</span></span><br><span class="line"><span class="selector-class">.course</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#9bceea</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3.2 */</span></span><br><span class="line"><span class="selector-class">.bd</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4e4e4e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a5a5a5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd</span> <span class="selector-class">.more</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>; <span class="comment">/*&lt;a&gt;是行内元素没有高度宽度*/</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5.4.2-4.3.2 - :end*/</span></span><br><span class="line"><span class="comment">/* 3. 精品推荐模块-start */</span></span><br><span class="line"><span class="selector-class">.goods</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 精品推荐 */</span></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>:left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修改兴趣 */</span></span><br><span class="line"><span class="selector-class">.mod</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 3. 精品推荐模块-end */</span></span><br><span class="line"><span class="comment">/* 4. box核心内容-start */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-hd</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-hd</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#494949</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-hd</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a5a5a5</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">270px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5n)</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7c2d</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 4. box核心内容-end */</span></span><br><span class="line"><span class="comment">/* 5. footer 模块制作 - start */</span></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">265px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">118px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">33px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00a4ff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links</span> <span class="selector-tag">dl</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links</span> <span class="selector-tag">dl</span> <span class="selector-tag">dt</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links</span> <span class="selector-tag">dl</span> <span class="selector-tag">dd</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 5. footer 模块制作 - end */</span></span><br></pre></td></tr></table></figure>




<hr>
<h2 id="6-定位"><a href="#6-定位" class="headerlink" title="6. 定位"></a>6. 定位</h2><h3 id="6-1-目标"><a href="#6-1-目标" class="headerlink" title="6.1 目标"></a>6.1 目标</h3><ul>
<li>能够说出 为什么要用定位</li>
<li>能够说出 定位的 4 种分类</li>
<li>能够说出 4 种定位各自的特点</li>
<li>能够说出 为什么常用子绝父相布局</li>
<li>能够写出 淘宝轮播图布局</li>
<li>能够说出 显示隐藏的 3 种方式以及区别</li>
</ul>
<h3 id="6-2-定位"><a href="#6-2-定位" class="headerlink" title="6.2 定位"></a>6.2 定位</h3><h4 id="6-2-1-为什么使用定位"><a href="#6-2-1-为什么使用定位" class="headerlink" title="6.2.1 为什么使用定位"></a>6.2.1 为什么使用定位</h4><blockquote>
<p>我们先来看一个效果，同时思考一下<strong>用标准流或浮动能否实现类似的效果</strong>？</p>
</blockquote>
<p><strong>场景1</strong>： 某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子.</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/29-6.2.1-1.gif" alt="29"></p>
<p><strong>场景2</strong>：当我们滚动窗口的时候，盒子是固定屏幕某个位置的。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/30-6.2.1-2.png" alt="30"></p>
<blockquote>
<p>结论<strong>：要实现以上效果，</strong>标准流 或 浮动都无法快速实现</p>
</blockquote>
<p>所以：</p>
<p>1.浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</p>
<p>2.定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</p>
<hr>
<h4 id="6-2-2-定位的组成"><a href="#6-2-2-定位的组成" class="headerlink" title="6.2.2 定位的组成"></a>6.2.2 定位的组成</h4><p><strong>定位</strong>：将盒子<strong>定</strong>在某一个位置，所以<strong>定位也是在摆放盒子， 按照定位的方式移动盒子</strong></p>
<p>定位也是用来布局的，它有两部分组成：</p>
<blockquote>
<p><strong>定位 = 定位模式 + 边偏移</strong>  </p>
</blockquote>
<p><strong>定位模式</strong> 用于指定一个元素在文档中的定位方式。<strong>边偏移</strong>则决定了该元素的最终位置。</p>
<hr>
<h5 id="1-边偏移（方位名词）"><a href="#1-边偏移（方位名词）" class="headerlink" title="1. 边偏移（方位名词）"></a>1. 边偏移（方位名词）</h5><p><strong>边偏移</strong> 就是定位的盒子移动到最终位置。有 top、bottom、left 和 right  4 个属性。</p>
<table>
<thead>
<tr>
<th>边偏移属性</th>
<th align="left">示例</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>top</code></td>
<td align="left"><code>top: 80px</code></td>
<td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td>
</tr>
<tr>
<td><code>bottom</code></td>
<td align="left"><code>bottom: 80px</code></td>
<td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td>
</tr>
<tr>
<td><code>left</code></td>
<td align="left"><code>left: 80px</code></td>
<td><strong>左侧</strong>偏移量，定义元素相对于其父元素<strong>左边线的距离</strong>。</td>
</tr>
<tr>
<td><code>right</code></td>
<td align="left"><code>right: 80px</code></td>
<td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong></td>
</tr>
</tbody></table>
<p>定位的盒子有了边偏移才有价值。 一般情况下，凡是有定位地方必定有边偏移。</p>
<hr>
<h5 id="2-定位模式-position"><a href="#2-定位模式-position" class="headerlink" title="2. 定位模式 (position)"></a>2. 定位模式 (position)</h5><p>在 CSS 中，通过 <code>position</code> 属性定义元素的<strong>定位模式</strong>，语法如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: 属性值; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>定位模式是有不同分类的，在不同情况下，我们用到不同的定位模式。</p>
<p>定位模式决定元素的定位方式 ，它通过 CSS 的 position 属性来设置，其值可以分为四个：</p>
<table>
<thead>
<tr>
<th>值</th>
<th align="center">语义</th>
</tr>
</thead>
<tbody><tr>
<td><code>static</code></td>
<td align="center"><strong>静态</strong>定位</td>
</tr>
<tr>
<td><code>relative</code></td>
<td align="center"><strong>相对</strong>定位</td>
</tr>
<tr>
<td><code>absolute</code></td>
<td align="center"><strong>绝对</strong>定位</td>
</tr>
<tr>
<td><code>fixed</code></td>
<td align="center"><strong>固定</strong>定位</td>
</tr>
</tbody></table>
<p> <img src="http://bucket-c70.test.upcdn.net/12/31-6.2.2.2.png" alt="31"></p>
<hr>
<h4 id="6-2-3-定位模式介绍"><a href="#6-2-3-定位模式介绍" class="headerlink" title="6.2.3 定位模式介绍"></a>6.2.3 定位模式介绍</h4><h5 id="1-静态定位-static-了解"><a href="#1-静态定位-static-了解" class="headerlink" title="1. 静态定位(static) - 了解"></a>1. 静态定位(static) - 了解</h5><ul>
<li><p><strong>静态定位</strong>是元素的<strong>默认</strong>定位方式，<strong>无定位的意思</strong>。它相当于 border 里面的none，静态定位static，不要定位的时候用。</p>
</li>
<li><p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: static; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>静态定位 按照标准流特性摆放位置，它没有边偏移。</p>
</li>
<li><p>静态定位在布局时我们几乎不用的 </p>
</li>
</ul>
<h5 id="2-相对定位-relative-重要"><a href="#2-相对定位-relative-重要" class="headerlink" title="2. 相对定位(relative) - 重要"></a>2. 相对定位(relative) - 重要</h5><ul>
<li><strong>相对定位</strong>是元素在移动位置的时候，是相对于它自己<strong>原来的位置</strong>来说的（自恋型）。</li>
<li>语法：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: relative; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>相对定位的特点：（务必记住）</p>
<ul>
<li><p>1.它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。</p>
</li>
<li><p>2.<strong>原来</strong>在标准流的<strong>位置</strong>继续占有，后面的盒子仍然以标准流的方式对待它。</p>
<p>因此，<strong>相对定位并没有脱标</strong>。它最典型的应用是给绝对定位当爹的。。。</p>
</li>
</ul>
</li>
<li><p>效果图：</p>
</li>
</ul>
<p><img src="http://bucket-c70.test.upcdn.net/12/32-6.2.3-2.png" alt="32"></p>
<ol start="3">
<li><p>代码练习</p>
</li>
<li><p>先建立html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: deeppink;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>把box1改为相对定位；</p>
<p>加 边偏移；上100px，左100px；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>相对原来的位置移动，原位置也继续占有；</p>
</li>
</ol>
<hr>
<h5 id="3-绝对定位-absolute（重要）"><a href="#3-绝对定位-absolute（重要）" class="headerlink" title="3. 绝对定位 absolute（重要）"></a>3. 绝对定位 absolute（重要）</h5><ul>
<li><p>绝对定位是元素在移动位置的时候，相对于祖先元素来说的。</p>
<p>语法：<code>选择器&#123; position: absolute;&#125;</code></p>
</li>
<li><p><strong>特点</strong>：</p>
<p>1.如果<strong>没有父级元素</strong>或者<strong>父级元素没有定位</strong>，则以浏览器为基准定位（Document 文档）。</p>
<blockquote>
<p>即使有父元素，父元素没定位还是以浏览器为基准定位</p>
</blockquote>
<p>2.如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置。</p>
<p>3.绝对定位<strong>不再占有原先的位置</strong>。所以绝对定位是脱离标准流的。（脱标）</p>
</li>
<li><p><strong>代码练习</strong>：</p>
<ol>
<li>左上角：</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.son</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>右上角：</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.son</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>左下角于右下角同理；</p>
<ol start="3">
<li>父级元素没定位，还是浏览器为基准；</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>如果父元素有定位，就能以父元素为基准：</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>如果父元素没有，祖元素有，就以祖元素为基准；</li>
</ol>
</li>
</ul>
<hr>
<h5 id="4-子绝父相"><a href="#4-子绝父相" class="headerlink" title="4. 子绝父相"></a>4. 子绝父相</h5><h6 id="4-1-讲解"><a href="#4-1-讲解" class="headerlink" title="4.1 讲解"></a>4.1 讲解</h6><p>弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。</p>
<p>这个<strong>“子绝父相”</strong>太重要了，是我们学习定位的<strong>口诀</strong>，是定位中最常用的一种方式这句话的意思是：<strong>子级是绝对定位的话，父级要用相对定位。</strong></p>
<p>绝对定位的基准是看父元素的，所以要和父级搭配一起来使用。</p>
<p>①子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。</p>
<p>②父盒子需要加定位限制子盒子在父盒子内显示。</p>
<p>③父盒子布局时，需要占有位置，因此父元素只能是相对定位。</p>
<p>这就是子绝父相的由来，所以<strong>相对定位经常用来作为绝对定位的父级</strong>。</p>
<p>总结： <strong>因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位</strong></p>
<p>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，<strong>子绝父绝</strong>也会遇到。</p>
<p><strong>疑问</strong>：为什么在布局时，<strong>子级元素</strong>使用<strong>绝对定位</strong>时，<strong>父级元素</strong>就要用<strong>相对定位</strong>呢？</p>
<p>观察下图，思考一下在布局时，<strong>左右两个方向的箭头图片</strong>以及<strong>父级盒子</strong>的定位方式。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/33-6.2.3-4.png" alt="33"></p>
<p><strong>分析</strong>：</p>
<ol>
<li><strong>方向箭头</strong>叠加在其他图片上方，应该使用<strong>绝对定位</strong>，因为<strong>绝对定位完全脱标</strong>，完全不占位置。</li>
<li><strong>父级盒子</strong>应该使用<strong>相对定位</strong>，因为<strong>相对定位不脱标</strong>，后续盒子仍然以标准流的方式对待它。<ul>
<li>如果父级盒子也使用<strong>绝对定位</strong>，会完全脱标，那么下方的<strong>广告盒子</strong>会上移，这显然不是我们想要的。</li>
</ul>
</li>
</ol>
<p><strong>结论</strong>：<strong>父级要占有位置，子级要任意摆放</strong>，这就是<strong>子绝父相</strong>的由来。</p>
<hr>
<h6 id="4-2-案例"><a href="#4-2-案例" class="headerlink" title="4.2 案例"></a>4.2 案例</h6><p>学成在线-hot new模块添加；</p>
<ul>
<li><p>步骤</p>
<ol>
<li>在li中先添加图片，先不管位置；</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/hot.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/pic.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>Think PHP 5.0 博客系统实战项目演练<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span>·1125人学习<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>问题：</li>
</ol>
<img src="http://bucket-c70.test.upcdn.net/12/34-6.2.3-4.2.png" style="zoom:80%;" />

<p>因为CSS：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>改为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="http://bucket-c70.test.upcdn.net/12/35.png" style="zoom:80%;" />



</li>
</ul>
<ol start="3">
<li><p>标准流，独占一行。使用绝对定位不占位置</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但，因为没给父元素设置相对定位；而父以上的元素都没有定位；</p>
<p>hot跑到了页面右上角；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/36.png" alt="36"></p>
</li>
<li><p>给父元素，li添加相对定位；</p>
</li>
<li><p>调整hot位置；<code>right: -4px;</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>最后复制到每个li中；over</p>
</li>
</ol>
<hr>
<h5 id="5-固定定位-fixed"><a href="#5-固定定位-fixed" class="headerlink" title="5. 固定定位(fixed)"></a>5. 固定定位(fixed)</h5><ul>
<li><p>览器页面滚动时元素的位置不会改变。</p>
</li>
<li><p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: fixed; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>固定定位的特点：（务必记住）：</p>
<p>1.以浏览器的可视窗口为参照点移动元素。</p>
<ul>
<li>跟父元素没有任何关系</li>
<li>不随滚动条滚动。</li>
</ul>
<p>2.固定定位<strong>不在占有原先的位置</strong>。</p>
</li>
<li><p>固定定位也是<strong>脱标</strong>的，其实<strong>固定定位也可以看做是一种特殊的绝对定位</strong>。（认死理型） </p>
<ul>
<li><strong>完全脱标</strong>—— 完全不占位置；</li>
<li>只认<strong>浏览器的可视窗口</strong> —— <code>浏览器可视窗口 + 边偏移属性</code> 来设置元素的位置；<ul>
<li>跟父元素没有任何关系；单独使用的</li>
<li>不随滚动条滚动。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h6 id="5-2-固定在盒子"><a href="#5-2-固定在盒子" class="headerlink" title="5.2 固定在盒子"></a>5.2 固定在盒子</h6><p>固定在版心，或者某盒子附近；</p>
<ol start="0">
<li><p>例如右侧位置。</p>
</li>
<li><p>让固定定位的盒子left：50%。走到浏览器可视区的一半的位置；</p>
</li>
<li><p>让固定定位的盒子 margin-left: 版心宽度的一半距离。  多走 版心宽度的一半位置</p>
<p>就可以让固定定位的盒子<strong>贴着版心右侧对齐</strong>了</p>
<img src="http://bucket-c70.test.upcdn.net/12/37.png" alt="37" style="zoom:50%;" />

<img src="http://bucket-c70.test.upcdn.net/12/38.png" alt="38" style="zoom:67%;" />

<p>案例效果：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/39.png" alt="39"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 1400px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.fixed</span> &#123;</span></span><br><span class="line">            position: fixed;</span><br><span class="line"><span class="css">            <span class="comment">/* 1. 走浏览器宽度的一半 */</span></span></span><br><span class="line">            left: 50%;</span><br><span class="line"><span class="css">            <span class="comment">/* 2. 利用margin 走版心盒子宽度的一半距离 */</span></span></span><br><span class="line">            margin-left: 405px;</span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span>版心盒子 800像素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h5 id="6-粘性定位-sticky"><a href="#6-粘性定位-sticky" class="headerlink" title="6. 粘性定位(sticky)"></a>6. 粘性定位(sticky)</h5><ul>
<li><a href="https://www.bilibili.com/video/BV14J4114768?p=232">视频讲解链接</a></li>
</ul>
<ul>
<li><p><strong>粘性定位</strong>可以被认为是相对定位和固定定位的混合。 Sticky  粘性的 </p>
</li>
<li><p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: sticky; </span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>粘性定位的特点：</p>
<p>1.以浏览器的可视窗口为参照点移动元素（固定定位特点）</p>
<p>2.粘性定位占有原先的位置（相对定位特点）</p>
<p>3.必须添加 top 、left、right、bottom <strong>其中一个</strong>才有效</p>
<p>跟页面滚动搭配使用。 兼容性较差，IE 不支持。</p>
</li>
</ul>
<h6 id="6-2-案例"><a href="#6-2-案例" class="headerlink" title="6.2 案例"></a>6.2 案例</h6><ol>
<li><p>建立基本html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            height: 3000px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>我是导航栏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置粘性定位</p>
<p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=sticky&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/sticky">sticky-百度翻译</a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: sticky;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>必须添加 top 、left、right、bottom <strong>其中一个</strong>才有效</p>
<p>设置top：0；</p>
<ul>
<li><p>含义：</p>
<p>当top=0px的时候就成为粘性定位；</p>
<p>本身有margin-top的100px；</p>
</li>
</ul>
</li>
</ol>
<hr>
<h5 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h5><table>
<thead>
<tr>
<th><strong>定位模式</strong></th>
<th><strong>是否脱标</strong></th>
<th><strong>移动位置</strong></th>
<th><strong>是否常用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>static   静态定位</td>
<td>否</td>
<td>不能使用边偏移</td>
<td>很少</td>
</tr>
<tr>
<td><strong>relative 相对定位</strong></td>
<td><strong>否 (占有位置)</strong></td>
<td><strong>相对于自身位置移动</strong></td>
<td><strong>基本单独使用</strong></td>
</tr>
<tr>
<td><strong>absolute绝对定位</strong></td>
<td><strong>是（不占有位置）</strong></td>
<td><strong>带有定位的父级</strong></td>
<td><strong>要和定位父级元素搭配使用</strong></td>
</tr>
<tr>
<td><strong>fixed 固定定位</strong></td>
<td><strong>是（不占有位置）</strong></td>
<td><strong>浏览器可视区</strong></td>
<td><strong>单独使用，不需要父级</strong></td>
</tr>
<tr>
<td>sticky 粘性定位</td>
<td>否   (占有位置)</td>
<td>浏览器可视区</td>
<td>当前阶段少(其实不少)</td>
</tr>
</tbody></table>
<ul>
<li><p>一定记住 相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。</p>
</li>
<li><p>学习定位重点学会子绝父相。</p>
</li>
<li><p>注意：</p>
</li>
</ul>
<ol>
<li><strong>边偏移</strong>需要和<strong>定位模式</strong>联合使用，<strong>单独使用无效</strong>；</li>
<li><code>top</code> 和 <code>bottom</code> 不要同时使用；</li>
<li><code>left</code> 和 <code>right</code> 不要同时使用。</li>
</ol>
<hr>
<h4 id="6-2-4-堆叠顺序（z-index）"><a href="#6-2-4-堆叠顺序（z-index）" class="headerlink" title="6.2.4 堆叠顺序（z-index）"></a>6.2.4 堆叠顺序（z-index）</h4><ul>
<li><p>在使用<strong>定位</strong>布局时，可能会<strong>出现盒子重叠的情况</strong>。此时，可以使用 <strong>z-index</strong> 来控制盒子的前后次序 (z轴)</p>
</li>
<li><p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p><code>z-index</code> 的特性如下：</p>
<ol>
<li><strong>属性值</strong>：<strong>正整数</strong>、<strong>负整数</strong>或 <strong>0</strong>，默认值是 0，数值越大，盒子越靠上；    </li>
<li>如果<strong>属性值相同</strong>，则按照书写顺序，<strong>后来居上</strong>；</li>
<li>数字后面<strong>不能加单位</strong>。</li>
</ol>
<p><strong>注意</strong>：<code>z-index</code> 只能应用于<strong>相对定位</strong>、<strong>绝对定位</strong>和<strong>固定定位</strong>的元素，其他<strong>标准流</strong>、<strong>浮动</strong>和<strong>静态定位</strong>无效。</p>
</li>
<li><p>应用 <code>z-index</code> 层叠等级属性可以<strong>调整盒子的堆叠顺序</strong>。如下图所示：</p>
</li>
</ul>
<p><img src="http://bucket-c70.test.upcdn.net/12/40-6.2.4-1.png" alt="40"></p>
<h5 id="2-实验"><a href="#2-实验" class="headerlink" title="2. 实验"></a>2. 实验</h5><p>1.建立基本html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.给css</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a1</span> &#123;</span></span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a2</span> &#123;</span></span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.a3</span> &#123;</span></span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box a3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.此时是正常的排列；</p>
<img src="http://bucket-c70.test.upcdn.net/12/41.png" style="zoom:50%;" />

<p>4.给.box添加觉得定位；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>特点：后来居上；蓝色在最上面；</p>
<p>5.谁想最上面，就把z-index设置成最大；<del>默认是0</del>；</p>
<p>6.默认不是0；默认是auto；而auto；</p>
<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">auto</td>
<td align="left">默认。堆叠顺序与父元素相等。</td>
</tr>
<tr>
<td align="left"><em>number</em></td>
<td align="left">设置元素的堆叠顺序。</td>
</tr>
<tr>
<td align="left">inherit</td>
<td align="left">规定应该从父元素继承 z-index 属性的值。</td>
</tr>
</tbody></table>
<p>….全都没有写z-index，那z-index是多少？</p>
<p>在谷歌浏览器F12看看，看能看到不；</p>
<p>看不到，我也不知道默认是多少….</p>
<hr>
<h4 id="6-2-5-定位的拓展"><a href="#6-2-5-定位的拓展" class="headerlink" title="6.2.5 定位的拓展"></a>6.2.5 定位的拓展</h4><h5 id="1-绝对定位居中"><a href="#1-绝对定位居中" class="headerlink" title="1. 绝对定位居中"></a>1. 绝对定位居中</h5><p><strong>注意</strong>：加了<strong>绝对定位/固定定位的盒子</strong>不能通过设置 <code>margin: auto</code> 设置<strong>水平居中</strong>。</p>
<p>但是可以通过以下计算方法实现水平和垂直居中，可以按照下图的方法：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/42.png" alt=""></p>
<ol>
<li><code>left: 50%;</code>：让<strong>盒子的左侧</strong>移动到<strong>父级元素的水平中心位置</strong>；</li>
<li><code>margin-left: -100px;</code>：让盒子<strong>向左</strong>移动<strong>自身宽度的一半</strong>。</li>
</ol>
<h6 id="1-2-盒子水平垂直居中"><a href="#1-2-盒子水平垂直居中" class="headerlink" title="1.2.盒子水平垂直居中"></a><strong>1.2.盒子水平垂直居中</strong></h6><ol start="3">
<li><code>top:50%</code></li>
<li>margin-top: -50px; (高度的一半)</li>
</ol>
<h6 id="1-3-方法二-transform-translate-50-50"><a href="#1-3-方法二-transform-translate-50-50" class="headerlink" title="1.3.方法二-transform: translate(-50%, -50%);"></a><strong>1.3.方法二-transform: translate(-50%, -50%);</strong></h6><p>绝对定位，这个方法不需要子元素固定宽高，所以不再需要size类了，HTML代码如下</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;wp&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;box&quot;</span>&gt;<span class="number">123123</span>&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>修复绝对定位的问题，还可以使用css3新增的transform，transform的translate属性也可以设置百分比，其是相对于自身的宽和高，所以可以讲translate设置为-50%，就可以做到居中了，代码如下</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 此处引用上面的公共代码 */</span></span><br><span class="line"><span class="comment">/* 此处引用上面的公共代码 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 定位代码 */</span></span><br><span class="line"><span class="selector-class">.wp</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方法兼容性依赖translate2d的兼容性</p>
<p>出至：<a href="https://www.jianshu.com/p/907f99004c3e">https://www.jianshu.com/p/907f99004c3e</a></p>
<p>里面还有9种方法；</p>
<p>笔记：<a href="../../css/4-css_private_note/#6-水平垂直居中">4-css_个人笔记-6. 水平垂直居中</a>；有更多解析；</p>
<blockquote>
<p>这里的跳转：../4-css_private_note/#6-水平垂直居中</p>
<p>没有效果；</p>
<p>使用：../../css/4-css_private_note/#6-水平垂直居中</p>
<p>才有效；</p>
</blockquote>
<p>当初：</p>
<ol>
<li><p>先../4-css_private_note/#6-水平垂直居中</p>
<p>结果跳转的是：</p>
<p><a href="http://localhost:4000/html-css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/html-css/4-css_private_note/#6-水平垂直居中</a></p>
<p>而正确链接是：</p>
<p><a href="http://localhost:4000/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/css/4-css_private_note/#6-水平垂直居中</a></p>
</li>
<li><p>这让我发现了分类；</p>
<p>因为12.md本身分类于：html_css (url里面变成了html-css)</p>
</li>
<li><p>原来上次1-typescript_introduction-10.项目：下棋游戏；是蒙对的</p>
<p>他们正好都是分类于typescript</p>
</li>
<li><p>怎么办了？既然是在css下面，那么这样行吗？</p>
<p>../css/4-css_private_note/#6-水平垂直居中</p>
<p>跳转的是：</p>
<p><a href="http://localhost:4000/html-css/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/html-css/css/4-css_private_note/#6-水平垂直居中</a></p>
<p>还是在html-css下面，仍然是错误链接；</p>
</li>
<li><p>怎么办？</p>
<p>没有概念，没有原理；只有实验；</p>
<p>我突发奇想，百度相对连接；</p>
<p><a href="https://blog.csdn.net/LIU_YANZHAO/article/details/78895096?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">https://blog.csdn.net/LIU_YANZHAO/article/details/78895096?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param</a></p>
<p>找到../../</p>
<p>../../ 代表上两级目录</p>
<p>实验链接：</p>
<p>../../4-css_private_note/#6-水平垂直居中</p>
<p>链接是：<a href="http://localhost:4000/4-css_private_note/#6-水平垂直居中">http://localhost:4000/4-css_private_note/#6-水平垂直居中</a></p>
<p>没有css；</p>
</li>
<li><p>我一度迷茫；</p>
<p>没有发现，这次摆脱了html-css/的束缚；</p>
<p>过了一会，我发现了；</p>
</li>
<li><p>于是，我加上css/实验；</p>
<p>实验链接为：../../css/4-css_private_note/#6-水平垂直居中</p>
<p>成功；</p>
<p>跳转到了：</p>
<p><a href="http://localhost:4000/css/4-css_private_note/#6-水平垂直居中">http://localhost:4000/css/4-css_private_note/#6-水平垂直居中</a></p>
<hr>
</li>
</ol>
<br>

<h6 id="1-4-案例-学成在线的user"><a href="#1-4-案例-学成在线的user" class="headerlink" title="1.4 案例-学成在线的user"></a>1.4 案例-学成在线的user</h6><p>步骤：</p>
<ol>
<li><p>找到位置；.user</p>
</li>
<li><p>查看代码；</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/index4/user-h.png&quot;</span> &gt;</span></span><br><span class="line">    li-youlail</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>建立新的css，控制img；</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.user</span> <span class="selector-tag">img</span> &#123;&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>使用1.3方法二；</p>
<p>4.1 在.user设置相对定位；</p>
<p>4.2  在.user img {}使用：</p>
</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br><span class="line"><span class="selector-tag">top</span>: 50%;</span><br><span class="line"><span class="selector-tag">left</span>: 50%;</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(<span class="selector-tag">-50</span>%, <span class="selector-tag">-50</span>%);</span><br></pre></td></tr></table></figure>
<ol start="5">
<li><p>出错；</p>
<p>5.1 图片与字符串重叠；</p>
</li>
<li><p>寻找原因；查看6.2.3.3</p>
<p>找到：绝对定位不会保留位置。</p>
</li>
</ol>
<p><strong>7. 这个时候，就要理解代码，灵活使用；</strong></p>
<p>​    7.1 相对定位不会脱标</p>
<p>​    7.2 相对定位不需要父元素有定位属性支持。删除.user的定位；</p>
<p>​    7.3 设置.user img{}</p>
<ol start="8">
<li><p>成功；代码如下：</p>
<p>8.1 .user没变化；</p>
</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.user</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.user</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="http://bucket-c70.test.upcdn.net/12/44-6.2.5-1.4.png" alt="44"></p>
<br />

<hr>
<h5 id="2-定位与display的关系"><a href="#2-定位与display的关系" class="headerlink" title="2. 定位与display的关系"></a>2. 定位与display的关系</h5><p>绝对定位和固定定位也和浮动类似。</p>
<p>1.行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</p>
<p>2.块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</p>
<p>2.1 原本块级元素的宽度是父元素的100%，给了相应的定位，宽度只有内容大小了</p>
<p>前面我们讲过， display 是 显示模式， 可以改变显示模式有以下方式:</p>
<ul>
<li>可以用inline-block  转换为行内块</li>
<li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li>
<li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li>
</ul>
<p>所以说， 一个行内的盒子，如果加了<strong>浮动</strong>、<strong>固定定位</strong>和<strong>绝对定位</strong>，不用转换，就可以给这个盒子直接设置宽度和高度等。</p>
<hr>
<h5 id="3-脱标的盒子不会触发外边距塌陷"><a href="#3-脱标的盒子不会触发外边距塌陷" class="headerlink" title="3. 脱标的盒子不会触发外边距塌陷"></a>3. 脱标的盒子不会触发外边距塌陷</h5><p>浮动元素、<strong>绝对定位(固定定位）</strong>的元素都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的）</p>
<p>也就是说，我们给盒子改为了浮动或者定位，就不会有垂直<strong>外边距合并的问题</strong>了。</p>
<hr>
<h5 id="4-绝对定位（固定定位）会完全压住盒子"><a href="#4-绝对定位（固定定位）会完全压住盒子" class="headerlink" title="4. 绝对定位（固定定位）会完全压住盒子"></a>4. 绝对定位（固定定位）会完全压住盒子</h5><ul>
<li><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</p>
<p>1.案例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>阁下何不同风起，扶摇直上九万里<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.说明：</p>
<p>2.1 box因浮动压住了盒子；</p>
<p>2.2 但没有压住盒子中的内容，把内容挤了出来；</p>
<img src="http://bucket-c70.test.upcdn.net/12/45.png" alt="45" style="zoom:80%;" />



</li>
</ul>
<ul>
<li><p>但是绝对定位（固定定位） 会压住下面标准流所有的内容。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/46.png" alt="46"></p>
</li>
</ul>
<ul>
<li><p>为什么浮动不会压住文字？</p>
<p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素</p>
</li>
</ul>
<hr>
<h3 id="6-3-综合案例"><a href="#6-3-综合案例" class="headerlink" title="6.3 综合案例"></a>6.3 综合案例</h3><h4 id="6-3-1-预览图"><a href="#6-3-1-预览图" class="headerlink" title="6.3.1 预览图"></a>6.3.1 预览图</h4><img src="http://bucket-c70.test.upcdn.net/12/47.png" alt="47" style="zoom:67%;" />

<h4 id="6-3-2-布局分析"><a href="#6-3-2-布局分析" class="headerlink" title="6.3.2 布局分析"></a>6.3.2 布局分析</h4><p><img src="http://bucket-c70.test.upcdn.net/12/48.png" alt="48"></p>
<h4 id="6-3-3-思路"><a href="#6-3-3-思路" class="headerlink" title="6.3.3 思路"></a>6.3.3 思路</h4><ol>
<li><p>大盒子我们类名为：  tb-promo      淘宝广告</p>
</li>
<li><p>里面先放一张图片。</p>
</li>
<li><p>左右两个按钮 用链接就好了。   左箭头 prev    右箭头  next   </p>
<p>​    左按钮样式（border-radius：左上，右上，右下，左下），</p>
<p>​    右按钮定位，提取左右按钮共同的样式代码（并集选择器）</p>
</li>
<li><p>底侧小圆点ul 继续做。 类名为 promo-nav     </p>
<p>​    中间长方形椭圆 ul的定位（水平居中，离底部15px）  </p>
<p>​    长方形需要五个小圆点，ul无序列表，li浮动，椭圆中小圆点的样式</p>
</li>
</ol>
<h4 id="6-3-4-知识点："><a href="#6-3-4-知识点：" class="headerlink" title="6.3.4 知识点："></a>6.3.4 知识点：</h4><h5 id="1-圆角矩形设置4个角"><a href="#1-圆角矩形设置4个角" class="headerlink" title="1. 圆角矩形设置4个角"></a>1. 圆角矩形设置4个角</h5><p>圆角矩形可以为4个角分别设置圆度， 但是是有顺序的</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">border-<span class="built_in">top</span>-<span class="built_in">left</span>-radius:<span class="number">20</span>px;</span><br><span class="line">border-<span class="built_in">top</span>-<span class="built_in">right</span>-radius:<span class="number">20</span>px;</span><br><span class="line">border-<span class="built_in">bottom</span>-<span class="built_in">right</span>-radius:<span class="number">20</span>px;</span><br><span class="line">border-<span class="built_in">bottom</span>-<span class="built_in">left</span>-radius:<span class="number">20</span>px;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如果4个角，数值相同</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>: 15<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>里面数值不同，我们也可以按照简写的形式，具体格式如下:</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>: 左上角 右上角  右下角  左下角;</span><br></pre></td></tr></table></figure>

<p>还是遵循的顺时针。</p>
<h5 id="2-圆角边框"><a href="#2-圆角边框" class="headerlink" title="2. 圆角边框"></a>2. 圆角边框</h5><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p>
<p>border-radius 属性用于设置元素的外边框圆角。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/50.png" alt="50"></p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span><span class="selector-pseudo">:length</span>;    </span><br></pre></td></tr></table></figure>

<ul>
<li>参数值可以为数值或百分比的形式</li>
<li>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li>
<li>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</li>
<li>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</li>
<li>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</li>
<li>如果是正方形；border-radius: 50%是圆形</li>
</ul>
<h4 id="6-3-5-步骤"><a href="#6-3-5-步骤" class="headerlink" title="6.3.5 步骤"></a>6.3.5 步骤</h4><p>0.word</p>
<p><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/promo">promo</a></p>
<p>1.建立html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tb-promo</span> &#123;</span></span><br><span class="line">            width: 520px;</span><br><span class="line">            height: 280px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.加入图片</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/2-tb/tb.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.2 设置css，即使图片大一点也没问题（不知道小一点能放大吗？）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tb-promo</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">520px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.左箭头</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/2-tb/tb.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 左侧箭头 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3.1 宽度20px；高度30px；</p>
<p>3.2 绝对定位；垂直居中；</p>
<blockquote>
<p>刚开始绝对定位时，没有边偏移是没有效果的；</p>
</blockquote>
<p>3.3 父元素相对定位；</p>
<p>3.4 背景颜色 rgba(0,0,0, 0.3);</p>
<p>3.5 内容水平垂直居中，颜色#fff；</p>
<p>3.6 右上角，右下角，圆弧</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.prev</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.右箭头；</p>
<p>4.1 复制左箭头，修改得；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.两者代码重复多，且代码本身多，合并</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.prev</span>, <span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.prev</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.1 小注意：</p>
<ul>
<li><p>如果一个盒子定位时，既有left，也有right。</p>
<ul>
<li>则默认left；</li>
</ul>
</li>
<li><p>既有top和bottom</p>
<ul>
<li>则top；</li>
</ul>
</li>
<li><p>类之间有逗号，不然注入不了css；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/51.png" alt="51"></p>
<p>网页那边：</p>
<img src="http://bucket-c70.test.upcdn.net/12/52.png" style="zoom:80%;" />



</li>
</ul>
<p>6.下面的小圆点；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/49-6.3.5.6.png" alt="49"></p>
<p>6.1 创建外形.promo-nav，用ul li 做；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;promo-nav&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>6.2 css：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.promo-nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>6.3 小圆点；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;promo-nav&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;selected&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.promo-nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果是正方形；border-radius: 50%是圆形</p>
<hr>
<h4 id="6-3-6-代码"><a href="#6-3-6-代码" class="headerlink" title="6.3.6 代码"></a>6.3.6 代码</h4><p>1.html+css：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tb-promo</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 520px;</span><br><span class="line">            height: 280px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tb-promo</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            width: 520px;</span><br><span class="line">            height: 280px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.prev</span>, <span class="selector-class">.next</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="comment">/* 绝对定位垂直居中 */</span></span></span><br><span class="line">            top: 50%;</span><br><span class="line">            transform: translateY(-50%);</span><br><span class="line"><span class="css">            <span class="comment">/* 加了绝对定位或固定定位的盒子可以直接设置高度宽度 */</span></span></span><br><span class="line">            width: 20px;</span><br><span class="line">            height: 30px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0, 0<span class="selector-class">.3</span>);</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 30px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.prev</span> &#123;</span></span><br><span class="line">            border-radius: 0 15px 15px 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line">            right: 0;</span><br><span class="line">            border-radius: 15px 0 0 15px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.promo-nav</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            bottom: 10px;</span><br><span class="line">            left: 50%;</span><br><span class="line">            transform: translateX(-50%);</span><br><span class="line">            width: 70px;</span><br><span class="line">            height: 13px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(255,255,255, 0<span class="selector-class">.3</span>);</span></span><br><span class="line">            border-radius: 7px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.promo-nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 8px;</span><br><span class="line">            height: 8px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            margin: 3px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 不要忘记权重问题 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.promo-nav</span> <span class="selector-class">.selected</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ff5000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/2-tb/tb.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 右箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span> <span class="symbol">&amp;gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小圆点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;promo-nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;selected&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="6-4-网页布局总结"><a href="#6-4-网页布局总结" class="headerlink" title="6.4 网页布局总结"></a>6.4 网页布局总结</h3><p>通过盒子模型，清楚知道大部分html标签是一个盒子。</p>
<p>通过CSS浮动、定位 可以让每个盒子排列成为网页。</p>
<p>一个完整的网页，是标准流、浮动、定位一起完成布局的，每个都有自己的专门用法。</p>
<h4 id="6-4-1-标准流"><a href="#6-4-1-标准流" class="headerlink" title="6.4.1 标准流"></a>6.4.1 标准流</h4><p>可以让盒子上下排列或者左右排列，<strong>垂直的块级盒子显示就用标准流布局</strong>。</p>
<h4 id="6-4-2-浮动"><a href="#6-4-2-浮动" class="headerlink" title="6.4.2 浮动"></a>6.4.2 浮动</h4><p>可以让多个块级元素一行显示或者左右对齐盒子，<strong>多个块级盒子水平显示就用浮动布局</strong></p>
<h4 id="6-4-3-定位"><a href="#6-4-3-定位" class="headerlink" title="6.4.3 定位"></a>6.4.3 定位</h4><p>定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。<strong>如果元素自由在某个盒子内移动就用定位布局。</strong></p>
<hr>
<h2 id="7-元素的显示与隐藏"><a href="#7-元素的显示与隐藏" class="headerlink" title="7. 元素的显示与隐藏"></a>7. 元素的显示与隐藏</h2><ul>
<li><p>目的（本质）</p>
<p>​    让一个元素在页面中消失或者显示出来</p>
</li>
<li><p>场景</p>
<p>​    类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现</p>
</li>
</ul>
<h3 id="7-1-display-显示（重点）"><a href="#7-1-display-显示（重点）" class="headerlink" title="7.1 display 显示（重点）"></a>7.1 display 显示（重点）</h3><ul>
<li><p>display 设置或检索对象是否及如何显示。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">display</span>: none 隐藏对象</span><br><span class="line"></span><br><span class="line">display：block 除了转换为块级元素之外，同时还有显示元素的意思。</span><br></pre></td></tr></table></figure>
</li>
<li><p>特点： display 隐藏元素后，<strong>不再占</strong>有原来的位置。</p>
</li>
<li><p>后面应用及其广泛，搭配 JS 可以做很多的网页特效。实际开发场景：</p>
<blockquote>
<p>配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</p>
</blockquote>
</li>
</ul>
<img src="http://bucket-c70.test.upcdn.net/12/53.png" alt="53" style="zoom:80%;" />

<h3 id="7-2-visibility-可见性-（了解）"><a href="#7-2-visibility-可见性-（了解）" class="headerlink" title="7.2. visibility 可见性 （了解）"></a>7.2. visibility 可见性 （了解）</h3><ul>
<li><p>visibility 属性用于指定一个元素应可见还是隐藏。</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">visibility</span>：visible ; 　元素可视</span><br><span class="line"></span><br><span class="line"><span class="attribute">visibility</span>：hidden; 　  元素隐藏</span><br></pre></td></tr></table></figure>
</li>
<li><p>特点：<strong>visibility 隐藏元素后，继续占有原来的位置</strong>。（停职留薪）</p>
</li>
</ul>
<ul>
<li><p>如果隐藏元素想要原来位置， 就用 visibility：hidden</p>
</li>
<li><p>如果隐藏元素不想要原来位置， 就用 display：none  (用处更多 重点）</p>
</li>
</ul>
<img src="http://bucket-c70.test.upcdn.net/12/54-visibility.png" alt="54" style="zoom:80%;" />

<h3 id="7-3-overflow-溢出（重点）"><a href="#7-3-overflow-溢出（重点）" class="headerlink" title="7.3. overflow 溢出（重点）"></a>7.3. overflow 溢出（重点）</h3><ul>
<li>overflow 属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度） 时，会发生什么。</li>
</ul>
<table>
<thead>
<tr>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><strong>visible</strong></td>
<td>不剪切内容也不添加滚动条</td>
</tr>
<tr>
<td><strong>hidden</strong></td>
<td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td>
</tr>
<tr>
<td><strong>scroll</strong></td>
<td>不管超出内容否，总是显示滚动条</td>
</tr>
<tr>
<td><strong>auto</strong></td>
<td>超出自动显示滚动条，不超出不显示滚动条</td>
</tr>
</tbody></table>
<ul>
<li>一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。</li>
<li>但是如果有定位的盒子， 请慎用overflow:hidden  因为它会隐藏多余的部分。</li>
</ul>
<p><img src="http://bucket-c70.test.upcdn.net/12/55-overflow.png" alt="55"></p>
<ul>
<li>实际开发场景：</li>
</ul>
<ol>
<li>清除浮动</li>
<li>隐藏超出内容，隐藏掉,  不允许内容超过父盒子。</li>
</ol>
<hr>
<h3 id="7-4-案例"><a href="#7-4-案例" class="headerlink" title="7.4 案例"></a>7.4 案例</h3><h4 id="7-4-1-效果图"><a href="#7-4-1-效果图" class="headerlink" title="7.4.1 效果图"></a>7.4.1 效果图</h4><h4 id="7-4-2-案例目标"><a href="#7-4-2-案例目标" class="headerlink" title="7.4.2 案例目标"></a>7.4.2 案例目标</h4><ol>
<li>练习元素的显示与隐藏</li>
<li>练习元素的定位</li>
</ol>
<h4 id="7-4-3-核心原理"><a href="#7-4-3-核心原理" class="headerlink" title="7.4.3 核心原理"></a>7.4.3 核心原理</h4><p>原先半透明的黑色遮罩看不见， 鼠标经过 大盒子，就显示出来。</p>
<p>遮罩的盒子不占有位置， 就需要用绝对定位 和 display  配合使用。</p>
<h4 id="7-4-4-步骤"><a href="#7-4-4-步骤" class="headerlink" title="7.4.4 步骤"></a>7.4.4 步骤</h4><p>1.创建盒子，建立基本html</p>
<p>类名：tudou</p>
<p>宽444px，高320px，背景颜色pink用来观测盒子；</p>
<p>盒子居中：上下100px，左右auto；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>隐藏练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.tudou</span> &#123;</span></span><br><span class="line">            width: 444px;</span><br><span class="line">            height: 320px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.图片大了，设置imgcss，width:100%,height:100%;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tudou</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.建立纱幕的盒子</p>
<p>3.1 类名：mask；<br>    mask<br>    英 [mɑːsk]   美 [mæsk]<br>    n.面具;面罩;假面具;护肤膜;面膜<br>    v.掩饰;掩藏</p>
<p>3.2 高度宽度100%；背景颜色：rgba(0,0,0, 0.3);</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>4.盒子是标准流，把图片挤了下去</p>
<p>4.1 绝对定位，边偏移top：0，left：0</p>
<p>4.2 父元素，相对定位；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tudou</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">444px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">320px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.添加纱幕中央播放按钮图片</p>
<p>5.1这里我们在background里面添加；</p>
<p>background: url;</p>
<p>5.2 图片重复，堆满了盒子；</p>
<p>no-repeat;</p>
<p>5.3 垂直居中；</p>
<p>在这里面，一个center就可以垂直居中，也是在bg里面写的好处；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">0.3</span>) <span class="built_in">url</span>(./<span class="number">2</span>-img/arr.png) no-repeat center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>6.隐藏mask；</p>
<p>6.1 隐藏且不保留位置，选在display；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>7.显示mask，鼠标放在盒子上面时，显示；</p>
<p>7.1 在.mask:hover;是无效的；可能是因为盒子不保留；</p>
<p>7.2 在tudou：hover；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tudou</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="7-4-5-代码"><a href="#7-4-5-代码" class="headerlink" title="7.4.5 代码"></a>7.4.5 代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>隐藏练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.tudou</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 444px;</span><br><span class="line">            height: 320px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tudou</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line">            display: none;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background: rgba(0,0,0, 0.3) url(./2-img/arr.png) no-repeat center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.tudou</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./2-img/img.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h2 id="8-css高级技巧"><a href="#8-css高级技巧" class="headerlink" title="8. css高级技巧"></a>8. css高级技巧</h2><h3 id="8-1-精灵图"><a href="#8-1-精灵图" class="headerlink" title="8.1 精灵图"></a>8.1 精灵图</h3><h4 id="8-1-1-为什么需要精灵图"><a href="#8-1-1-为什么需要精灵图" class="headerlink" title="8.1.1 为什么需要精灵图"></a>8.1.1 为什么需要精灵图</h4><img src="http://bucket-c70.test.upcdn.net/12/56.png" alt="56" style="zoom:60%;" />

<p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p>
<p><strong>为什么使用精灵图（==目的==）：</strong></p>
<p>​    <strong>为了有效地减少服务器接收和发送请求的次数</strong>，<strong>提高</strong>页面的<strong>加载速度</strong>，出现了 <strong>CSS 精灵技术</strong>（也称 CSS Sprites、CSS 雪碧）。<a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/sprites">sprites</a></p>
<p><strong>核心原理</strong>：</p>
<p>​    将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。</p>
<p><strong>精灵图举例</strong>:</p>
<img src="http://bucket-c70.test.upcdn.net/12/57.png" alt="57" style="zoom:67%;" />



<h4 id="8-1-2-精灵图-sprites-的使用"><a href="#8-1-2-精灵图-sprites-的使用" class="headerlink" title="8.1.2 精灵图(sprites)的使用"></a>8.1.2 精灵图(sprites)的使用</h4><p>使用精灵图核心：</p>
<ol>
<li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li>
<li>这个大图片也称为 sprites  精灵图  或者 雪碧图</li>
<li>移动背景图片位置， 此时可以使用 background-position 。<ul>
<li>这里不好笔记；<a href="https://www.bilibili.com/video/BV14J4114768?p=252">视频解析</a>,讲解bg-p的使用原理；</li>
</ul>
</li>
<li>移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同</li>
<li>因为一般情况下都是往上往左移动，所以数值是负值。</li>
<li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。</li>
</ol>
<p>使用精灵图核心总结：</p>
<ol>
<li>精灵图主要<strong>针对于小的背景图片</strong>使用。</li>
<li>主要借助于背景位置来实现—<strong>background-position</strong> 。</li>
<li>一般情况下精灵图都是<strong>负值</strong>。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴往下是正，网上是负。）</li>
</ol>
<h5 id="2-实验-1"><a href="#2-实验-1" class="headerlink" title="2. 实验"></a>2. 实验</h5><p>1.用王者荣耀的精灵图；</p>
<p>1.1 建立基本html；</p>
<p>.box1与.box2；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.把要使用的精灵图用ps打开</p>
<p>2.1 使用切图工具，选择你要使用的小图；</p>
<p>2.2 双击你切图的图片，也许要在切图那里右键选择 切片选择工具</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/58.png" alt="58"></p>
<p>然后能看到X与Y轴的数据，一般取反；</p>
<p>能看到宽度与高度，让你设置盒子的大小；</p>
<p>3.我们就试试取这个切片的图片</p>
<p>3.1 设置宽56px，高57px</p>
<p>3.2 用background一条龙服务；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">56px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">57px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(./<span class="number">2</span>-img/sprites.png) no-repeat -<span class="number">184px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.3 可以回归一下background有哪些属性；</p>
<p>语法：</p>
<p>background:bg-color bg-image position/bg-size bg-repeat bg-origin bg-clip bg-attachment initial|inherit;</p>
<table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">说明</th>
<th align="left">CSS</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/pr-background-color.html">background-color</a></em></td>
<td align="left">指定要使用的背景颜色</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/pr-background-position.html">background-position</a></em></td>
<td align="left">指定背景图像的位置</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-background-size.html">background-size</a></em></td>
<td align="left">指定背景图片的大小</td>
<td align="left">3</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/pr-background-repeat.html">background-repeat</a></em></td>
<td align="left">指定如何重复背景图像</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-background-origin.html">background-origin</a></em></td>
<td align="left">指定背景图像的定位区域</td>
<td align="left">3</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/css3-pr-background-clip.html">background-clip</a></em></td>
<td align="left">指定背景图像的绘画区域</td>
<td align="left">3</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/pr-background-attachment.html">background-attachment</a></em></td>
<td align="left">设置背景图像是否固定或者随着页面的其余部分滚动。</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left"><em><a href="https://www.runoob.com/cssref/pr-background-image.html">background-image</a></em></td>
<td align="left">指定要使用的一个或多个背景图像</td>
<td align="left">1</td>
</tr>
</tbody></table>
<p>3.4 应该没有顺序要求；</p>
<p>3.5 3.2处的<code>background: url(./2-img/sprites.png) no-repeat -184px 0;</code></p>
<p>按语法来是：background: bg-image bg-repeat bg-position;</p>
<p>4.代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>精灵图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">            width: 56px;</span><br><span class="line">            height: 57px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            background: url(./2-img/sprites.png) no-repeat -184px 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="8-1-3-案例"><a href="#8-1-3-案例" class="headerlink" title="8.1.3 案例"></a>8.1.3 案例</h4><h5 id="1-效果"><a href="#1-效果" class="headerlink" title="1. 效果"></a>1. 效果</h5><p><img src="http://bucket-c70.test.upcdn.net/12/59.png" alt="59"></p>
<h5 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2. 步骤"></a>2. 步骤</h5><p>1.使用能在一排的span，就不用浮动了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>1.1因为span是行内元素，没有宽度高度，所以转换成行内块元素；</p>
<p>2.给span设置独立的类名，用PS切片获取x，y，w，h数据</p>
<p>例如C</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.c</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(./<span class="number">2</span>-img/abcd.jpg) no-repeat -<span class="number">241px</span> -<span class="number">9px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.其他字同理；</p>
<hr>
<h3 id="8-2-字体图标"><a href="#8-2-字体图标" class="headerlink" title="8.2 字体图标"></a>8.2 字体图标</h3><h4 id="8-2-1-字体图标的产生"><a href="#8-2-1-字体图标的产生" class="headerlink" title="8.2.1 字体图标的产生"></a>8.2.1 字体图标的产生</h4><p>字体图标使用场景：  主要用于显示网页中通用、常用的一些小图标。</p>
<p>精灵图是有诸多优点的，但是缺点很明显。</p>
<p>1.图片文件还是比较大的。</p>
<p>2.图片本身放大和缩小会失真。</p>
<p>3.一旦图片制作完毕想要更换非常复杂。</p>
<p>此时，有一种技术的出现很好的解决了以上问题，就是<strong>字体图标 iconfont</strong>。</p>
<p><strong>字体图标</strong>可以为前端工程师提供一种方便高效的图标使用方式，<strong>展示的是图标，本质属于字体</strong>。</p>
<h4 id="8-2-2-字体图标的优点"><a href="#8-2-2-字体图标的优点" class="headerlink" title="8.2.2 字体图标的优点"></a>8.2.2 字体图标的优点</h4><p><strong>轻量级</strong>：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求</p>
<ul>
<li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等</li>
<li>兼容性：几乎支持所有的浏览器，请放心使用</li>
<li>==注意==： 字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</li>
</ul>
<p><strong>总结：</strong></p>
<p>1.如果遇到一些结构和样式比较简单的小图标，就用字体图标。</p>
<p>2.如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</p>
<h4 id="8-2-3-使用步骤"><a href="#8-2-3-使用步骤" class="headerlink" title="8.2.3 使用步骤"></a>8.2.3 使用步骤</h4><p>字体图标是一些网页常见的小图标，我们直接网上下载即可。 因此使用可以分为：</p>
<p>1.字体图标的下载 </p>
<p>2.字体图标的引入 （引入到我们html页面中）</p>
<p>3.字体图标的追加 （以后添加新的小图标）</p>
<h4 id="8-2-4-字体图标的下载"><a href="#8-2-4-字体图标的下载" class="headerlink" title="8.2.4 字体图标的下载"></a>8.2.4 字体图标的下载</h4><p><strong>推荐下载网站：</strong></p>
<ul>
<li><strong>icomoon</strong> <strong>字库</strong>  <a href="http://icomoon.io">http://icomoon.io</a>    推荐指数  <strong>★★★★★</strong></li>
</ul>
<p>IcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。</p>
<p>使用介绍，不好笔记，看视频-<a href="https://www.bilibili.com/video/BV14J4114768?p=257">链接</a></p>
<ul>
<li><strong>阿里</strong> <strong>iconfont</strong> <strong>字库</strong>   <a href="http://www.iconfont.cn/">http://www.iconfont.cn/</a>   推荐指数   <strong>★★★★★</strong> </li>
</ul>
<p>这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 AI制作图标上传生成。 重点是，免费！</p>
<ul>
<li><strong>font Awesome 中文网</strong> <a href="http://www.fontawesome.com.cn/">http://www.fontawesome.com.cn/</a> 这是以前 忧郁的弟弟的时候用过的。可惜没有笔记；</li>
</ul>
<hr>
<h4 id="8-2-5-字体图标的使用"><a href="#8-2-5-字体图标的使用" class="headerlink" title="8.2.5 字体图标的使用"></a>8.2.5 字体图标的使用</h4><h5 id="1-放入文件夹"><a href="#1-放入文件夹" class="headerlink" title="1. 放入文件夹"></a>1. 放入文件夹</h5><p><strong>下载完毕之后，注意原先的文件不要删，后面会用</strong>。</p>
<ol>
<li><p>把下载包里面的 <strong>fonts</strong> 文件夹放入页面根目录下</p>
</li>
<li><p>为什么fonts里面有很多文件？</p>
<p>这里用以前下载过的 font Awesome举例；</p>
<p>不过icomoon字库也一样；</p>
<p>2.1 因为：兼容</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/60.png" alt="60"></p>
</li>
</ol>
<ul>
<li><strong>字体文件格式</strong></li>
</ul>
<p>不同浏览器所支持的字体格式是不一样的，字体图标之所以兼容，就是因为包含了主流浏览器支持的字体文件。</p>
<p>1).TureType(  <strong>.ttf</strong>  )格式.ttf字体是Windows和Mac的最常见的字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+；</p>
<p>2).Web Open Font Format( <strong>.woff</strong> )格式woff字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+；</p>
<p>3).Embedded Open Type( <strong>.eot</strong> )格式.eot字体是IE专用字体，支持这种字体的浏览器有IE4+；</p>
<p>4).SVG(  .<strong>svg</strong>  )格式.svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+；</p>
<p>其中还有一些没有介绍的：.woff2 , .otf , .eot ;可以自行百度；</p>
<p>这里我理解了为什么有这么多文件，就没去了解了；</p>
<hr>
<h5 id="2-css引入"><a href="#2-css引入" class="headerlink" title="2. css引入"></a>2. css引入</h5><h6 id="2-1-icmoon"><a href="#2-1-icmoon" class="headerlink" title="2.1 icmoon"></a>2.1 icmoon</h6><p>在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中。</p>
<p>一定注意字体文件路径的问题；</p>
<blockquote>
<p>直接在html里申明</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;icomoon&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>:  <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>:  <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.eot?7kkyc2#iefix&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.ttf?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.woff?7kkyc2&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;fonts/icomoon.svg?7kkyc2#icomoon&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是icomoon的做法；</p>
<p>2.在demo.html里面，可以看到我们选择的图标；</p>
<p>在里面选择要使用的图标的小框；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/61.png" alt="61"></p>
<p>在要使用的地方复制；例如<code>&lt;span&gt;&lt;/span&gt;</code></p>
<p>3.给标签定义字体</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: <span class="string">&quot;icomoon&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>注意：务必保证 这个字体和上面@font-face里面的font-family字体保持一致 </p>
<p><a href="https://www.bilibili.com/video/BV14J4114768?p=258">视频讲解</a></p>
<p>4.字体图标的追加</p>
<p>如果工作中，原来的字体图标不够用了，我们需要添加新的字体图标到原来的字体文件中。</p>
<p>把压缩包里面的 <strong>selection.json</strong> 从新上传，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p>
<img src="http://bucket-c70.test.upcdn.net/12/62.png" alt="62" style="zoom:80%;" />

<p>5.字体图标加载的原理</p>
<img src="http://bucket-c70.test.upcdn.net/12/63.gif" alt="63" style="zoom:80%;" />

<br />

<hr>
<h6 id="2-2-font-Awesome"><a href="#2-2-font-Awesome" class="headerlink" title="2.2 font-Awesome"></a>2.2 font-Awesome</h6><ol>
<li><p>复制<code>font-awesome</code>目录到你的项目中</p>
</li>
<li><p>在<code>&lt;head&gt;</code>处加载font-awesome.min.css如下。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;path/to/font-awesome/css/font-awesome.min.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p><a href="http://www.fontawesome.com.cn/get-started/">http://www.fontawesome.com.cn/get-started/</a></p>
<p>例如使用 fa-camera-retro</p>
<p>你可以通过设置CSS前缀<code>fa</code>和图标的具体名称，来把Font Awesome 图标放在任意位置。Font Awesome 被设计为用于行内元素（我们喜欢用更简短的<code>&lt;i&gt;</code>标签，它的语义更加精准）。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-camera-retro&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> fa-camera-retro</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果您修改了图标容器的字体大小，图标大小会随之改变。同样也适用于颜色，阴影，阴影等其它任何CSS支持的效果上。</p>
</blockquote>
<p><a href="http://www.fontawesome.com.cn/examples/">http://www.fontawesome.com.cn/examples/</a></p>
<p>3.查看css文件，是否使用到了font目录下</p>
<p>能在里面看到 <strong>font申明</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;FontAwesome&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.eot?v=4.7.0&#x27;</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.eot?#iefix&amp;v=4.7.0&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;embedded-opentype&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.woff2?v=4.7.0&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff2&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.woff?v=4.7.0&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.ttf?v=4.7.0&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;svg&#x27;</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.找图标好像要去官网找？</p>
<p>5.实验一下；</p>
<p>就用这个<code>&lt;i class=&quot;fa fa-camera-retro&quot;&gt;&lt;/i&gt; fa-camera-retro</code></p>
<p>有效；</p>
<p>6.查看了css</p>
<p>fa与fa-camera-retro都没有font-family: ‘FontAwesome’</p>
<p>这一点雨icmoon的使用不同，那边要设置family;</p>
<hr>
<h3 id="8-3-CSS三角"><a href="#8-3-CSS三角" class="headerlink" title="8.3 CSS三角"></a>8.3 CSS三角</h3><h4 id="8-3-1-步骤"><a href="#8-3-1-步骤" class="headerlink" title="8.3.1 步骤"></a>8.3.1 步骤</h4><p>1.建立.box1</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.配置box1的css</p>
<p>高度宽度0，四个边框10px solid 颜色各异；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid pink;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">50px</span> solid skyblue;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid greenyellow;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">50px</span> solid orange;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.如图：</p>
<img src="http://bucket-c70.test.upcdn.net/12/64.png" alt="64" style="zoom:80%;" />

<p><strong>4.如果只要最上面的三角形，把右下左透明；</strong></p>
<p>4.1 新建.box2，复制box1的css</p>
<p>4.2 border的透明是transparent;</p>
<blockquote>
<p>是border-color的属性；<a href="https://www.w3school.com.cn/cssref/pr_border-color.asp">w3school-文档</a>；<a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/transparent">transparent-翻译</a></p>
</blockquote>
<p>5.不过给右下左分别加入transparent，代码多；</p>
<p>5.1 可以先border: 10px solid transparent，然后上单独border-top-color设置颜色；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top-color</span>: pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>6.如果要兼容性 低版本的浏览器；可以加上：font-size: 0;  line-height: 0;</p>
<hr>
<h4 id="8-3-2-京东三角"><a href="#8-3-2-京东三角" class="headerlink" title="8.3.2 京东三角"></a>8.3.2 京东三角</h4><p><img src="http://bucket-c70.test.upcdn.net/12/65.png" alt="65"></p>
<p>步骤:</p>
<p>1.原理：用定位；</p>
<p>1.1 建立.jd的盒子；</p>
<p><code>&lt;div class=&quot;jd&quot;&gt;&lt;/div&gt;</code></p>
<p>1.2 配置css</p>
<p>宽120px，高度200px，背景颜色pink，用于观测；居中；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jd</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.在jd里面span</p>
<p><code>&lt;div class=&quot;jd&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;</code></p>
<p>2.1 设置css；</p>
<p>绝对定位；父元素相对定位；</p>
<p>w0，h0, ont-size: 0;  line-height: 0;</p>
<p>2.2 边偏移，right 10px；自己调整；</p>
<p>top有规律，是2倍border；因为border有上下，所以其实有10px高；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jd</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br />

<h4 id="8-3-3-三角强化-案例"><a href="#8-3-3-三角强化-案例" class="headerlink" title="8.3.3 三角强化-案例"></a>8.3.3 三角强化-案例</h4><p>1.盒子一般只有矩形和圆形</p>
<p>2.预览：</p>
<ul>
<li><p><img src="http://bucket-c70.test.upcdn.net/8/80.png" alt="80"></p>
</li>
<li><p><img src="http://bucket-c70.test.upcdn.net/8/79.png" alt="79"></p>
</li>
</ul>
<p>3.把蓝色的三角做成白色，就可以了</p>
<ul>
<li>不过怎么才能做出这种三角？</li>
</ul>
<h5 id="1-做直角三角形"><a href="#1-做直角三角形" class="headerlink" title="1. 做直角三角形"></a>1. 做直角三角形</h5><p>4.把border-bottom为0px时，会这样：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/81.png" alt="81"></p>
<ul>
<li><p>从中间以下都没了…</p>
</li>
<li><p>代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid pink;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">50px</span> solid skyblue;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">0</span> solid greenyellow;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">50px</span> solid orange;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>4.1 ==为什么?==我一直以为border-bottom只管下面绿色的。怎么一半以下都没了？</p>
<img src="http://bucket-c70.test.upcdn.net/12/64.png" alt="64" style="zoom:80%;" />

<ul>
<li><p>用F12，点来点去实验；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/82.png" alt="82"></p>
</li>
<li><p>发现上下左右，各为一方，互相重叠着</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/83.png" alt="83"></p>
</li>
</ul>
<p>4.2 如果不好理解，自己实验一下，即可</p>
<p>5.这样，在下面没了后，设置与left为0px，top为100px+透明，</p>
<ul>
<li><pre><code class="css"><span class="selector-class">.box1</span> &#123;
    <span class="attribute">width</span>: <span class="number">0</span>;
    <span class="attribute">height</span>: <span class="number">0</span>;
    <span class="attribute">border-top</span>: <span class="number">100px</span> solid transparent;
    <span class="attribute">border-right</span>: <span class="number">50px</span> solid skyblue ;
    <span class="attribute">border-bottom</span>: <span class="number">0px</span> solid greenyellow;
    <span class="attribute">border-left</span>: <span class="number">0px</span> solid orange;
    <span class="attribute">margin</span>: <span class="number">100px</span> auto;
&#125;
&lt;!--hexoPostRenderEscape:&lt;figure class="highlight markdown"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre&gt;&lt;span class="line"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="bullet"&gt;+&lt;/span&gt; ![&lt;span class="string"&gt;84&lt;/span&gt;](&lt;span class="link"&gt;http://bucket-c70.test.upcdn.net/12/84.png&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="bullet"&gt;+&lt;/span&gt; 优化写法：&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;  &lt;span class="code"&gt;```css&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;  .box1 &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      width: 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      height: 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      border-color: transparent skyblue transparent transparent;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      border-style: solid;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      border-width: 100px 50px 0 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;      margin: 100px auto;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="code"&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;
</code></pre>
</li>
</ul>
<hr>
<h5 id="2-与矩形拼接"><a href="#2-与矩形拼接" class="headerlink" title="2. 与矩形拼接"></a>2. 与矩形拼接</h5><p>1.先写矩形盒子</p>
<p>2.然后里面两个span，写价格</p>
<p>2.1 .miaosha文本居中，.price垂直居中。<a href="https://fanyi.baidu.com/translate?aldtype=16047&query=price&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/price">price</a></p>
<p>2.2 文字加粗，颜色白色</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三角形<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.price</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 160px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.miaosha</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            width: 90px;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: red;</span><br><span class="line">              font-weight: 700;</span><br><span class="line"><span class="css">              <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;miaosha&quot;</span>&gt;</span>¥1688<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>¥5688<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>因为文字环绕，所以只给.miaosha浮动，也能实现效果，不需要全浮动</li>
</ul>
<p>3.写三角</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/85.png" alt="85"></p>
<p>3.1 不写边偏移的时候是紧贴着文字</p>
<p>3.2 三角改为白色；</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/86.png" alt="86"></p>
<ul>
<li>左边与边框有点缝隙，是浏览器问题，已经换浏览器实验过；2020-9-11 23:43:54</li>
</ul>
<p>3.3 右边的太近了，给.miaosha一个右外边距8px；</p>
<p>3.4 给5688灰色，删除线，减小大小；</p>
<p>4.代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三角形<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.price</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 160px;</span><br><span class="line">            height: 26px;</span><br><span class="line">            border: 1px solid red;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            line-height: 26px;</span><br><span class="line">            </span><br><span class="line">        &#125;     </span><br><span class="line"><span class="css">        <span class="selector-class">.miaosha</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 50%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            background-color: red;</span><br><span class="line">            font-weight: 700;</span><br><span class="line"><span class="css">              <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line"><span class="css">            <span class="comment">/* 2-3.3 */</span></span></span><br><span class="line">            margin-right: 8px;  </span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 2-3 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.miaosha</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line"><span class="css">            <span class="comment">/* 2-3.1 */</span></span></span><br><span class="line">            top: 0;</span><br><span class="line">            right: 0;</span><br><span class="line">            width: 0;</span><br><span class="line">            height: 0;</span><br><span class="line"><span class="css">            <span class="comment">/* 2-3.2 */</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-color</span>: <span class="selector-tag">transparent</span> <span class="selector-id">#fff</span> <span class="selector-tag">transparent</span> <span class="selector-tag">transparent</span>;</span></span><br><span class="line">            border-style: solid;</span><br><span class="line">            border-width: 26px 12px 0 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="comment">/* 2-3.4 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.origin</span> &#123;</span></span><br><span class="line">            font-size: 13px;</span><br><span class="line">            color: gray;</span><br><span class="line">            text-decoration: line-through;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;miaosha&quot;</span>&gt;</span>¥1688</span><br><span class="line">            <span class="comment">&lt;!-- 2-3 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;origin&quot;</span>&gt;</span>¥5688<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ul>
<li><p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=price&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/through">through</a></p>
<p>读音难理解，多听听音标</p>
</li>
<li></li>
</ul>
<hr>
<h3 id="8-4-CSS用户界面样式"><a href="#8-4-CSS用户界面样式" class="headerlink" title="8.4 CSS用户界面样式"></a>8.4 CSS用户界面样式</h3><p><strong>什么是界面样式</strong></p>
<p>所谓的界面样式，就是更改一些用户操作样式，以便提高更好的用户体验。</p>
<ul>
<li>更改用户的鼠标样式 </li>
<li>表单轮廓</li>
<li>防止表单域拖拽</li>
</ul>
<h4 id="8-4-1-鼠标样式-cursor"><a href="#8-4-1-鼠标样式-cursor" class="headerlink" title="8.4.1 鼠标样式 cursor"></a>8.4.1 鼠标样式 cursor</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p>
<table>
<thead>
<tr>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>default</td>
<td>小白 默认</td>
</tr>
<tr>
<td>pointer</td>
<td>小手</td>
</tr>
<tr>
<td>move</td>
<td>移动</td>
</tr>
<tr>
<td>text</td>
<td>文本</td>
</tr>
<tr>
<td>not-allowed</td>
<td>禁止</td>
</tr>
</tbody></table>
<br />

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f5f7</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: default&quot;</span>;&gt;</span>默认样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: pointer&quot;</span>;&gt;</span>小手样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: move&quot;</span>;&gt;</span>移动样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: text&quot;</span>;&gt;</span>文本样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;cursor: not-allowed&quot;</span>;&gt;</span>禁止样式<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="8-4-2-轮廓线-outline"><a href="#8-4-2-轮廓线-outline" class="headerlink" title="8.4.2 轮廓线 outline"></a>8.4.2 轮廓线 outline</h4><p>给表单添加 outline: 0;   或者  outline: none; 样式之后，就可以去掉默认的蓝色边框。</p>
<p>不过去掉后，我反而觉得没那么好看；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">     <span class="attribute">outline</span>: none; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="8-4-3-防止拖拽文本域-resize"><a href="#8-4-3-防止拖拽文本域-resize" class="headerlink" title="8.4.3 防止拖拽文本域 resize"></a>8.4.3 防止拖拽文本域 resize</h4><ol start="0">
<li>单词：<a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/resize">resize</a></li>
</ol>
<p><img src="http://bucket-c70.test.upcdn.net/12/66.png" alt="66"></p>
<p>1.文本域<code>&lt;textarea&gt;</code>右下角可以拖大拖小。</p>
<p>2.resize: none;可以设置不能拖</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span>&#123; </span><br><span class="line">     <span class="attribute">resize</span>: none;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>3.注意</p>
<ul>
<li><p>如果<code>&lt;textarea&gt;</code>分行写，生成的页面会有区域</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/67.png" alt="67"></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>要没区域，只能写一行；</p>
</li>
</ul>
<hr>
<h3 id="8-5-vertical-align-属性应用"><a href="#8-5-vertical-align-属性应用" class="headerlink" title="8.5 vertical-align 属性应用"></a>8.5 vertical-align 属性应用</h3><p>0.word</p>
<ul>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/vertical">vertical</a></li>
</ul>
<p>1.概述</p>
<p>CSS 的 <strong>vertical-align</strong> 属性使用场景： 经常用于设置图片或者表单(行内块元素）和文字垂直对齐。</p>
<p>官方解释： 用于设置一个元素的<strong>垂直对齐方式</strong>，但是它只针对于行内元素或者行内块元素有效。</p>
<p>语法：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">vertical-align : baseline | top | middle | bottom </span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">baseline</td>
<td align="center">默认。元素放置在父元素的基线上</td>
</tr>
<tr>
<td align="center">top</td>
<td align="center">把元素的顶端与行中最高元素的顶端对齐</td>
</tr>
<tr>
<td align="center">middle</td>
<td align="center">把此元素放置在父元素的中部</td>
</tr>
<tr>
<td align="center">bottom</td>
<td align="center">把元素的顶端与行中最低的元素的顶端对齐</td>
</tr>
</tbody></table>
<p><img src="http://bucket-c70.test.upcdn.net/12/69.png" alt="69"></p>
<br />

<hr>
<p>2.默认基线</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/70.png" alt="70"></p>
<p>3.设置成底线</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br />

<p><img src="http://bucket-c70.test.upcdn.net/12/71.png" alt="71"></p>
<p>3.图片与文字垂直居中：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="2-记住"><a href="#2-记住" class="headerlink" title="2. 记住"></a>2. 记住</h4><p>1.它只针对于行内元素或者行内块元素有效。</p>
<p>2.如果不是，则要转换</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/72.png" alt="72"></p>
<ul>
<li><p>不过，<code>&lt;i&gt;</code>是行内元素，应该不需要转换</p>
<p>我实验过，在同一行(行内元素)，且高度宽度无效(不是行内块元素)。是行内元素；</p>
</li>
</ul>
<p>3.即使是文本域，也可以让它与文字居中，文本域是行内块元素</p>
<hr>
<h4 id="3-解决图片底部默认空白缝隙问题"><a href="#3-解决图片底部默认空白缝隙问题" class="headerlink" title="3. 解决图片底部默认空白缝隙问题"></a>3. 解决图片底部默认空白缝隙问题</h4><p>1.图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。</p>
<p>2.主要解决方法有两种：</p>
<ul>
<li><p>1.<strong>给图片</strong>添加 <strong>vertical-align:middle | top| bottom</strong> 等。 （提倡使用的）</p>
<p>2.把图片转换为块级元素  <strong>display: block</strong>; </p>
</li>
</ul>
<p>2.1. 因为这是<code>vertical-align</code>属性默认问题</p>
<ul>
<li>只有行内元素，与行内块元素才有的</li>
<li>所以<code>display:block</code>有效</li>
</ul>
<hr>
<h3 id="8-6-溢出的文字省略号显示"><a href="#8-6-溢出的文字省略号显示" class="headerlink" title="8.6 溢出的文字省略号显示"></a>8.6 溢出的文字省略号显示</h3><h4 id="8-6-1-单行本溢出显示省略号"><a href="#8-6-1-单行本溢出显示省略号" class="headerlink" title="8.6.1 单行本溢出显示省略号"></a>8.6.1 单行本溢出显示省略号</h4><p>1.例如：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/73.png" alt="73"></p>
<p>2.三步：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*1. 先强制一行内显示文本*/</span></span><br><span class="line"> <span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;  （ 默认 <span class="selector-tag">normal</span> 自动换行）</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*2. 超出的部分隐藏*/</span></span><br><span class="line"> <span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*3. 文字用省略号替代超出的部分*/</span></span><br><span class="line"> <span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br></pre></td></tr></table></figure>

<p>2.1 资料</p>
<ul>
<li><a href="https://www.runoob.com/cssref/pr-text-white-space.html">white-space教程</a></li>
<li><a href="https://www.runoob.com/cssref/css3-pr-text-overflow.html">text-overflow</a></li>
</ul>
<p>2.2 word</p>
<ul>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/hidden">hidden</a></li>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/ellipsis">ellipsis</a></li>
</ul>
<p>3.案例：</p>
<ul>
<li><p>代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f5f7</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 80px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            white-space: nowrap;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            text-overflow: ellipsis;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        啥有不说，说啥，玩不玩LOL咕咕。什么时候玩</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<hr>
<h4 id="8-6-2-多行文本溢出显示省略号"><a href="#8-6-2-多行文本溢出显示省略号" class="headerlink" title="8.6.2 多行文本溢出显示省略号"></a>8.6.2 多行文本溢出显示省略号</h4><p>1.多行文本溢出显示省略号，<strong>有较大兼容性问题</strong>，适合于webKit浏览器或移动端（移动端大部分是webkit内核）</p>
<p>2.步骤：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*1. 超出的部分隐藏 */</span></span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 文字用省略号替代超出的部分 */</span></span><br><span class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3. 弹性伸缩盒子模型显示 */</span></span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 4. 限制在一个块元素显示的文本的行数 */</span></span><br><span class="line"><span class="selector-tag">-webkit-line-clamp</span>: 2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 5. 设置或检索伸缩盒对象的子元素的排列方式 */</span></span><br><span class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">vertical</span>;</span><br></pre></td></tr></table></figure>

<p>2.1 资料：</p>
<ul>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-line-clamp">-webkit-line-clamp</a></p>
<blockquote>
<p><strong><code>-webkit-line-clamp</code></strong> CSS 属性 可以把 <a href="https://developer.mozilla.org/en-US/docs/Glossary/块容器">块容器</a> 中的内容限制为指定的行数.</p>
<p>它只有在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/display"><code>display</code></a> 属性设置成 <code>-webkit-box</code> 或者 <code>-webkit-inline-box</code> 并且 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-box-orient"><code>-webkit-box-orient</code></a> 属性设置成 <code>vertical</code>时才有效果</p>
<p>在大部分情况下,也需要设置 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow"><code>overflow</code></a> 属性为 <code>hidden</code>, 否则,里面的内容不会被裁减,并且在内容显示为指定行数后还会显示省略号(ellipsis ).</p>
</blockquote>
</li>
<li><p>display: -webkit-box；百度不到</p>
</li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-orient">box-orient-MDN文档</a>；<a href="https://www.runoob.com/cssref/css3-pr-box-orient.html">菜鸟教程</a></p>
<ul>
<li><p><strong>非标准</strong><br>该特性是非标准的，请尽量不要在生产环境中使用它！</p>
<p>这是原始的css弹性布局草案的一个属性，已经被最新的标准替代。 查看 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes">flexbox</a> 了解现行标准。</p>
</li>
</ul>
</li>
</ul>
<p>2.2 word:</p>
<ul>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/clamp">clamp</a></li>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/orient">orient</a></li>
<li><a href="https://fanyi.baidu.com/?aldtype=16047#en/zh/vertical">vertical</a></li>
</ul>
<p>3.问题</p>
<p>3.1 如果行数有3行，那么第三行，依旧显示：</p>
<ul>
<li><p><img src="http://bucket-c70.test.upcdn.net/12/74.png" alt="74"></p>
</li>
<li><p>修改高度，来隐藏第三行，视频里面是这么说的；</p>
</li>
<li><p>腾讯网也是这样的；</p>
</li>
</ul>
<p>4.pink老师建议：</p>
<ul>
<li><strong>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单。</strong></li>
<li>严格控制高度</li>
</ul>
<hr>
<h2 id="9-常见布局技巧"><a href="#9-常见布局技巧" class="headerlink" title="9. 常见布局技巧"></a>9. 常见布局技巧</h2><p><strong>巧妙利用一个技术更快更好的布局：</strong></p>
<ol>
<li>margin负值的运用</li>
<li>文字围绕浮动元素</li>
<li>行内块的巧妙运用</li>
<li>CSS三角强化</li>
</ol>
<h3 id="9-1-mragin负值运用"><a href="#9-1-mragin负值运用" class="headerlink" title="9.1 mragin负值运用"></a>9.1 mragin负值运用</h3><p>1.有边框的盒子，浮动的时候，边框会重叠。</p>
<p>2.而以前的那种，清除左边的边框麻烦。</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/75.png" alt="75"></p>
<p>3.让每个盒子margin 往左侧移动 -1px 正好压住相邻盒子边框</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        ul li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            list-style: none;</span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px solid skyblue;</span><br><span class="line">            margin-left: -1px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>第三个盒子的左边，没有压住第二个盒子的右边，而其他是好的。有点奇怪</p>
</li>
<li><p>换个浏览器试试；2020-9-9 01:08:02</p>
<p>换个浏览器就没问题了；</p>
</li>
</ul>
<h4 id="9-1-2-鼠标放入后边框变色"><a href="#9-1-2-鼠标放入后边框变色" class="headerlink" title="9.1.2 鼠标放入后边框变色"></a>9.1.2 鼠标放入后边框变色</h4><p>1.直接:hover,是没有效果的</p>
<ul>
<li>中间边框的右边，是下一个盒子的左边。</li>
</ul>
<p>2.实验：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.如何是好？</p>
<ul>
<li><p>加相对定位</p>
<p>相对定位会压住其他盒子，从而产生效果</p>
</li>
<li><p>但是，如果都有相对定位怎么办？</p>
</li>
</ul>
<p>3.1 这个时候，用z-index，提高层级；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://www.runoob.com/cssref/pr-pos-z-index.html">z-index文档</a></li>
<li>默认值也许是0吧，没有准确的说；</li>
</ul>
<hr>
<h3 id="9-2-文字围绕浮动元素"><a href="#9-2-文字围绕浮动元素" class="headerlink" title="9.2 文字围绕浮动元素"></a>9.2 文字围绕浮动元素</h3><p>1.在一个盒子里面，输入文字。</p>
<p>2.盒子里面加一个img盒子，浮动</p>
<p>3.完毕</p>
<p>4.浮动自带文字环绕，所以不会让文字跑到浮动盒子下面</p>
<p>5.布局示意图：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/76.png" alt="76"></p>
<hr>
<h3 id="9-3-行内块巧妙运用"><a href="#9-3-行内块巧妙运用" class="headerlink" title="9.3 行内块巧妙运用"></a>9.3 行内块巧妙运用</h3><p>1.假如像这样的模块，怎么做？</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/77.png" alt="77"></p>
<p>1.1 ul&gt;li</p>
<p>2.</p>
<p>3.步骤：</p>
<p>3.1 先建立一个盒子，装8个<code>&lt;a&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3.2 设置a的css</p>
<ul>
<li><p>行内块，高宽36，背景颜色#f7f7f7，border；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>内容水平居中，垂直居中，取消下划线，文本颜色改为#333；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>3.3 整个水平居中</p>
<ul>
<li><p>给box 设置text-align: center;</p>
</li>
<li><pre><code class="css"><span class="selector-class">.box</span> &#123;
    <span class="attribute">text-align</span>: center;
&#125;
&lt;!--hexoPostRenderEscape:&lt;figure class="highlight angelscript"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre&gt;&lt;span class="line"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="number"&gt;3.4&lt;/span&gt; 建立上一页与，下一页的html&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;```html&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&amp;lt;div &lt;span class="keyword"&gt;class&lt;/span&gt;=&amp;quot;&lt;span class="symbol"&gt;box&lt;/span&gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&amp;amp;&lt;span class="symbol"&gt;lt&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;1&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;2&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;3&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;4&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;5&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;6&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;7&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&lt;span class="symbol"&gt;8&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;        &amp;lt;&lt;span class="symbol"&gt;a&lt;/span&gt; &lt;span class="symbol"&gt;href&lt;/span&gt;=&amp;quot;#&amp;quot;&amp;gt;&amp;amp;&lt;span class="symbol"&gt;gt&lt;/span&gt;&amp;lt;/&lt;span class="symbol"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;    &amp;lt;/&lt;span class="symbol"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre>
</li>
<li><p>若里面加上文字，超过了宽度，要另起class设置新的宽度</p>
<p>设置多了也没事，行内块元素，只有内容大小</p>
</li>
</ul>
<p>3.5 设置被选择的</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;elp&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>css:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.current</span>, <span class="selector-class">.box</span> <span class="selector-class">.elp</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>可以复习一下css选择器；<a href="https://cqilin.gitee.io/4-css_private_note/#5-css选择器；">链接</a></li>
</ul>
<p>3.6 写到几页的html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">到第</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">页</span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个模样：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/78.png" alt="78"></p>
<ul>
<li><p>继续css：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>还可以清楚所有的内边距外边距</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>3.7 代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>鼠标样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 36px;</span><br><span class="line">            height: 36px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f7f7f7</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 36px;</span><br><span class="line">            text-decoration: none;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-class">.current</span>, <span class="selector-class">.box</span> <span class="selector-class">.elp</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            border: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line">            width: 55px;</span><br><span class="line">            height: 36px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line">            width: 60px;</span><br><span class="line">            height: 36px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#f7f7f7</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&amp;lt<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;elp&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&amp;gt<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        到第</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        页</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<br />

<hr>
<h2 id="10-CSS初始化"><a href="#10-CSS初始化" class="headerlink" title="10. CSS初始化"></a>10. CSS初始化</h2><p>不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对HTML文本呈现的差异，照顾浏览器的兼容，我们需要对CSS 初始化</p>
<p>简单理解： CSS初始化是指重设浏览器的样式。 (也称为CSS reset）</p>
<p>每个网页都必须首先进行 CSS初始化。</p>
<p>这里我们以 京东CSS初始化代码为例。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 把我们所有标签的内外边距清零 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* em 和 i 斜体的文字不倾斜 */</span></span><br><span class="line"><span class="selector-tag">em</span>,</span><br><span class="line"><span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 去掉li 的小圆点 */</span></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/* border 0 照顾低版本浏览器 如果 图片外面包含了链接会有边框的问题 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* 取消图片底侧有空白缝隙的问题 */</span></span><br><span class="line">    <span class="attribute">vertical-align</span>: middle</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="comment">/* 当我们鼠标经过button 按钮的时候，鼠标变成小手 */</span></span><br><span class="line">    <span class="attribute">cursor</span>: pointer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#c81623</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="comment">/* &quot;\5B8B\4F53&quot; 就是宋体的意思 这样浏览器兼容性比较好 */</span></span><br><span class="line">    <span class="attribute">font-family</span>: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* CSS3 抗锯齿形 让文字显示的更加清晰 */</span></span><br><span class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hide</span>,</span><br><span class="line"><span class="selector-class">.none</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 清除浮动 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;.&quot;</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="comment">/* &quot;\5B8B\4F53&quot; 就是宋体的意思 这样浏览器兼容性比较好 */</span></span><br><span class="line">    <span class="attribute">font-family</span>: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* CSS3 抗锯齿形 让文字显示的更加清晰 */</span></span><br><span class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>1.<code>&quot;\5B8B\4F53&quot;</code>,是什么?</p>
<ul>
<li>是宋体</li>
</ul>
<p>2.<strong>Unicode编码字体：</strong></p>
<p>把中文字体的名称用相应的Unicode编码来代替，这样就可以有效的避免浏览器解释CSS代码时候出现乱码的问题。</p>
<p>比如：</p>
<p>黑体 \9ED1\4F53<br>宋体 \5B8B\4F53<br>微软雅黑 \5FAE\8F6F\96C5\9ED1</p>
<hr>
<p>字数够多了，下面到12_2；2020-9-12 10:45:55</p>
]]></content>
      <categories>
        <category>html_css</category>
      </categories>
      <tags>
        <tag>html_css</tag>
      </tags>
  </entry>
  <entry>
    <title>12-2</title>
    <url>/1-(0~50)/12_2/</url>
    <content><![CDATA[<p>12-html+css_introdiction-pink，字数多了</p>
<p>如果文章也可以换页就好了，不过那样目录也许会出问题；</p>
<a id="more"></a>

<h2 id="11-html5和css3提高"><a href="#11-html5和css3提高" class="headerlink" title="11. html5和css3提高"></a>11. html5和css3提高</h2><p>1.目标：</p>
<ul>
<li>能够说出 3~5 个 HTML5 新增布局和表单标签</li>
<li>能够说出 CSS3 的新增特性有哪些</li>
</ul>
<h3 id="11-1-HTML5新特性"><a href="#11-1-HTML5新特性" class="headerlink" title="11.1 HTML5新特性"></a>11.1 HTML5新特性</h3><p>HTML5 的新增特性主要是针对于以前的不足，增加了一些新的标签、新的表单和新的表单属性等。 </p>
<p>这些新特性都有兼容性问题，基本是 <strong>IE9+ 以上版本的浏览器</strong>才支持，如果不考虑兼容性问题，可以大量使用这些新特性。</p>
<h4 id="11-1-1-布局"><a href="#11-1-1-布局" class="headerlink" title="11.1.1 布局"></a>11.1.1 布局</h4><p>1.以前布局，我们基本用 div 来做。div 对于搜索引擎来说，是没有语义的</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“header”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“nav”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“content”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“footer”</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>发展到了HTML5后，新增了一些语义化标签，这样的话更加有利于浏览器的搜索引擎搜索，也方便了网站的seo（Search Engine Optimization，搜索引擎优化），下面就是新增的一些语义化标签</p>
<ul>
<li><p><code>&lt;header&gt;</code> 头部标签</p>
</li>
<li><p><code>&lt;nav&gt;</code> 导航标签</p>
</li>
<li><p><code>&lt;article&gt;</code> 内容标签；<a href="https://fanyi.baidu.com/#en/zh/article">article</a></p>
</li>
<li><p><code>&lt;section&gt;</code> 定义文档某个区域</p>
<p><a href="https://baijiahao.baidu.com/s?id=1636030964727322199&wfr=spider&for=pc">section-更多信息</a></p>
</li>
<li><p><code>&lt;aside&gt;</code> 侧边栏标签</p>
</li>
<li><p><code>&lt;footer&gt;</code> 尾部标签</p>
</li>
</ul>
<p><img src="http://bucket-c70.test.upcdn.net/12/87.png" alt="87"></p>
<p>2.如果写header与nav，就是这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        header, nav &#123;</span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            border-radius: 15px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            margin: 15px auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 150px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span>nav<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<h5 id="2-注意"><a href="#2-注意" class="headerlink" title="2. 注意"></a>2. 注意</h5><ul>
<li>这种语义化标准，主要是针对==搜索引擎==的</li>
<li>新标签，页面中，可多次使用。</li>
<li>在IE9中，需要把这些元素转换为块级元素。</li>
<li>移动端更喜欢用这些标签</li>
<li>HTML5还增加了很多其他标签。</li>
</ul>
<hr>
<h4 id="11-1-2-多媒体标签"><a href="#11-1-2-多媒体标签" class="headerlink" title="11.1.2 多媒体标签"></a>11.1.2 多媒体标签</h4><p>P276；</p>
<p>1.多媒体标签分为 音频 <strong>audio</strong> 和视频 <strong>video</strong> 两个标签 使用它们，我们可以很方便的在页面中嵌入音频和视频，而不再去使用落后的flash和其他浏览器插件了。</p>
<p>因为多媒体标签的 属性、方法、事件比较多，因此我们需要什么功能的时候，就需要去查找相关的文档进行学习使用。</p>
<h5 id="1-视频标签-video"><a href="#1-视频标签-video" class="headerlink" title="1. 视频标签-video"></a>1. 视频标签-video</h5><p>1.当前 <strong><video></strong> 元素支持三种视频格式： 尽量使用 <strong>mp4格式</strong>，它几乎支持所有浏览器</p>
<p>2.使用语法：</p>
<p><code>&lt;video src=&quot;media/mi.mp4&quot;&gt;&lt;/video&gt;</code></p>
<p>3.浏览器兼容</p>
<table>
<thead>
<tr>
<th align="left">浏览器</th>
<th align="left">MP4</th>
<th align="left">WebM</th>
<th align="left">Ogg</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Internet Explorer</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">Chrome</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
<tr>
<td align="left">Firefox</td>
<td align="left">YES 从 Firefox 21 版本开始 Linux 系统从 Firefox 30 开始</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
<tr>
<td align="left">Safari</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">Opera</td>
<td align="left">YES 从 Opera 25 版本开始</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
</tbody></table>
<ul>
<li>MP4 = MPEG 4文件使用 H264 视频编解码器和AAC音频编解码器</li>
<li>WebM = WebM 文件使用 VP8 视频编解码器和 Vorbis 音频编解码器</li>
<li>Ogg = Ogg 文件使用 Theora 视频编解码器和 Vorbis音频编解码器</li>
</ul>
<p>3.1 由于各个浏览器的支持情况不同，所以我们会有一种兼容性的写法，这种写法了解一下即可</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span>  <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>  <span class="attr">width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;move.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;move.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span> &gt;</span></span><br><span class="line">    您的浏览器暂不支持 <span class="tag">&lt;<span class="name">video</span>&gt;</span> 标签播放视频</span><br><span class="line"><span class="tag">&lt;/ <span class="attr">video</span> &gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>上面这种写法，浏览器会匹配video标签中的source，如果支持就播放，如果不支持往下匹配，直到没有匹配的格式，就提示文本</li>
</ul>
<p>4.video 常用属性，HTML5 中的新属性。</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-autoplay.html">autoplay</a>  <strong>New</strong></td>
<td align="left">autoplay</td>
<td align="left">如果出现该属性，则视频在就绪后马上播放。(谷歌浏览器需要添加muted来解决自动播放的问题，不知道现在还是不是这样；2020-9-14 05:30:21)</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-controls.html">controls</a>  <strong>New</strong></td>
<td align="left">controls</td>
<td align="left">如果出现该属性，则向用户显示控件，比如播放按钮。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-height.html">height</a>  <strong>New</strong></td>
<td align="left"><em>pixels</em></td>
<td align="left">设置视频播放器的高度。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-loop.html">loop</a>  <strong>New</strong></td>
<td align="left">loop</td>
<td align="left">如果出现该属性，则当媒介文件完成播放后再次开始播放。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-muted.html">muted</a>  <strong>New</strong></td>
<td align="left">muted</td>
<td align="left">如果出现该属性，视频的音频输出为静音。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-poster.html">poster</a>  <strong>New</strong></td>
<td align="left"><em>URL</em></td>
<td align="left">规定视频正在下载时显示的图像，直到用户点击播放按钮。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-preload.html">preload</a>  <strong>New</strong></td>
<td align="left">auto metadata none</td>
<td align="left">如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-src.html">src</a>  <strong>New</strong></td>
<td align="left"><em>URL</em></td>
<td align="left">要播放的视频的 URL。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-video-width.html">width</a>  <strong>New</strong></td>
<td align="left"><em>pixels</em></td>
<td align="left">设置视频播放器的宽度。</td>
</tr>
</tbody></table>
<br />

<p>4.1 直接写<code>&lt;video src=&quot;media/mi.mp4&quot;&gt;&lt;/video&gt;</code>是禁止的一张图片。</p>
<ul>
<li><p>加上autoplay，能自动播放</p>
<p><code>&lt;video src=&quot;./5-video/01.mp4&quot; autoplay=&quot;autoplay&quot;&gt;&lt;/video&gt;</code></p>
</li>
<li><p>如果谷歌浏览器不行，就这样</p>
<p><code>&lt;video src=&quot;./5-video/01.mp4&quot; autoplay=&quot;autoplay&quot; muted=&quot;muted&quot;&gt;&lt;/video&gt;</code></p>
<p>不过本身，会使视频静音播放</p>
</li>
</ul>
<p>4.2 但是，还没有播放按钮，进度条，调节声音的等等</p>
<ul>
<li><p>加上controls</p>
<p><code>&lt;video src=&quot;./5-video/01.mp4&quot; autoplay=&quot;autoplay&quot; muted=&quot;muted&quot; controls=&quot;controls&quot;&gt;&lt;/video&gt;</code></p>
<ul>
<li><p>已经试验，内部样式表无效</p>
<p>那，外部样式表应该也是没用的</p>
<p>只有内联样式有效</p>
</li>
<li><p>但平常css有的元素是有用的，比如高度，宽度；</p>
</li>
</ul>
</li>
</ul>
<p>4.3 如果播放完了一次，想继续播放，就需要循环</p>
<ul>
<li>内联样式+<code>loop = &quot;loop&quot;</code></li>
</ul>
<p>4.4 如果网页卡，视频加载不出，又不想黑在那，可以预放图片</p>
<ul>
<li>内联样式+<code>poster = url</code></li>
<li>但有另外妙用，用了这个属性后，就不会自动播放，显示着你放置的图片，等待你去点击播放；</li>
</ul>
<p>5.还以为有自适应大小，貌似没有，就用width与height调整吧。</p>
<hr>
<h5 id="2-音频标签-audio"><a href="#2-音频标签-audio" class="headerlink" title="2. 音频标签-audio"></a>2. 音频标签-audio</h5><p>1.基本使用</p>
<p>当前 <strong><audio></strong> 元素支持三种视频格式： 尽量使用 <strong>mp3格式</strong></p>
<p>2.语法：</p>
<p><code>&lt;audio src=&quot;media/music.mp3&quot;&gt;&lt;/audio&gt;</code></p>
<p>3.浏览器兼容</p>
<p>目前，<audio> 元素支持的3种文件格式：MP3、Wav、Ogg。</p>
<table>
<thead>
<tr>
<th align="left">浏览器</th>
<th align="left">MP3</th>
<th align="left">Wav</th>
<th align="left">Ogg</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Internet Explorer</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">Chrome</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
<tr>
<td align="left">Firefox</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
<tr>
<td align="left">Safari</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">Opera</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
</tr>
</tbody></table>
<br />

<p>4.属性：HTML5 中的新属性。</p>
<table>
<thead>
<tr>
<th align="left">属性</th>
<th align="left">值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-autoplay.html">autoplay</a></td>
<td align="left">autoplay</td>
<td align="left">如果出现该属性，则音频在就绪后马上播放。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-controls.html">controls</a></td>
<td align="left">controls</td>
<td align="left">如果出现该属性，则向用户显示音频控件（比如播放/暂停按钮）。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-loop.html">loop</a></td>
<td align="left">loop</td>
<td align="left">如果出现该属性，则每当音频结束时重新开始播放。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-muted.html">muted</a></td>
<td align="left">muted</td>
<td align="left">如果出现该属性，则音频输出为静音。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-preload.html">preload</a></td>
<td align="left">auto metadata none</td>
<td align="left">规定当网页加载时，音频是否默认被加载以及如何被加载。</td>
</tr>
<tr>
<td align="left"><a href="https://www.runoob.com/tags/att-audio-src.html">src</a></td>
<td align="left"><em>URL</em></td>
<td align="left">规定音频文件的 URL。</td>
</tr>
</tbody></table>
<br />

<p>4.1 和video一样，<code>&lt;audio src=&quot;media/music.mp3&quot;&gt;&lt;/audio&gt;</code>后，不会有任何东西。需要添加<code>autoplay</code>才有效果；</p>
<ul>
<li>同样的，谷歌浏览器把自动播放声音也去掉了，可能是防止吓到人</li>
</ul>
<p>4.2 不过声音是没有画面的，即使自动播放了，也只有声音，页面啥都没有。</p>
<ul>
<li><p>加上<code>controls</code>能看到一些东西</p>
</li>
<li><p><code>&lt;audio src=&quot;media/music.mp3&quot; autoplay=&quot;autoplay&quot; controls=&quot;controls&quot;&gt;&lt;/audio&gt;</code></p>
</li>
</ul>
<h5 id="3-小节"><a href="#3-小节" class="headerlink" title="3. 小节"></a>3. 小节</h5><ul>
<li>音频标签和视频标签使用方式基本一致</li>
<li>浏览器支持情况不同</li>
<li>谷歌浏览器把音频和视频自动播放禁止了</li>
<li>我们可以给视频标签添加 muted 属性来静音播放视频，音频不可以（可以通过JavaScript解决）</li>
<li>视频标签是重点，我们经常设置自动播放，不使用 controls 控件，循环和设置大小属性</li>
</ul>
<h4 id="11-1-3-新增表单元素"><a href="#11-1-3-新增表单元素" class="headerlink" title="11.1.3 新增表单元素"></a>11.1.3 新增表单元素</h4><p>1.在H5中，帮我们新增加了很多类型的表单，这样方便了程序员的开发</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/88.png" alt="88"></p>
<p>案例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我们验证的时候必须添加form表单域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>邮箱: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>网址: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>日期: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>时间: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;time&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>数量: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>手机号码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;tel&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>搜索: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>颜色: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当我们点击提交按钮就可以验证表单了 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>2.例如email，没输入对</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/89.png" alt="89"></p>
<p>3.date日期，可以选择时间</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/90.png" alt="90"></p>
<p>4.手机端也合适</p>
<img src="http://bucket-c70.test.upcdn.net/12/91.png" alt="91" style="zoom:80%;" />

<br />

<hr>
<h4 id="11-1-4-新增表单属性"><a href="#11-1-4-新增表单属性" class="headerlink" title="11.1.4 新增表单属性"></a>11.1.4 新增表单属性</h4><table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">required</td>
<td align="center">required</td>
<td>表单拥有该属性表示其内容不能为空，必填</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/tags/att-input-autofocus.html">autofocus</a></td>
<td align="center">autofocus</td>
<td>属性规定当页面加载时 <code>&lt;input&gt;</code> 元素应该自动获得焦点。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/tags/att-input-placeholder.html">placeholder</a></td>
<td align="center"><em>text</em></td>
<td>placeholder 属性规定可描述输入<code>&lt;input&gt;</code> 字段预期值的简短的提示信息 。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/tags/att-input-autocomplete.html">autocomplete</a></td>
<td align="center">on/off</td>
<td>autocomplete 属性规定 <code>&lt;input&gt;</code> 元素输入字段是否应该启用自动完成功能。默认值是”on”</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/tags/att-input-multiple.html">multiple</a></td>
<td align="center">multiple</td>
<td>属性规定允许用户输入到 <code>&lt;input&gt;</code> 元素的多个值。</td>
</tr>
</tbody></table>
<p>1.placeholder效果预览：</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/92.png" alt="92"></p>
<ul>
<li>预先放有文字，可以做简短的注释</li>
</ul>
<p>1.1 可以css修饰</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>这不经意让我想到：其他属性也可以这样吗？</li>
<li>去看看有哪些值？额，没看到。也许就特别的几个用得到css吧；</li>
</ul>
<p>2.autofocus，自动焦点</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/93.png" alt="93"></p>
<p>每次打开百度，不需要我们点，就自动有打击了一次的效果；</p>
<p>3.autocomplete，提交成功过的字符会被记录</p>
<p><img src="http://bucket-c70.test.upcdn.net/12/94.png" alt="94"></p>
<p>3.1 如何成功提交？要有name，或，id</p>
<p><code>搜索: &lt;input type=&quot;search&quot; name=&quot;sear&quot; id=&quot;&quot; /&gt;</code></p>
<ul>
<li><p>不过在type=number那里，没有成功；</p>
<p><code>数量: &lt;input type=&quot;number&quot; name=&quot;num&quot; id=&quot;&quot; /&gt;</code></p>
<p>获取这种类型，有隐藏输入记录吧。不不不，应该是autocomplete默认值是off</p>
</li>
</ul>
<p>3.1.1 实验：</p>
<p><code>数量: &lt;input type=&quot;number&quot; name=&quot;num&quot; id=&quot;&quot; autocomplete=&quot;on&quot; /&gt;</code></p>
<p>ok,还是不行；2020-9-14 21:40:29</p>
<p>4.multiple用于可以提交多个文件</p>
<p><code>&lt;input type=&quot;file&quot; name=&quot;&quot; id=&quot;&quot;&gt;</code></p>
<ul>
<li>默认只能提交一个文件，即使用<code>shift</code>和<code>ctrl</code>也无法选择多个</li>
</ul>
<p>4.1 加上multiple就可以了,<a href="https://fanyi.baidu.com/translate?aldtype=16047&query=placeholder&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/multiple">multiple翻译</a></p>
<p><code>&lt;input type=&quot;file&quot; name=&quot;&quot; id=&quot;&quot; multiple=&quot;multiple&quot;&gt;</code></p>
<hr>
]]></content>
      <categories>
        <category>html_css</category>
      </categories>
      <tags>
        <tag>html_css</tag>
      </tags>
  </entry>
  <entry>
    <title>13-VPN</title>
    <url>/1-(0~50)/13-VPN/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="fff9a19c1563c059de4e9d3c45c06d6e5d86489f0087f32e86aa488a1fca7a47"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>14-galgame</title>
    <url>/1-(0~50)/14-galgame/</url>
    <content><![CDATA[<h2 id="1-我和她的世界末日"><a href="#1-我和她的世界末日" class="headerlink" title="1. 我和她的世界末日"></a>1. 我和她的世界末日</h2><p><a href="https://pan.baidu.com/s/1QnV1k4yvcb_DcBrHW5TItA">https://pan.baidu.com/s/1QnV1k4yvcb_DcBrHW5TItA</a></p>
<p>eeec</p>
<a id="more"></a>

<p><img src="http://bucket-c70.test.upcdn.net/14-galgame/01.png" alt="1"></p>
<p>注意：</p>
<ul>
<li><p>打开游戏点击：LAUNCHER_x64.exe；</p>
</li>
<li><p>好像bgm有点问题，是噪音；2020-8-18 22:44:10</p>
<blockquote>
<p>请右键点击WINDOWS右下角栏的喇叭图标，选择</p>
<p>声音-播放-</p>
<p>扬声器属性-高级</p>
<p>默认格式设置为48000Hz</p>
</blockquote>
<p>我先设置成了48000Hz，结果马上就没了噪音；</p>
<p>然后也恢复了设置（96000Hz）；</p>
<p>然后。。过了一会又来了；2020-8-18 22:52:50</p>
<p>我决定设置成48000Hz并不改回；</p>
<blockquote>
<p>天啊，居然开始界面有bgm，原来是我开始是96000Hz所有没听到；</p>
<p>2020-8-18 22:56:11</p>
<p>就48000Hz，就算不玩这个游戏了，也暂时设置成48000Hz吧；</p>
<p>2020-8-18 22:56:35</p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="2-xxx"><a href="#2-xxx" class="headerlink" title="2. xxx"></a>2. xxx</h2>]]></content>
      <categories>
        <category>game</category>
      </categories>
      <tags>
        <tag>galgame</tag>
      </tags>
  </entry>
  <entry>
    <title>15-node.js</title>
    <url>/1-(0~50)/15-node.js/</url>
    <content><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2>]]></content>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>16-Python-collect</title>
    <url>/1-(0~50)/16-Python-collect_%E6%94%B6%E8%97%8F/</url>
    <content><![CDATA[<h2 id="1-10-行-Python-代码自动清理电脑重复文件"><a href="#1-10-行-Python-代码自动清理电脑重复文件" class="headerlink" title="1.  10 行 Python 代码自动清理电脑重复文件"></a>1.  10 行 Python 代码自动清理电脑重复文件</h2><p><a href="https://mp.weixin.qq.com/s/CBinFZO8iSUIdjy71bIhCw">https://mp.weixin.qq.com/s/CBinFZO8iSUIdjy71bIhCw</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>17-暂时没有</title>
    <url>/1-(0~50)/17-VPN/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>18-Typora</title>
    <url>/1-(0~50)/18-typora/</url>
    <content><![CDATA[<h2 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h2><h3 id="1-0-来源"><a href="#1-0-来源" class="headerlink" title="1.0 来源"></a>1.0 来源</h3><p><a href="https://www.jianshu.com/p/2f40341df631">https://www.jianshu.com/p/2f40341df631</a></p>
<hr>
<a id="more"></a>

<h3 id="1-1-符号输入"><a href="#1-1-符号输入" class="headerlink" title="1.1 符号输入"></a>1.1 符号输入</h3><figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="tag">\<span class="name">\</span></span>   反斜线</span><br><span class="line"><span class="tag">\<span class="name">`</span></span>   反引号</span><br><span class="line"><span class="tag">\<span class="name">*</span></span>   星号</span><br><span class="line"><span class="tag">\<span class="name">_</span></span>   底线</span><br><span class="line"><span class="tag">\<span class="name">&#123;</span></span> <span class="tag">\<span class="name">&#125;</span></span>  花括号</span><br><span class="line"><span class="tag">\<span class="name">[</span></span> <span class="tag">\<span class="name">]</span></span>  方括号</span><br><span class="line"><span class="tag">\<span class="name">(</span></span> <span class="tag">\<span class="name">)</span></span>  括弧</span><br><span class="line"><span class="tag">\<span class="name">#</span></span>   井字号</span><br><span class="line"><span class="tag">\<span class="name">+</span></span>   加号</span><br><span class="line"><span class="tag">\<span class="name">-</span></span>   减号</span><br><span class="line"><span class="tag">\<span class="name">.</span></span>   英文句点</span><br><span class="line"><span class="tag">\<span class="name">!</span></span>   惊叹号</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p>\   反斜线<br>`   反引号<br>*   星号<br>_   底线<br>{ }  花括号<br>[ ]  方括号<br>( )  括弧<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   惊叹号</p>
<hr>
<h3 id="1-2-特殊字符"><a href="#1-2-特殊字符" class="headerlink" title="1.2 特殊字符"></a>1.2 特殊字符</h3><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">&amp;copy;      版权      </span></span><br><span class="line"><span class="meta">&amp;reg;       注册商标</span></span><br><span class="line"><span class="meta">&amp;trade;     商标</span></span><br><span class="line"><span class="meta">&amp;nbsp;      空格</span></span><br><span class="line"><span class="meta">&amp;amp;       和号</span></span><br><span class="line"><span class="meta">&amp;quot;      引号</span></span><br><span class="line"><span class="meta">&amp;apos;      撇号</span></span><br><span class="line"><span class="meta">&amp;lt;        小于号</span></span><br><span class="line"><span class="meta">&amp;gt;        大于号</span></span><br><span class="line"><span class="meta">&amp;ne;        不等号</span></span><br><span class="line"><span class="meta">&amp;le;        小于等于</span></span><br><span class="line"><span class="meta">&amp;ge;        大于等于</span></span><br><span class="line"><span class="meta">&amp;cent;      分</span></span><br><span class="line"><span class="meta">&amp;pound;     磅</span></span><br><span class="line"><span class="meta">&amp;euro;      欧元</span></span><br><span class="line"><span class="meta">&amp;yen;       元</span></span><br><span class="line"><span class="meta">&amp;sect;      节</span></span><br><span class="line"><span class="meta">&amp;times;     乘号</span></span><br><span class="line"><span class="meta">&amp;divide;    除号</span></span><br><span class="line"><span class="meta">&amp;plusmn;    正负号</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p>&copy;      版权<br>&reg;       注册商标<br>&trade;     商标<br>&nbsp;      空格<br>&amp;       和号<br>&quot;      引号<br>&apos;      撇号<br>&lt;        小于号<br>&gt;        大于号<br>&ne;        不等号<br>&le;        小于等于<br>&ge;        大于等于<br>&cent;      分<br>&pound;     磅<br>&euro;      欧元<br>&yen;       元<br>&sect;      节<br>&times;     乘号<br>&divide;    除号<br>&plusmn;    正负号</p>
<hr>
<h3 id="1-3-快捷键"><a href="#1-3-快捷键" class="headerlink" title="1.3 快捷键"></a>1.3 快捷键</h3><h3 id="快捷键操作"><a href="#快捷键操作" class="headerlink" title="快捷键操作"></a>快捷键操作</h3><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">作用</th>
<th align="center">快捷键</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + 1</td>
<td align="center">一级 标题</td>
<td align="center">Ctrl + B</td>
<td align="center">字体加粗</td>
</tr>
<tr>
<td align="center">Ctrl + 2</td>
<td align="center">二级标题</td>
<td align="center">Ctrl + I</td>
<td align="center">字体倾斜</td>
</tr>
<tr>
<td align="center">Ctrl + 3</td>
<td align="center">三级标题</td>
<td align="center">Ctrl + U</td>
<td align="center">下划线</td>
</tr>
<tr>
<td align="center">Ctrl + 4</td>
<td align="center">四级标题</td>
<td align="center">Ctrl + Home</td>
<td align="center">返回顶部</td>
</tr>
<tr>
<td align="center">Ctrl + 5</td>
<td align="center">五级标题</td>
<td align="center">Ctrl + End</td>
<td align="center">返回底部</td>
</tr>
<tr>
<td align="center">Ctrl + 6</td>
<td align="center">六级标题</td>
<td align="center">Ctrl + T</td>
<td align="center">创建表格</td>
</tr>
<tr>
<td align="center">Ctrl + L</td>
<td align="center">选中一行</td>
<td align="center">Ctrl + K</td>
<td align="center">创造超链接</td>
</tr>
<tr>
<td align="center">Ctrl + D</td>
<td align="center">选择一个单词</td>
<td align="center">Ctrl + F</td>
<td align="center">搜索</td>
</tr>
<tr>
<td align="center">Ctrl + E</td>
<td align="center">选中相同格式的文字</td>
<td align="center">Ctrl + H</td>
<td align="center">搜索并替换</td>
</tr>
<tr>
<td align="center">Alt + Shift + 5</td>
<td align="center">删除线</td>
<td align="center">Ctrl + Shift + I</td>
<td align="center">插入图片</td>
</tr>
</tbody></table>
<p>作者：buddyhs<br>链接：<a href="https://www.jianshu.com/p/2f40341df631">https://www.jianshu.com/p/2f40341df631</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<hr>
<h3 id="1-4-多行代码-代码"><a href="#1-4-多行代码-代码" class="headerlink" title="1.4 多行代码+代码"></a>1.4 多行代码+代码</h3><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">​```(~~~) language</span><br><span class="line">​```              -&gt;普通文本</span><br><span class="line">​```c             -&gt;c语言</span><br><span class="line">​```python        -&gt;python </span><br><span class="line">​```c++           -&gt;c++</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="2-改变高亮颜色"><a href="#2-改变高亮颜色" class="headerlink" title="2. 改变高亮颜色"></a>2. 改变高亮颜色</h2><p>网上所说：</p>
<p><a href="https://blog.csdn.net/tl4832194/article/details/107921933">https://blog.csdn.net/tl4832194/article/details/107921933</a></p>
<p>1.位置：</p>
<p>C:\Users\Administrator\AppData\Roaming\Typora\themes</p>
<p>2.这是自己找到过一次了，最开始在这：</p>
<ul>
<li>在typora左上角文件里面</li>
<li>偏好设置</li>
<li>外观</li>
<li>打开主题文件夹；就是上面的路径；</li>
</ul>
<p>3.正文：</p>
<ul>
<li>mark是找不到的，自己添加</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#DC143C</span>;  <span class="comment">/* #DC143C 代表红色 */</span></span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0px</span> solid <span class="number">#ffffff</span>;  <span class="comment">/* 这里是字体颜色，也可以更改 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>不知道border-bottom干嘛，说是字体颜色，也没有变化；</p>
<p>难道要把 0px 改为 1px？</p>
<p>我没有多想，直接改为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">mark</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);  <span class="comment">/* #DC143C 代表红色 */</span></span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#DC143C</span>;  <span class="comment">/* 这里是字体颜色，也可以更改 */</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>backgorund是背景色，如果不修改，默认是黄色</p>
<p>而且：修改为：#fafafa，居然有灰色；</p>
<p>就换成255，255，255（也是white）</p>
<p>没有灰色；</p>
</blockquote>
<p>依然有效；</p>
<br />

<hr>
<h2 id="3-改变背景颜色"><a href="#3-改变背景颜色" class="headerlink" title="3. 改变背景颜色"></a>3. 改变背景颜色</h2><p>1.去主题文件修改css</p>
<ul>
<li><p>主题文件路径：</p>
<p>C:\Users\Administrator\AppData\Roaming\Typora\themes</p>
</li>
<li><p>正确前往方向：</p>
<p><img src="http://bucket-c70.test.upcdn.net/18/1.png" alt="1"></p>
</li>
</ul>
<p>2.修改css</p>
<ul>
<li><p>我是直接在body添加代码</p>
<p><code>background-color: rgb(204, 232, 207)</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;Open Sans&quot;</span>,<span class="string">&quot;Clear Sans&quot;</span>, <span class="string">&quot;Helvetica Neue&quot;</span>, Helvetica, Arial, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">51</span>, <span class="number">51</span>, <span class="number">51</span>);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">204</span>, <span class="number">232</span>, <span class="number">207</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>body在第45行</p>
</li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>19-chrome</title>
    <url>/1-(0~50)/19-%E8%B0%B7%E6%AD%8C%E6%89%A9%E5%B1%95/</url>
    <content><![CDATA[<h2 id="1-扩展"><a href="#1-扩展" class="headerlink" title="1. 扩展"></a>1. 扩展</h2><h3 id="1-1-IDM"><a href="#1-1-IDM" class="headerlink" title="1.1 IDM"></a>1.1 IDM</h3><p>1.本地IDM.exe无法下载，没有权限</p>
<ul>
<li>IDM之前我一直用的本地；</li>
<li>后来脚本生成百度云盘的直连无法用IDM下载了；</li>
</ul>
<a id="more"></a>

<p>2.组队灵逗士给我说：</p>
<ul>
<li>用扩展插件下</li>
<li>不然IDM获取不了浏览器的cookie</li>
<li>度盘现在未登录就是无法下载的</li>
<li>你不用扩展插件拿到的链接，没有附带cookie，就不是登录状态啊</li>
</ul>
<p>3.然后扩展文件在本地目录下有</p>
<ul>
<li>IDM安装目录下应该有，crx格式的</li>
</ul>
<p>4.为什么不去chrome的扩展市场里面搜IDM扩展呢？</p>
<ul>
<li>因为<a href="https://www.internetdownloadmanager.com/register/new_faq/bi9.html">官方文档</a>说了在Google Store里找到的都是伪造的；</li>
<li>官网没在扩展市场里面部署IDM插件</li>
<li>即使你搜到了，也不是官方的；</li>
<li>官方的就是目录下的；</li>
<li>同时文档里面有使用扩展的一些==配置==</li>
</ul>
<hr>
<h3 id="1-2-解除B站区域限制"><a href="#1-2-解除B站区域限制" class="headerlink" title="1.2 解除B站区域限制"></a>1.2 解除B站区域限制</h3><p>链接：<a href="https://greasyfork.org/zh-CN/scripts/25718-解除b站区域限制">https://greasyfork.org/zh-CN/scripts/25718-解除b站区域限制</a></p>
]]></content>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>20-Pixiv</title>
    <url>/1-(0~50)/20-Pixiv/</url>
    <content><![CDATA[<h2 id="1-下载动图"><a href="#1-下载动图" class="headerlink" title="1. 下载动图"></a>1. 下载动图</h2><p>P站直接鼠标右键是无法下载动图的；</p>
<a id="more"></a>

<h3 id="1-1-Pixiv工具箱"><a href="#1-1-Pixiv工具箱" class="headerlink" title="1.1 Pixiv工具箱"></a>1.1 Pixiv工具箱</h3><p>0.下载</p>
<ul>
<li>这是谷歌浏览器扩展</li>
<li>也不是必须谷歌浏览器，基于chromium内核的都能用chrome扩展</li>
<li>即：极速浏览器</li>
</ul>
<p><img src="http://bucket-c70.test.upcdn.net/20/1.png" alt="1"></p>
<p>1.刚开始无效</p>
<ul>
<li><p>就是没效果，不知道哪里下载；</p>
</li>
<li><p>具体是没这个：</p>
<p><img src="http://bucket-c70.test.upcdn.net/20/2.png" alt="2"></p>
</li>
</ul>
<p>2.配置</p>
<ul>
<li><img src="http://bucket-c70.test.upcdn.net/20/3.png" alt="3" style="zoom:80%;" />
</li>
<li><p>如何可以配置？</p>
<p>左上角，鼠标右键，选项；</p>
</li>
<li><p><img src="http://bucket-c70.test.upcdn.net/20/5.png" alt="5"></p>
</li>
</ul>
<p>3.还是无效</p>
<ul>
<li>其实我当时，这些弄了，还是无效。配置里面感觉能打开的，都打开了；</li>
</ul>
<p>3.1 后来我关闭所有浏览器所有页面，再打开有效。</p>
<ul>
<li>我感觉是关闭浏览器所有页面的效果</li>
<li>新建页面和刷新都不行，实验过</li>
</ul>
<p>3.2 也许扩展设置的刷新，就是需要这样</p>
<hr>
<h3 id="1-2-PixivAnimatDownloader"><a href="#1-2-PixivAnimatDownloader" class="headerlink" title="1.2 PixivAnimatDownloader"></a>1.2 PixivAnimatDownloader</h3><p>1.这是一个小程序，小软件，exe。</p>
<ul>
<li>但也需要扩展插件协助；</li>
</ul>
<p>2.自己还没用</p>
<ul>
<li>我在上面成功使用了Pixiv工具箱过，就没用了</li>
</ul>
<p>3.百度，是百度不到最新版本的，可能在微博</p>
<ul>
<li>微博找也麻烦。</li>
<li>还好群友给了一份，我问他怎么找的，他说百度。</li>
<li>我叫他教教我怎么百度到了，就没回话了。又少一招</li>
</ul>
<p>4.软件下载</p>
<ul>
<li><a href="https://wws.lanzous.com/b01nlyb7i">https://wws.lanzous.com/b01nlyb7i</a><br>密码:36z8</li>
<li>是蓝奏云，能不百度云盘，就不百度云盘</li>
<li>里面有crx（扩展文件）</li>
</ul>
<p>5.时间：2020-9-6 11:52:44</p>
<hr>
]]></content>
      <tags>
        <tag>P站</tag>
      </tags>
  </entry>
  <entry>
    <title>21-window系统</title>
    <url>/1-(0~50)/21-windows/</url>
    <content><![CDATA[<h2 id="1-window10"><a href="#1-window10" class="headerlink" title="1. window10"></a>1. window10</h2><h3 id="1-1-两种方法，让最新版-Windows-10-的字体更「养眼」"><a href="#1-1-两种方法，让最新版-Windows-10-的字体更「养眼」" class="headerlink" title="1.1 两种方法，让最新版 Windows 10 的字体更「养眼」"></a>1.1 两种方法，让最新版 Windows 10 的字体更「养眼」</h3><p><a href="https://zhuanlan.zhihu.com/p/96114832">https://zhuanlan.zhihu.com/p/96114832</a></p>
<a id="more"></a>

<h3 id="1-2-什么样的机器-配置该装什么版本的系统？"><a href="#1-2-什么样的机器-配置该装什么版本的系统？" class="headerlink" title="1.2 什么样的机器/配置该装什么版本的系统？"></a>1.2 什么样的机器/配置该装什么版本的系统？</h3><p><a href="https://www.winos.me/archives/481.html">https://www.winos.me/archives/481.html</a></p>
<hr>
<h3 id="1-3-win10-字体渲染优化-色彩调整"><a href="#1-3-win10-字体渲染优化-色彩调整" class="headerlink" title="1.3 win10 字体渲染优化 色彩调整"></a>1.3 win10 字体渲染优化 色彩调整</h3><p> <a href="https://www.cnblogs.com/hongdada/p/8432667.html">链接：win10 字体渲染优化 色彩调整</a></p>
<hr>
<h3 id="1-4-emoji"><a href="#1-4-emoji" class="headerlink" title="1.4 emoji"></a>1.4 emoji</h3><p> 补全Windows10中的emoji 替换系统emoji字体</p>
<p><a href="https://blog.csdn.net/u014390186/article/details/103969682">https://blog.csdn.net/u014390186/article/details/103969682</a></p>
<p>1.也可以直接2.1，然后安全模式。</p>
<p>2.与win7的差别，仅是能不能直接拖入C:\Windows\fonts文件夹；2020-9-13 00:25:14</p>
<hr>
<h2 id="2-win7"><a href="#2-win7" class="headerlink" title="2. win7"></a>2. win7</h2><h3 id="2-1-添加字体Segoe-UI-Emoji"><a href="#2-1-添加字体Segoe-UI-Emoji" class="headerlink" title="2.1 添加字体Segoe UI Emoji"></a>2.1 添加字体Segoe UI Emoji</h3><p>0.组队给我说的  ；2020-9-12 22:49:45</p>
<p>1.<a href="http://getemoji.com/">http://getemoji.com/</a> ; 看看这网页，有显示不出来的么</p>
<p>2.Windows上，emoji符号也是依赖于字体的</p>
<ul>
<li>emoji表情本来就是一个一个的unicode码所定义的字符</li>
<li><img src="http://bucket-c70.test.upcdn.net/21/1.png" alt="1"></li>
<li>主要是这两个字体</li>
</ul>
<p>3.安装要放在：C:\Windows\fonts，之前都不知道这里有一个字体文件夹。</p>
<ul>
<li>这个文件夹内容是不会变的，你安装的字体会在另一个地方引用</li>
<li>进PE，手动覆盖文件</li>
<li>安全模式应该也行</li>
<li>系统是在离线模式下，覆盖文件就行</li>
</ul>
<p>4.字体资源：</p>
<ul>
<li><a href="https://wws.lanzous.com/iylDwgkghpe">Segoe UI Emoji - 版本 1.29</a></li>
<li><a href="https://wws.lanzous.com/ilxqrgkghqf">Segoe UI Symbol - Version 6.23</a></li>
</ul>
<p>5.不过，也可以试试。</p>
<ul>
<li><p>试试不用PE，安全模式安装，看有没有效果；2020-9-12 23:10:12</p>
</li>
<li><p>win7有效；2020-9-12 23:16:24</p>
<ul>
<li><p>不过我是拖进C:\Windows\fonts 安装的。不是在控制面板那边的字体安装的。</p>
</li>
<li><p>不知道拖进控制面板字体那边安装是否有效</p>
<p>不过这次拖进C:\Windows\fonts安装，控制面板那边也能看到；</p>
<p>至少C:\Windows\fonts这边的操作是影响那边的</p>
</li>
<li><p>组队说，这两把都是同一个地方，看来我误会了“另一个地方”</p>
<p><img src="http://bucket-c70.test.upcdn.net/21/2.png" alt="2"></p>
<p>最终是什么地方，不清楚；</p>
</li>
</ul>
</li>
</ul>
<p>6.</p>
<hr>
<h2 id="3-文件夹权限"><a href="#3-文件夹权限" class="headerlink" title="3. 文件夹权限"></a>3. 文件夹权限</h2><p>1.C盘下有一些文件夹说没有权限打开</p>
<p><img src="../img/21/1.png" alt="1"></p>
<p>2.鼠标右键的-管理员获取权限不够快</p>
<p>3.右键文件夹–属性–安全-编辑-添加-写入名字-检查-确定</p>
<p><img src="../img/21/2.png" alt="1"></p>
<br />

<hr>
]]></content>
      <tags>
        <tag>window</tag>
      </tags>
  </entry>
  <entry>
    <title>22-NAS</title>
    <url>/1-(0~50)/22-NAS/</url>
    <content><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><p><a href="https://www.bilibili.com/read/cv1786828">https://www.bilibili.com/read/cv1786828</a></p>
<p>这个介绍，只是介绍有什么用，没说怎么用；2020-9-10 03:34:29</p>
<a id="more"></a>

<h2 id="2-组装"><a href="#2-组装" class="headerlink" title="2. 组装"></a>2. 组装</h2><p><a href="https://www.bilibili.com/read/cv2095823">https://www.bilibili.com/read/cv2095823</a></p>
]]></content>
      <tags>
        <tag>NAS</tag>
      </tags>
  </entry>
  <entry>
    <title>23-VMware-虚拟机</title>
    <url>/1-(0~50)/23-VMware_WorkStation/</url>
    <content><![CDATA[<h2 id="1-怎么删除虚拟机"><a href="#1-怎么删除虚拟机" class="headerlink" title="1. 怎么删除虚拟机"></a>1. 怎么删除虚拟机</h2><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a><strong>方法一：</strong></h3><a id="more"></a>

<p>1、选中要删除的虚拟机操作系统，单击右键，选择 “管理” 选项。</p>
<p>2、然后在选择 “从磁盘中删除” 选项即可删除该虚拟机操作系统。</p>
<img src="../img/23/1.png" alt="1" style="zoom:80%;" />

<h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a><strong>方法二：</strong></h3><p>1、选中要删除的虚拟机操作系统，选择 VMware 软件最上方的 “虚拟机”选项。</p>
<p>2、然后选择 “管理” 选项。</p>
<p>3、然后选择 “从磁盘中删除” 选项即可删除该虚拟机操作系统 。</p>
<h3 id="1-2-空间恢复"><a href="#1-2-空间恢复" class="headerlink" title="1.2 空间恢复"></a>1.2 空间恢复</h3><p>1.以前是分区给虚拟机使用的。</p>
<ul>
<li>现在不用了，弄回去；</li>
</ul>
<p>2.用软件：DiskGenius.exe；</p>
<ul>
<li>下载网址：<a href="https://www.diskgenius.cn">https://www.diskgenius.cn</a></li>
</ul>
<p>3.把不用的分区删除，变成空闲状态，在分配给x分区，我感觉比较好；</p>
<ul>
<li>删除分区后，要在右上角-磁盘-保存分区</li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>VMware</tag>
      </tags>
  </entry>
  <entry>
    <title>24-vscode</title>
    <url>/1-(0~50)/24-VScode/</url>
    <content><![CDATA[<h2 id="1-插件"><a href="#1-插件" class="headerlink" title="1. 插件"></a>1. 插件</h2><h3 id="1-1-Bracket-Pair-Colorizer-2"><a href="#1-1-Bracket-Pair-Colorizer-2" class="headerlink" title="1.1 Bracket Pair Colorizer 2"></a>1.1 Bracket Pair Colorizer 2</h3><a id="more"></a>

<p><img src="../img/24/1.png" alt="1"></p>
<p>1.是一个找括号的</p>
<ul>
<li>虽然vscode自带了，但不明显</li>
</ul>
<p>2.效果：</p>
<p>会有一条线，颜色根据主题，链接两个括号；</p>
<h3 id="1-2-Auto-Rename-Tag"><a href="#1-2-Auto-Rename-Tag" class="headerlink" title="1.2 Auto Rename Tag"></a>1.2 Auto Rename Tag</h3><p>1.自动改标签</p>
<p>2.标签一般有两个，你改前面一个的时候，后面自动改了</p>
<p><img src="../img/24/2.png" alt="2"></p>
<p>3.它具备 auto close tag的功能，不需要安装这个；2020-9-14 20:24:02</p>
<ul>
<li>如果是需要闭合的标签，会自动闭合；</li>
</ul>
<hr>
<h3 id="1-3-CSS-Peek"><a href="#1-3-CSS-Peek" class="headerlink" title="1.3 CSS Peek"></a>1.3 CSS Peek</h3><p>1.在html代码这边可以直接寻找css</p>
<ul>
<li>ctrl + 鼠标左键</li>
<li>原本放在上面就能看到css，如果只有单一的css</li>
</ul>
<p>2.</p>
]]></content>
      <tags>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>25-JavaScript</title>
    <url>/25-JavaScript_%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="1-计算机编程基础"><a href="#1-计算机编程基础" class="headerlink" title="1. 计算机编程基础"></a>1. 计算机编程基础</h2><h3 id="1-1-编程语言"><a href="#1-1-编程语言" class="headerlink" title="1.1 编程语言"></a>1.1 编程语言</h3><h4 id="1-1-1-编程"><a href="#1-1-1-编程" class="headerlink" title="1.1.1 编程"></a>1.1.1 编程</h4><p>1.==编程==：就是让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。</p>
<a id="more"></a>

<p>2.==计算机程序==：就是计算机所执行的一系列的==指令集合==，而程序全部都是用我们所掌握的语言来编写的，所以人们要控制计算机一定要通过计算机语言向计算机发出命令。</p>
<p>3.从事编程的人员，就是==程序员==。  但是一般程序员都比较幽默，为了形容自己的辛苦工作，也成为“码农”， 或者  “程序猿”/ “程序媛”</p>
<p>4.注意：上面所定义的计算机指的是<strong>任何能够执行代码的设备</strong>，可能是智能手机、ATM机、黑莓PI、服务器等等。</p>
<hr>
<h4 id="1-1-2-计算机语言"><a href="#1-1-2-计算机语言" class="headerlink" title="1.1.2 计算机语言"></a>1.1.2 计算机语言</h4><p>1.==计算机语言==指用于==人与计算机之间通讯的语言==，它是人与计算机之间传递信息的==媒介==。</p>
<p>计算机语言的种类非常的多，总的来说可以分成机器语言，汇编语言和高级语言三大类。</p>
<p>实际上计算机最终所执行的都是 机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。</p>
<ul>
<li>计算机只认识机器语言。</li>
</ul>
<blockquote>
<p>0=00000000 1=00000001 2=00000010 3=00000011 4=00000100<br>5=00000101 6=00000110 7=00000111 8=00001000 9=00001001<br>10=00001010</p>
</blockquote>
<hr>
<h4 id="1-1-3-编程语言"><a href="#1-1-3-编程语言" class="headerlink" title="1.1.3 编程语言"></a>1.1.3 编程语言</h4><p>可以通过类似于人类语言的 ”语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。</p>
<p>编程语言是用来控制计算机的一系列指令，它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守。</p>
<p>如今通用的编程语言有两种形式：汇编语言和高级语言。</p>
<ul>
<li><p>汇编语言和机器语言实质是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，容易识别和记忆。</p>
</li>
<li><p>高级语言主要是相对于低级语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，常用的有C语言、C++、Java、C#、Python、PHP、JavaScript、Go语言、Objective-C、Swift等。</p>
</li>
</ul>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">C语言：puts(<span class="string">&quot;你好&quot;</span>)<span class="comment">;</span></span><br><span class="line">PHP：echo <span class="string">&quot;你好&quot;</span><span class="comment">;</span></span><br><span class="line">Java：System.out.println(<span class="string">&quot;你好&quot;</span>)<span class="comment">;</span></span><br><span class="line">JavaScript： alert(<span class="string">&quot;你好&quot;</span>）<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="1-1-4-翻译器"><a href="#1-1-4-翻译器" class="headerlink" title="1.1.4 翻译器"></a>1.1.4 翻译器</h4><p>高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，为此，我们需要一个翻译器。</p>
<p>翻译器可以将我们所编写的源代码转换为机器语言，这也被称为二进制化。 记住1和 0。</p>
<p><img src="../img/25/1.png" alt="1"></p>
<h4 id="1-1-5-编程语言与标记语言区别"><a href="#1-1-5-编程语言与标记语言区别" class="headerlink" title="1.1.5 编程语言与标记语言区别"></a>1.1.5 编程语言与标记语言区别</h4><p>1.编程语言有很强的逻辑和行为能力。在编程语言里, 你会看到很多 if else 、for 、while等具有逻辑性和行为能力的指令，这是主动的。</p>
<p>2.标记语言（html）不用于向计算机发出指令，常用于格式化和链接。标记语言的存在是用来被读取的, 他是被动的。</p>
<h5 id="1-1-6-总结"><a href="#1-1-6-总结" class="headerlink" title="1.1.6 总结"></a>1.1.6 总结</h5><p>1.计算机可以帮助人类解决某些问题<br>2.程序员利用编程语言编写程序发出指令控制计算机来实现这些任务<br>3.编程语言有机器语言、汇编语言、高级语言<br>4.高级语言需要一个翻译器转换为计算机识别的机器语言<br>5.编程语言是主动的有很强的逻辑性</p>
<hr>
<h3 id="1-2-计算机基础"><a href="#1-2-计算机基础" class="headerlink" title="1.2 计算机基础"></a>1.2 计算机基础</h3><h4 id="1-2-1-计算机组成"><a href="#1-2-1-计算机组成" class="headerlink" title="1.2.1 计算机组成"></a>1.2.1 计算机组成</h4><p><img src="../img/25/2.png" alt="2"></p>
<br />

<hr>
<h4 id="1-2-2-数据存储"><a href="#1-2-2-数据存储" class="headerlink" title="1.2.2 数据存储"></a>1.2.2 数据存储</h4><p>1.计算机内部使用二进制 0 和 1来表示数据。</p>
<p>2.所有数据，包括文件、图片等最终都是以二进制数据（0 和 1）的形式存放在硬盘中的。</p>
<p>3.所有程序，包括操作系统，本质都是各种数据，也以二进制数据的形式存放在硬盘中。平时我们所说的安装软件，其实就是把程序文件复制到硬盘中。</p>
<p>4.硬盘、内存都是保存的二进制数据。</p>
<h4 id="1-2-3-存储单位"><a href="#1-2-3-存储单位" class="headerlink" title="1.2.3 存储单位"></a>1.2.3 存储单位</h4><p>bit &lt; byte &lt; kb &lt; GB &lt; TB&lt;…..</p>
<ul>
<li>位(bit)：   1bit 可以保存一个 0 或者 1 （最小的存储单位）</li>
<li>字节(Byte)：1B = 8b</li>
<li>千字节(KB)：1KB = 1024B</li>
<li>兆字节(MB)：1MB = 1024KB</li>
<li>吉字节(GB):  1GB = 1024MB</li>
<li>太字节(TB):  1TB = 1024GB</li>
<li>……</li>
</ul>
<h4 id="1-2-4-程序运行"><a href="#1-2-4-程序运行" class="headerlink" title="1.2.4 程序运行"></a>1.2.4 程序运行</h4><p><img src="../img/25/3.png" alt="3"></p>
<p>1.打开某个程序时，先从硬盘中把程序的代码加载到内存中<br>2.CPU执行内存中的代码</p>
<p>==注意==：之所以要内存的一个重要原因，是因为 cpu 运行太快了，如果只从硬盘中读数据，会浪费cpu性能，所以，才使用存取速度更快的内存来保存运行时的数据。（内存是电，硬盘是机械）</p>
<hr>
<h2 id="2-初识JavaScript"><a href="#2-初识JavaScript" class="headerlink" title="2. 初识JavaScript"></a>2. 初识JavaScript</h2><p>1.目标：</p>
<p> 能够说出 JavaScript 是什么<br> 能够知道 JavaScript 的发展历史<br> 能够说出浏览器执行 JavaScript 的原理<br> 能够说出 JavaScript 由哪三部分组成<br> 能够写出 JavaScript 三个输入输出语句</p>
<hr>
<h3 id="2-1-初识js"><a href="#2-1-初识js" class="headerlink" title="2.1 初识js"></a>2.1 初识js</h3><h4 id="2-1-1-JavaScript-历史"><a href="#2-1-1-JavaScript-历史" class="headerlink" title="2.1.1 JavaScript 历史"></a>2.1.1 JavaScript 历史</h4><ul>
<li>布兰登·艾奇（Brendan Eich，1961年～）。</li>
<li>神奇的大哥用10天完成 JavaScript 设计。</li>
<li>最初命名为 LiveScript，后来在与 Sun 合作之后将其改名为 JavaScript。</li>
</ul>
<hr>
<h4 id="2-1-2-JavaScript-是什么"><a href="#2-1-2-JavaScript-是什么" class="headerlink" title="2.1.2 JavaScript 是什么"></a>2.1.2 JavaScript 是什么</h4><ul>
<li>JavaScript 是世界上最流行的语言之一，是一种运行在客户端的脚本语言 （Script 是脚本的意思）<ul>
<li>自己的电脑，客户端；远程接收请求的是服务器；</li>
</ul>
</li>
<li>脚本语言：不需要编译，运行过程中由 js 解释器( js 引擎）逐行来进行解释并执行</li>
<li>现在也可以基于 Node.js 技术进行服务器端编程<ul>
<li>既可以做前端，也可以做后端；</li>
</ul>
</li>
</ul>
<p><img src="../img/25/4.png" alt="4"></p>
<hr>
<h4 id="2-1-3-JS的作用"><a href="#2-1-3-JS的作用" class="headerlink" title="2.1.3 JS的作用"></a>2.1.3 JS的作用</h4><ul>
<li>表单动态校验（密码强度检测）  （ JS 产生最初的目的 ）<ul>
<li>以前，输入不合格的数据，例如：要求数字结构，输入字母；</li>
<li>也要送往后台，后台验证后，把不合格打回</li>
<li>增加了后端的压力；</li>
</ul>
</li>
<li>网页特效</li>
<li>服务端开发(Node.js)</li>
<li>桌面程序(Electron)</li>
<li>App(Cordova) </li>
<li>控制硬件-物联网(Ruff)</li>
<li>游戏开发(cocos2d-js)</li>
</ul>
<hr>
<h4 id="2-1-4-HTML-CSS-JS-的关系"><a href="#2-1-4-HTML-CSS-JS-的关系" class="headerlink" title="2.1.4 HTML/CSS/JS 的关系"></a>2.1.4 HTML/CSS/JS 的关系</h4><p>1.HTML/CSS 标记语言–描述类语言</p>
<ul>
<li>HTML 决定网页结构和内容( 决定看到什么 )，相当于人的身体</li>
<li>CSS 决定网页呈现给用户的模样( 决定好不好看 )，相当于给人穿衣服、化妆</li>
</ul>
<p>2.JS 脚本语言–编程类语言 </p>
<ul>
<li>实现业务逻辑和页面控制( 决定功能 )，相当于人的各种动作 </li>
</ul>
<hr>
<h4 id="2-1-5-浏览器执行js简介"><a href="#2-1-5-浏览器执行js简介" class="headerlink" title="2.1.5 浏览器执行js简介"></a>2.1.5 浏览器执行js简介</h4><p>浏览器分成两部分：渲染引擎和 JS 引擎</p>
<ul>
<li>渲染引擎：用来解析HTML与CSS，俗称内核，比如 chrome 浏览器的 blink ，老版本的 webkit</li>
<li>JS 引擎：也称为 JS 解释器。 用来读取网页中的JavaScript代码，对其处理后运行，比如 chrome 浏览器的 V8</li>
</ul>
<p>浏览器本身并不会执行JS代码，而是通过内置 JavaScript 引擎(解释器) 来执行 JS 代码 。JS 引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，</p>
<p>所以 JavaScript 语言归为脚本语言，会逐行解释执行。</p>
<p><img src="../img/25/5.png" alt="5"></p>
<hr>
<h4 id="2-1-6-JS的组成"><a href="#2-1-6-JS的组成" class="headerlink" title="2.1.6 JS的组成"></a>2.1.6 JS的组成</h4><p><img src="../img/25/6.png" alt="6"></p>
<p>1.JS基础，学习的是ECMAScript，js语法</p>
<p>2.JS-API，学习的是dom与bom；</p>
<hr>
<h5 id="1-ECMA"><a href="#1-ECMA" class="headerlink" title="1. ECMA"></a>1. ECMA</h5><p>1.什么是ECMA？</p>
<ul>
<li>ECMAScript 是由ECMA 国际（ 原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为 JavaScript 或 JScript，但实际上后两者是 ECMAScript 语言的实现和扩展。</li>
</ul>
<p><img src="../img/25/7.png" alt="7"></p>
<ul>
<li>ECMAScript：ECMAScript 规定了JS的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套JS语法工业标准。</li>
<li>更多参看MDN:  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview</a></li>
</ul>
<hr>
<h5 id="2-DOM"><a href="#2-DOM" class="headerlink" title="2. DOM"></a>2. DOM</h5><p>1.DOM ——文档对象模型</p>
<p>2.文档对象模型（Document Object Model，简称DOM），是==W3C==组织推荐的处理可扩展标记语言的==标准编程接口==。通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</p>
<hr>
<h5 id="3-BOM"><a href="#3-BOM" class="headerlink" title="3. BOM"></a>3. BOM</h5><ul>
<li>BOM ——浏览器对象模型</li>
<li>BOM (Browser Object Model，简称BOM) 是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。<ul>
<li>例如，滑动右侧滚动条，到一定的地方（或者说滑到一定的高度）弹出一个窗口</li>
</ul>
</li>
</ul>
<hr>
<h4 id="2-1-7-JS初体验"><a href="#2-1-7-JS初体验" class="headerlink" title="2.1.7 JS初体验"></a>2.1.7 JS初体验</h4><p>JS 有3种书写位置，分别为行内、内嵌和外部。 </p>
<h5 id="1-行内式-JS"><a href="#1-行内式-JS" class="headerlink" title="1. 行内式 JS"></a>1. 行内式 JS</h5><p><code>&lt;input type=&quot;button&quot; value=&quot;点我试试&quot; onclick=&quot;alert(&#39;Hello World&#39;)&quot; /&gt;</code></p>
<ul>
<li>可以将单行或少量 JS 代码写在HTML标签的事件属性中（以 on 开头的属性），如：onclick</li>
<li>注意单双引号的使用：在HTML中我们推荐使用双引号, JS 中我们推荐使用单引号</li>
<li>可读性差， 在html中编写JS大量代码时，不方便阅读；</li>
<li>引号易错，引号多层嵌套匹配时，非常容易弄混；</li>
<li>特殊情况下使用</li>
</ul>
<h5 id="2-内嵌-JS"><a href="#2-内嵌-JS" class="headerlink" title="2. 内嵌 JS"></a>2. 内嵌 JS</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   alert(<span class="string">&#x27;Hello  World~!&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可以将多行JS代码写到 <code>&lt;script&gt;</code> 标签中</li>
<li>内嵌 JS 是学习时常用的方式</li>
</ul>
<h5 id="3-外部-JS文件"><a href="#3-外部-JS文件" class="headerlink" title="3. 外部 JS文件"></a>3. 外部 JS文件</h5><p><code>&lt;script src=&quot;my.js&quot;&gt;&lt;/script&gt;</code></p>
<ul>
<li>利于HTML页面代码结构化，把大段 JS代码独立到 HTML 页面之外，既美观，也方便文级别的复用</li>
<li>引用外部 JS文件的 script 标签中间不可以写代码<ul>
<li><code>&lt;script src=&quot;my.js&quot;&gt;1123&lt;/script&gt;</code>不能在这个地方写1123，当然其他的也不能写</li>
</ul>
</li>
<li>适合于JS 代码量比较大的情况</li>
</ul>
<hr>
<h3 id="2-2-JS注释"><a href="#2-2-JS注释" class="headerlink" title="2.2 JS注释"></a>2.2 JS注释</h3><h4 id="2-2-1-单行注释"><a href="#2-2-1-单行注释" class="headerlink" title="2.2.1 单行注释"></a>2.2.1 单行注释</h4><p>为了提高代码的可读性，JS与CSS一样，也提供了注释功能。JS中的注释主要有两种，分别是单行注释和多行注释。</p>
<p>单行注释的注释方式如下：</p>
<p><code>// 我是一行文字，不想被 JS引擎 执行，所以 注释起来</code></p>
<p>//  用来注释单行文字（  快捷键   ctrl  +  /   ）</p>
<hr>
<h4 id="2-2-2-多行注释"><a href="#2-2-2-多行注释" class="headerlink" title="2.2.2 多行注释"></a>2.2.2 多行注释</h4><p>多行注释的注释方式如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  获取用户年龄和姓名</span></span><br><span class="line"><span class="comment">  并通过提示框显示出来</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>/* */  用来注释多行文字（ 默认快捷键  alt +  shift  + a ） </p>
<p>快捷键修改为：   ctrl + shift  +  /  </p>
<p>vscode → 首选项按钮  →  键盘快捷方式 →  查找 原来的快捷键  → 修改为新的快捷键 → 回车确认</p>
<hr>
<h3 id="2-3-JavaScript-输入输出语句"><a href="#2-3-JavaScript-输入输出语句" class="headerlink" title="2.3 JavaScript 输入输出语句"></a>2.3 JavaScript 输入输出语句</h3><p>为了方便信息的输入输出，JS中提供了一些输入输出语句，其常用的语句如下：</p>
<table>
<thead>
<tr>
<th><strong>方法</strong></th>
<th><strong>说明</strong></th>
<th><strong>归属</strong></th>
</tr>
</thead>
<tbody><tr>
<td>alert(msg)</td>
<td>浏览器弹出警示框</td>
<td>浏览器</td>
</tr>
<tr>
<td>console.log(msg)</td>
<td>浏览器控制台打印输出信息</td>
<td>浏览器</td>
</tr>
<tr>
<td>prompt(info)</td>
<td>浏览器弹出输入框，用户可以输入</td>
<td>浏览器</td>
</tr>
</tbody></table>
<p>注意：alert() 主要用来显示消息给用户，console.log() 用来给程序员自己看运行时的消息。</p>
<hr>
<h2 id="3-变量"><a href="#3-变量" class="headerlink" title="3. 变量"></a>3. 变量</h2><p>目标：</p>
<p> 能够说出变量的主要作用<br> 能够写出变量的初始化<br> 能够说出变量的命名规范<br> 能够画出变量是如何在内存中存储的<br> 能够写出交换变量案例</p>
<hr>
<h3 id="3-1-变量的概述"><a href="#3-1-变量的概述" class="headerlink" title="3.1 变量的概述"></a>3.1 变量的概述</h3><h4 id="3-1-1-什么是变量"><a href="#3-1-1-什么是变量" class="headerlink" title="3.1.1 什么是变量"></a>3.1.1 什么是变量</h4><p>白话：变量就是一个装东西的盒子。<br>通俗：变量是用于存放数据的==容器==。 我们通过 ==变量名== 获取数据，甚至数据可以修改。</p>
<hr>
<h4 id="3-1-2-变量在内存中的存储"><a href="#3-1-2-变量在内存中的存储" class="headerlink" title="3.1.2 变量在内存中的存储"></a>3.1.2 变量在内存中的存储</h4><p>本质：变量是程序在<strong>内存</strong>中申请的一块用来存放数据的<strong>空间</strong>。</p>
<p>类似我们酒店的房间，一个房间就可以看做是一个变量。  </p>
<img src="../img/25/8.png" alt="8" style="zoom:80%;" />

<ul>
<li>变量由：num2（变量名）+ 6（向内存申请的空间）组成的；</li>
</ul>
<hr>
<h3 id="3-2-变量的使用"><a href="#3-2-变量的使用" class="headerlink" title="3.2 变量的使用"></a>3.2 变量的使用</h3><p>变量在使用时分为两步： 1. 声明变量   2. 赋值 </p>
<h4 id="3-2-1-声明变量"><a href="#3-2-1-声明变量" class="headerlink" title="3.2.1 声明变量"></a>3.2.1 声明变量</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  声明变量  </span></span><br><span class="line"><span class="keyword">var</span> age; <span class="comment">//  声明一个 名称为age 的变量     </span></span><br></pre></td></tr></table></figure>

<ul>
<li>==var== 是一个 JS关键字，用来声明变量( <a href="https://fanyi.baidu.com/translate?aldtype=16047&query=ECMA&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/variable">variable</a> 变量的意思 )。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管</li>
<li>age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</li>
</ul>
<h4 id="3-2-2-赋值"><a href="#3-2-2-赋值" class="headerlink" title="3.2.2 赋值"></a>3.2.2 赋值</h4><p><code>age = 10; // 给 age  这个变量赋值为 10</code></p>
<ul>
<li>= 用来把右边的值赋给左边的变量空间中，此处代表赋值的意思</li>
<li>变量值是程序员保存到变量空间里的值</li>
</ul>
<h4 id="3-2-3-变量的初始化"><a href="#3-2-3-变量的初始化" class="headerlink" title="3.2.3 变量的初始化"></a>3.2.3 变量的初始化</h4><p><code>var age  = 18;  // 声明变量同时赋值为 18</code></p>
<p>声明一个变量并赋值， 我们称之为==变量的初始化==。</p>
<hr>
<h4 id="3-2-4-案例"><a href="#3-2-4-案例" class="headerlink" title="3.2.4 案例"></a>3.2.4 案例</h4><p>1.弹出一个输入框，提示用户输入姓名。<br>2.弹出一个对话框，输出用户刚才输入的姓名。</p>
<p>3.代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myname = prompt (<span class="string">&#x27;请输入姓名&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&#x27;欢迎&#x27;</span> + myname);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="3-3-变量语法扩展"><a href="#3-3-变量语法扩展" class="headerlink" title="3.3 变量语法扩展"></a>3.3 变量语法扩展</h3><h4 id="3-3-1-更新变量"><a href="#3-3-1-更新变量" class="headerlink" title="3.3.1 更新变量"></a>3.3.1 更新变量</h4><p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line">age = <span class="number">81</span>;   <span class="comment">// 最后的结果就是81因为18 被覆盖掉了          </span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>声明过的变量不需要再次声明。</p>
<p>原理：内存空间已经开辟与分配，并取名为age，所以再次使用这片空间，直接用变量名 age 即可；</p>
</li>
</ul>
<br />

<h4 id="3-3-2-同时声明多个变量"><a href="#3-3-2-同时声明多个变量" class="headerlink" title="3.3.2 同时声明多个变量"></a>3.3.2 同时声明多个变量</h4><p>同时声明多个变量时，只需要写一个 var， 多个变量名之间使用英文逗号隔开。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/* var age = 18;</span></span><br><span class="line"><span class="comment">    var address = &#x27;或影城&#x27;;</span></span><br><span class="line"><span class="comment">    var gz = 2000; */</span></span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">18</span>,</span><br><span class="line">        address = <span class="string">&#x27;火隐村&#x27;</span>,</span><br><span class="line">        gz = <span class="number">2000</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>逗号隔开</li>
</ul>
<p>也可以一排：</p>
<p><code>var age = 10,  name = &#39;zs&#39;, sex = 2;</code></p>
<hr>
<h4 id="3-3-3-声明变量的特殊情况"><a href="#3-3-3-声明变量的特殊情况" class="headerlink" title="3.3.3 声明变量的特殊情况"></a>3.3.3 声明变量的特殊情况</h4><table>
<thead>
<tr>
<th><strong>情况</strong></th>
<th><strong>说明</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody><tr>
<td>var age ; console.log (age);</td>
<td>只声明 不赋值</td>
<td>undefined</td>
</tr>
<tr>
<td>console.log(age)</td>
<td>不声明 不赋值 直接使用</td>
<td>报错</td>
</tr>
<tr>
<td>age  = 10; console.log (age);</td>
<td>不声明 只赋值</td>
<td>10</td>
</tr>
</tbody></table>
<ul>
<li><p>只声明 不赋值，程序也不知道是什么 = 未定义(undefined)</p>
</li>
<li><p>不声明 不赋值 直接使用 , vscode里不会保存，F12里能看到会报错</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">Uncaught ReferenceError: tset <span class="literal">is</span><span class="built_in"> not</span> defined</span><br><span class="line">    <span class="keyword">at</span> index3.html:<span class="number">13</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>不声明 只赋值，可以使用，默认为全局变量；</p>
</li>
</ul>
<hr>
<h3 id="3-4-变量命名规范"><a href="#3-4-变量命名规范" class="headerlink" title="3.4 变量命名规范"></a>3.4 变量命名规范</h3><ol>
<li><p>由字母(A-Za-z)、数字(0-9)、下划线(_)、美元符号( $ )组成，如：usrAge, num01, _name</p>
</li>
<li><p>严格区分大小写。var app; 和 var App; 是两个变量</p>
</li>
<li><p>不能 以数字开头。  18age   是错误的</p>
</li>
<li><p>不能 是关键字、保留字。例如：var、for、while</p>
</li>
</ol>
<ul>
<li>它们本身已经有了特殊的意义，能被申明就会破坏语言逻辑；</li>
</ul>
<ol start="5">
<li>变量名必须有意义： nl(nianling)   →     age  </li>
</ol>
<ul>
<li>如果要写中文，就得拼全:  xb = xiaBan;</li>
</ul>
<ol start="6">
<li><p>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。 myFirstName</p>
</li>
<li><p>不要用name作为变量名。</p>
<ul>
<li><p>虽然不是关键字 或 保留字，但本身不是未定义；</p>
</li>
<li><p>验证：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">console</span>.log(tel);</span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>只有console.log(tel)报错：<code>Uncaught ReferenceError: tset is not defined</code></p>
</li>
</ul>
</li>
</ol>
<p>7.1 而且百度一下，有很多 使用 name 作为 变量名，出错的情况；</p>
<ul>
<li><a href="https://blog.csdn.net/line233/article/details/82838686">做表单验证时</a></li>
<li><a href="https://blog.csdn.net/Shore_W/article/details/19004831?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">数组名时</a></li>
</ul>
<hr>
<h4 id="3-4-2-案例"><a href="#3-4-2-案例" class="headerlink" title="3.4.2 案例"></a>3.4.2 案例</h4><p>一下哪些是合法的变量名？</p>
<p><img src="../img/25/9.png" alt="9"></p>
<p>1-2. 不能数字开头</p>
<p>1-4. 不能数字开头</p>
<p>2-4. 没有安排&amp;符号，估计不是开头也不行</p>
<p>3-2. 中间不能空格</p>
<p>3-4. 关键字了</p>
<table>
<thead>
<tr>
<th>第一组</th>
<th>第二组</th>
<th>第三组</th>
</tr>
</thead>
<tbody><tr>
<td>var a</td>
<td>var userName</td>
<td>var thwWorld</td>
</tr>
<tr>
<td>var 1==×==</td>
<td>var $name</td>
<td>var the world==×==</td>
</tr>
<tr>
<td>var age18</td>
<td>var _sex</td>
<td>var the_world</td>
</tr>
<tr>
<td>var 18age==×==</td>
<td>var &amp;sex==×==</td>
<td>var for==×==</td>
</tr>
</tbody></table>
<br />

<hr>
<h3 id="3-5-案例"><a href="#3-5-案例" class="headerlink" title="3.5 案例"></a>3.5 案例</h3><p>要求：交换两个变量的值 ( 实现思路：使用一个 临时变量 用来做中间存储 )</p>
<p>1.自写：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> age = <span class="number">18</span>,</span></span><br><span class="line">            gz = 2000,</span><br><span class="line">            zhongjian;</span><br><span class="line">        zhongjian = age;</span><br><span class="line">        age = gz;</span><br><span class="line">        gz = zhongjian;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;age:&#x27;</span>+ age, <span class="string">&#x27;zhongjian:&#x27;</span> + zhongjian, <span class="string">&#x27;gz:&#x27;</span> + gz);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.资料：</p>
<img src="../img/25/10.png" alt="10" style="zoom:90%;" />

<br />

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// js 是编程语言有很强的逻辑性在里面： 实现这个要求的思路 先怎么做后怎么做 </span></span><br><span class="line">    <span class="comment">// 1. 我们需要一个临时变量帮我们</span></span><br><span class="line">    <span class="comment">// 2. 把apple1 给我们的临时变量 temp </span></span><br><span class="line">    <span class="comment">// 3. 把apple2 里面的苹果给 apple1 </span></span><br><span class="line">    <span class="comment">// 4. 把临时变量里面的值 给 apple2 </span></span><br><span class="line">    <span class="keyword">var</span> temp; <span class="comment">// 声明了一个临时变量为空</span></span><br><span class="line">    <span class="keyword">var</span> apple1 = <span class="string">&#x27;青苹果&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> apple2 = <span class="string">&#x27;红苹果&#x27;</span>;</span><br><span class="line">    temp = apple1; <span class="comment">// 把右边给左边</span></span><br><span class="line">    apple1 = apple2;</span><br><span class="line">    apple2 = temp;</span><br><span class="line">    <span class="built_in">console</span>.log(apple1);</span><br><span class="line">    <span class="built_in">console</span>.log(apple2);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="3-6-小结"><a href="#3-6-小结" class="headerlink" title="3.6 小结"></a>3.6 小结</h3><table>
<thead>
<tr>
<th>为什么需要变量？</th>
<th>因为我们一些数据需要保存，所以需要变量</th>
</tr>
</thead>
<tbody><tr>
<td>变量是什么？</td>
<td>变量就是一个容器，用来存放数据的。方便我们以后使用里面的数据</td>
</tr>
<tr>
<td>变量的本质是什么?</td>
<td>变量是内存里的一块空间，用来存储数据。</td>
</tr>
<tr>
<td>变量怎么使用的？</td>
<td>1.我们使用变量的时候，一定要声明变量，然后赋值<br />2.声明变量本质是去内存申请空间。</td>
</tr>
<tr>
<td>什么是变量的初始化？</td>
<td>声明变量并赋值我们称之为变量的初始化</td>
</tr>
<tr>
<td>变量命名规范有哪些？</td>
<td>这个多了，详见上面3.4 变量命名规范</td>
</tr>
<tr>
<td>交换2个变量值的思路？</td>
<td>1. 我们需要一个临时变量帮我们<br/>2. 把 a 给我们的临时变量 c <br/>3. 把 b 里面的苹果给 a <br/>4. 把 c 里面的值 给 b</td>
</tr>
</tbody></table>
<br />

<hr>
<h3 id="3-x-参考资料"><a href="#3-x-参考资料" class="headerlink" title="3.x 参考资料"></a>3.x 参考资料</h3><ul>
<li>PPT 与 PDF：<a href="https://wws.lanzous.com/itsU2gol10h">https://wws.lanzous.com/itsU2gol10h</a></li>
</ul>
<hr>
<h2 id="4-数据类型"><a href="#4-数据类型" class="headerlink" title="4. 数据类型"></a>4. 数据类型</h2><h3 id="4-1-目标"><a href="#4-1-目标" class="headerlink" title="4.1 目标"></a>4.1 目标</h3><p> 能够说出5种简单数据类型<br> 能够使用 typeof 获取变量的类型<br> 能够说出1<del>2种转换为数值型的方法<br> 能够说出1</del>2种转换为字符型的方法<br> 能够说出什么是隐式转换</p>
<hr>
<h3 id="4-2-数据类型简介"><a href="#4-2-数据类型简介" class="headerlink" title="4.2 数据类型简介"></a>4.2 数据类型简介</h3><h4 id="4-2-1-为何需要数据类型"><a href="#4-2-1-为何需要数据类型" class="headerlink" title="4.2.1 为何需要数据类型"></a>4.2.1 为何需要数据类型</h4><p>1.在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不，同的数据，充分利用存储空间，于是定义了不同的数据类型。</p>
<p>2.简单来说，数据类型就是数据的类别型号。比如姓名“张三”，年龄18，这些数据的类型是不一样的。</p>
<hr>
<h4 id="4-2-2-变量的数据类型"><a href="#4-2-2-变量的数据类型" class="headerlink" title="4.2.2 变量的数据类型"></a>4.2.2 变量的数据类型</h4><p>1.变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。==JavaScript 是一种弱类型或者说动态语言==。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">10</span>;        <span class="comment">// 这是一个数字型</span></span><br><span class="line"><span class="keyword">var</span> areYouOk = <span class="string">&#x27;是的&#x27;</span>;   <span class="comment">// 这是一个字符串     </span></span><br></pre></td></tr></table></figure>

<p>2.在代码运行时，变量的数据类型是由 JS引擎 <strong>根据 = 右边变量值的数据类型来判断</strong> 的，运行完毕之后， 变量就确定了数据类型。</p>
<p>3.JavaScript 拥有动态类型，同时也意味着相同的变量可用作不同的类型：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">6</span>;           <span class="comment">// x 为数字</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;Bill&quot;</span>;      <span class="comment">// x 为字符串   </span></span><br></pre></td></tr></table></figure>

<ul>
<li>即使刚才给了6（数字），也能马上换一个”bill”（字符串）</li>
</ul>
<p>4.无法提前确认变量是什么类型，如果没有值。不像java，申明时就确定了类型：</p>
<p><code>int num = 10; java</code></p>
<br />

<hr>
<h4 id="4-2-3-分类"><a href="#4-2-3-分类" class="headerlink" title="4.2.3 分类"></a>4.2.3 分类</h4><p>1.JS 把数据类型分为两类：</p>
<ul>
<li>简单数据类型 （Number,String,Boolean,Undefined,Null）</li>
<li>复杂数据类型 （object)</li>
</ul>
<hr>
<h3 id="4-3-简单数据类型"><a href="#4-3-简单数据类型" class="headerlink" title="4.3 简单数据类型"></a>4.3 简单数据类型</h3><h4 id="4-3-1-基本数据类型"><a href="#4-3-1-基本数据类型" class="headerlink" title="4.3.1 基本数据类型"></a>4.3.1 基本数据类型</h4><p>1.简单数据类型也可以称为基本数据类型</p>
<p>2.JavaScript 中的简单数据类型及其说明如下：</p>
<table>
<thead>
<tr>
<th>简单数据类型</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>Number</td>
<td>数字型，包含 整型值 和 浮点型值，如21、0.21</td>
<td>0</td>
</tr>
<tr>
<td>Boolean</td>
<td>布尔值类型，只有true、false，等价于1和0</td>
<td>false</td>
</tr>
<tr>
<td>String</td>
<td>字符串类型，如“张三” 。注意js里面，字符串都带引号</td>
<td>“”</td>
</tr>
<tr>
<td>Undefined</td>
<td>var a; 声明变量a但没有给值，此时 a = undefined</td>
<td>undefined</td>
</tr>
<tr>
<td>Null</td>
<td>var a = null; 声明了变量a 为空值</td>
<td>null</td>
</tr>
</tbody></table>
<br />

<hr>
<h4 id="4-3-2-数字型-Number"><a href="#4-3-2-数字型-Number" class="headerlink" title="4.3.2 数字型 Number"></a>4.3.2 数字型 Number</h4><p>JavaScript 数字类型既可以用来保存整数值，也可以保存小数(浮点数）。  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">21</span>;       <span class="comment">// 整数</span></span><br><span class="line"><span class="keyword">var</span> Age = <span class="number">21.3747</span>;  <span class="comment">// 小数     </span></span><br></pre></td></tr></table></figure>

<br  />

<h5 id="1-进制"><a href="#1-进制" class="headerlink" title="1. 进制"></a>1. 进制</h5><p>最常见的进制有二进制、八进制、十进制、十六进制。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 1.八进制数字序列范围：0~7</span></span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">07</span>;   <span class="comment">// 对应十进制的7</span></span><br><span class="line"><span class="keyword">var</span> num11 = <span class="number">010</span>; <span class="comment">// 十进制的8</span></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">012</span>; <span class="comment">// 十进制的10</span></span><br><span class="line"> <span class="comment">// 2.十六进制数字序列范围：0~9以及A~F</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0xA</span>; <span class="comment">// 十进制的10   </span></span><br></pre></td></tr></table></figure>

<p>现阶段我们只需要记住，在JS中八进制前面加0，十六进制前面加 0x  </p>
<ul>
<li>好像A~F，也可以小写。没有强求吧？</li>
</ul>
<h5 id="2-数字型范围"><a href="#2-数字型范围" class="headerlink" title="2. 数字型范围"></a>2. 数字型范围</h5><p>1.JavaScript中数值的最大和最小值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="built_in">Number</span>.MAX_VALUE); <span class="comment">// 1.7976931348623157e+308</span></span><br><span class="line">alert(<span class="built_in">Number</span>.MIN_VALUE); <span class="comment">// 5e-324</span></span><br></pre></td></tr></table></figure>

<p>最大值：Number.MAX_VALUE，这个值为： 1.7976931348623157e+308</p>
<ul>
<li>E数是在科学计数上的一种数量控制,能够将数据计数并表示，使计数更加的规律性和代表性，即7×10^4=7E4。用指数表示法显示数字，以 E+n 替换部分数字，其中 E（代表指数）表示将前面的数字乘以 10 的 n 次幂。</li>
</ul>
<p>最小值：Number.MIN_VALUE，这个值为：5e-32</p>
<h5 id="3-三个特殊值"><a href="#3-三个特殊值" class="headerlink" title="3. 三个特殊值"></a>3. 三个特殊值</h5><p>1.数字型的三个特殊值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="literal">Infinity</span>);  <span class="comment">// Infinity</span></span><br><span class="line">alert(-<span class="literal">Infinity</span>); <span class="comment">// -Infinity</span></span><br><span class="line">alert(<span class="literal">NaN</span>);       <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure>

<p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=alert&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/infinity">Infinity</a> ，代表无穷大，大于任何数值<br>-Infinity ，代表无穷小，小于任何数值<br>NaN ，Not a number，代表一个非数值</p>
<h5 id="4-isNaN"><a href="#4-isNaN" class="headerlink" title="4. isNaN()"></a>4. isNaN()</h5><p>用来判断一个变量是否为非数字的类型，返回 true 或者 false</p>
<p><img src="../img/25/11.png" alt="11"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> usrAge = <span class="number">21</span>;</span><br><span class="line"><span class="keyword">var</span> isOk = <span class="built_in">isNaN</span>(userAge);</span><br><span class="line"><span class="built_in">console</span>.log(isOk);            <span class="comment">// false ，21 不是一个非数字</span></span><br><span class="line"><span class="keyword">var</span> usrName = <span class="string">&quot;andy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(userName));  <span class="comment">// true ，&quot;andy&quot;是一个非数字</span></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-3-字符串型-String"><a href="#4-3-3-字符串型-String" class="headerlink" title="4.3.3 字符串型 String"></a>4.3.3 字符串型 String</h4><p>0.别叫成字符型了；</p>
<p>字符串型可以是引号中的任意文本，其语法为 双引号 “” 和 单引号’’</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> strMsg = <span class="string">&quot;我爱北京天安门~&quot;</span>;  <span class="comment">// 使用双引号表示字符串</span></span><br><span class="line"><span class="keyword">var</span> strMsg2 = <span class="string">&#x27;我爱吃猪蹄~&#x27;</span>;    <span class="comment">// 使用单引号表示字符串</span></span><br><span class="line"><span class="comment">// 常见错误</span></span><br><span class="line"><span class="keyword">var</span> strMsg3 = 我爱大肘子;       <span class="comment">// 报错，没使用引号，会被认为是js代码，但js没有这些语法</span></span><br></pre></td></tr></table></figure>

<ul>
<li>用了字符串，不加引号是不行的，代码语法里面没有分类这些数据，会被以为是代码</li>
<li>简称，无效代码；</li>
</ul>
<p>因为 HTML 标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号。</p>
<p>1.即使是’12’，’true’。</p>
<ul>
<li>原本是其他类型的数据，加了单引号或双引号，也是字符串类型；</li>
</ul>
<hr>
<h5 id="1-嵌套"><a href="#1-嵌套" class="headerlink" title="1. 嵌套"></a>1. 嵌套</h5><p>1.字符串引号嵌套</p>
<p>2.JS 可以用单引号嵌套双引号 ，或者用双引号嵌套单引号 (外双内单，外单内双)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> strMsg = <span class="string">&#x27;我是&quot;高帅富&quot;程序猿&#x27;</span>;   <span class="comment">// 可以用&#x27;&#x27;包含&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> strMsg2 = <span class="string">&quot;我是&#x27;高帅富&#x27;程序猿&quot;</span>;  <span class="comment">// 也可以用&quot;&quot; 包含&#x27;&#x27;</span></span><br><span class="line"><span class="comment">//  常见错误</span></span><br><span class="line"><span class="keyword">var</span> badQuotes = <span class="string">&#x27;What on earth?&quot;; // 报错，不能 单双引号搭配</span></span><br></pre></td></tr></table></figure>

<br />

<h5 id="2-字符串转义符"><a href="#2-字符串转义符" class="headerlink" title="2. 字符串转义符"></a>2. 字符串转义符</h5><p>类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。<br>转义符都是 \ 开头的，常用的转义符及其说明如下：</p>
<table>
<thead>
<tr>
<th><strong>转义符</strong></th>
<th><strong>解释说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>\n</td>
<td>换行符，n 是 newline 的意思</td>
</tr>
<tr>
<td>\ \</td>
<td>斜杠 \</td>
</tr>
<tr>
<td>\‘</td>
<td>‘  单引号</td>
</tr>
<tr>
<td>\“</td>
<td>”双引号</td>
</tr>
<tr>
<td>\t</td>
<td>tab 缩进</td>
</tr>
<tr>
<td>\b</td>
<td>空格 ，b 是 blank 的意思</td>
</tr>
</tbody></table>
<ul>
<li><p>html的空格是<code>&amp;nbsp</code></p>
</li>
<li><p>2.1 案例-弹出网页警示框</p>
<p><img src="../img/25/12.png" alt="12"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    alert(<span class="string">&#x27;酷热难耐，火辣的太阳底下，我挺拔的身姿，成为了最为独特的风景。\n我审视四周，这里，是我的舞台，我就是天地间的王者。\n这一刻，我豪气冲天，终于大喊一声：&quot;收破烂啦～&quot;&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<br />

<h5 id="3-字符串长度"><a href="#3-字符串长度" class="headerlink" title="3. 字符串长度"></a>3. 字符串长度</h5><ul>
<li><p>1.字符串是由若干字符组成的，这些字符的数量就是字符串的长度。通过字符串的 length 属性可以获取整个字符串的长度。</p>
</li>
<li><pre><code class="js"><span class="keyword">var</span> strMsg = <span class="string">"我是帅气多金的程序猿！"</span>;
alert(strMsg.length); <span class="comment">// 显示 11</span>
&lt;!--hexoPostRenderEscape:&lt;figure class="highlight awk"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre&gt;&lt;span class="line"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="comment"&gt;##### 4. 字符串拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;+ &lt;span class="number"&gt;1&lt;/span&gt;.多个字符串之间可以使用 + 进行拼接，其拼接方式为 字符串 + 任何类型 = 拼接之后的字符串&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;+ &lt;span class="number"&gt;2&lt;/span&gt;.拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;```js&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.1&lt;/span&gt; 字符串 &lt;span class="string"&gt;&amp;quot;相加&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27;world&amp;#x27;&lt;/span&gt;); &lt;span class="regexp"&gt;//&lt;/span&gt; hello world&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.2&lt;/span&gt; 数值字符串 &lt;span class="string"&gt;&amp;quot;相加&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;100&amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27;100&amp;#x27;&lt;/span&gt;); &lt;span class="regexp"&gt;//&lt;/span&gt; &lt;span class="number"&gt;100100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.3&lt;/span&gt; 数值字符串 + 数值&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;11&amp;#x27;&lt;/span&gt; + &lt;span class="number"&gt;12&lt;/span&gt;);     &lt;span class="regexp"&gt;//&lt;/span&gt; &lt;span class="number"&gt;1112&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;
</code></pre>
</li>
</ul>
<p>+ 号总结口诀：数值相加 ，字符相连</p>
<hr>
<h5 id="5-字符串拼接加强"><a href="#5-字符串拼接加强" class="headerlink" title="5. 字符串拼接加强"></a>5. 字符串拼接加强</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + <span class="number">18</span>);           <span class="comment">// 只要有字符就会相连 </span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line"><span class="comment">// console.log(&#x27;pink老师age岁啦&#x27;);       // 这样不行哦</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + age);          <span class="comment">// pink老师18</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + age + <span class="string">&#x27;岁啦&#x27;</span>);  <span class="comment">// pink老师18岁啦</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们经常会将字符串和变量来拼接，因为变量可以很方便地修改里面的值</li>
<li>变量是不能添加引号的，因为加引号的变量会变成字符串</li>
<li>如果变量两侧都有字符串拼接，口诀“引引加加 ”，删掉数字，变量写加中间</li>
</ul>
<br />

<h5 id="6-案例"><a href="#6-案例" class="headerlink" title="6. 案例"></a>6. 案例</h5><p>1.弹出一个输入框，需要用户输入年龄，之后弹出一个警示框显示“您今年 xx 岁啦”（xx 表示刚才输入的年龄）</p>
<p><img src="../img/25/13.png" alt="13"></p>
<p>2.案例分析</p>
<p>交互编程的三个基本要素：</p>
<ul>
<li>用户输入 </li>
<li>程序内部处理   </li>
<li>这是 输出结果  </li>
</ul>
<p>3.那么在程序中要如何实现呢？</p>
<p>3.1 弹出一个输入框（prompt)，让用户输入年龄（用户输入）<br>3.2 把用户输入的值用变量保存起来,把刚才输入的年龄与所要输出的字符串拼接 （程序内部处理）<br>3.3 使用alert语句弹出警示框（输出结果）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> yourAge = prompt(<span class="string">&#x27;请输入你的年龄&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&#x27;你今年&#x27;</span> + yourAge + <span class="string">&#x27;岁啦&#x27;</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-4-布尔型"><a href="#4-3-4-布尔型" class="headerlink" title="4.3.4 布尔型"></a>4.3.4 布尔型</h4><p>1.布尔型 Boolean</p>
<p>2.布尔类型有两个值：true 和 false ，其中 true 表示真（对），而 false 表示假（错）。<br>布尔型和数字型相加的时候， true 的值为 1 ，false 的值为 0。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + <span class="number">1</span>);  <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">false</span> + <span class="number">1</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-5-Undefined-和-Null"><a href="#4-3-5-Undefined-和-Null" class="headerlink" title="4.3.5 Undefined 和 Null"></a>4.3.5 Undefined 和 Null</h4><p>一个声明后没有被赋值的变量会有一个默认值 undefined ( 如果进行相连或者相加时，注意结果）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> variable;</span><br><span class="line"><span class="built_in">console</span>.log(variable);           <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span> + variable);  <span class="comment">// 你好undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">11</span> + variable);     <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + variable);   <span class="comment">//  NaN</span></span><br></pre></td></tr></table></figure>

<p>一个声明变量给 null 值，里面存的值为空（学习对象时，我们继续研究null)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vari = <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span> + vari);  <span class="comment">// 你好null</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">11</span> + vari);     <span class="comment">// 11</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + vari);   <span class="comment">//  1</span></span><br></pre></td></tr></table></figure>

<ul>
<li>null可以与数值运算，这也是</li>
</ul>
<hr>
<h3 id="4-4-获取变量数据类型"><a href="#4-4-获取变量数据类型" class="headerlink" title="4.4 获取变量数据类型"></a>4.4 获取变量数据类型</h3><h3 id="4-5-数据类型转换"><a href="#4-5-数据类型转换" class="headerlink" title="4.5 数据类型转换"></a>4.5 数据类型转换</h3>]]></content>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>25-JavaScript</title>
    <url>/1-(0~50)/25-JavaScript_%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="1-计算机编程基础"><a href="#1-计算机编程基础" class="headerlink" title="1. 计算机编程基础"></a>1. 计算机编程基础</h2><h3 id="1-1-编程语言"><a href="#1-1-编程语言" class="headerlink" title="1.1 编程语言"></a>1.1 编程语言</h3><h4 id="1-1-1-编程"><a href="#1-1-1-编程" class="headerlink" title="1.1.1 编程"></a>1.1.1 编程</h4><p>1.==编程==：就是让计算机为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到结果的过程。</p>
<a id="more"></a>

<p>2.==计算机程序==：就是计算机所执行的一系列的==指令集合==，而程序全部都是用我们所掌握的语言来编写的，所以人们要控制计算机一定要通过计算机语言向计算机发出命令。</p>
<p>3.从事编程的人员，就是==程序员==。  但是一般程序员都比较幽默，为了形容自己的辛苦工作，也成为“码农”， 或者  “程序猿”/ “程序媛”</p>
<p>4.注意：上面所定义的计算机指的是<strong>任何能够执行代码的设备</strong>，可能是智能手机、ATM机、黑莓PI、服务器等等。</p>
<hr>
<h4 id="1-1-2-计算机语言"><a href="#1-1-2-计算机语言" class="headerlink" title="1.1.2 计算机语言"></a>1.1.2 计算机语言</h4><p>1.==计算机语言==指用于==人与计算机之间通讯的语言==，它是人与计算机之间传递信息的==媒介==。</p>
<p>计算机语言的种类非常的多，总的来说可以分成机器语言，汇编语言和高级语言三大类。</p>
<p>实际上计算机最终所执行的都是 机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。</p>
<ul>
<li>计算机只认识机器语言。</li>
</ul>
<blockquote>
<p>0=00000000 1=00000001 2=00000010 3=00000011 4=00000100<br>5=00000101 6=00000110 7=00000111 8=00001000 9=00001001<br>10=00001010</p>
</blockquote>
<hr>
<h4 id="1-1-3-编程语言"><a href="#1-1-3-编程语言" class="headerlink" title="1.1.3 编程语言"></a>1.1.3 编程语言</h4><p>可以通过类似于人类语言的 ”语言”来控制计算机，让计算机为我们做事情，这样的语言就叫做编程语言（Programming Language）。</p>
<p>编程语言是用来控制计算机的一系列指令，它有固定的格式和词汇（不同编程语言的格式和词汇不一样），必须遵守。</p>
<p>如今通用的编程语言有两种形式：汇编语言和高级语言。</p>
<ul>
<li><p>汇编语言和机器语言实质是相同的，都是直接对硬件操作，只不过指令采用了英文缩写的标识符，容易识别和记忆。</p>
</li>
<li><p>高级语言主要是相对于低级语言而言，它并不是特指某一种具体的语言，而是包括了很多编程语言，常用的有C语言、C++、Java、C#、Python、PHP、JavaScript、Go语言、Objective-C、Swift等。</p>
</li>
</ul>
<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">C语言：puts(<span class="string">&quot;你好&quot;</span>)<span class="comment">;</span></span><br><span class="line">PHP：echo <span class="string">&quot;你好&quot;</span><span class="comment">;</span></span><br><span class="line">Java：System.out.println(<span class="string">&quot;你好&quot;</span>)<span class="comment">;</span></span><br><span class="line">JavaScript： alert(<span class="string">&quot;你好&quot;</span>）<span class="comment">;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h4 id="1-1-4-翻译器"><a href="#1-1-4-翻译器" class="headerlink" title="1.1.4 翻译器"></a>1.1.4 翻译器</h4><p>高级语言所编制的程序不能直接被计算机识别，必须经过转换才能被执行，为此，我们需要一个翻译器。</p>
<p>翻译器可以将我们所编写的源代码转换为机器语言，这也被称为二进制化。 记住1和 0。</p>
<p><img src="../img/25/1.png" alt="1"></p>
<h4 id="1-1-5-编程语言与标记语言区别"><a href="#1-1-5-编程语言与标记语言区别" class="headerlink" title="1.1.5 编程语言与标记语言区别"></a>1.1.5 编程语言与标记语言区别</h4><p>1.编程语言有很强的逻辑和行为能力。在编程语言里, 你会看到很多 if else 、for 、while等具有逻辑性和行为能力的指令，这是主动的。</p>
<p>2.标记语言（html）不用于向计算机发出指令，常用于格式化和链接。标记语言的存在是用来被读取的, 他是被动的。</p>
<h5 id="1-1-6-总结"><a href="#1-1-6-总结" class="headerlink" title="1.1.6 总结"></a>1.1.6 总结</h5><p>1.计算机可以帮助人类解决某些问题<br>2.程序员利用编程语言编写程序发出指令控制计算机来实现这些任务<br>3.编程语言有机器语言、汇编语言、高级语言<br>4.高级语言需要一个翻译器转换为计算机识别的机器语言<br>5.编程语言是主动的有很强的逻辑性</p>
<hr>
<h3 id="1-2-计算机基础"><a href="#1-2-计算机基础" class="headerlink" title="1.2 计算机基础"></a>1.2 计算机基础</h3><h4 id="1-2-1-计算机组成"><a href="#1-2-1-计算机组成" class="headerlink" title="1.2.1 计算机组成"></a>1.2.1 计算机组成</h4><p><img src="../img/25/2.png" alt="2"></p>
<br />

<hr>
<h4 id="1-2-2-数据存储"><a href="#1-2-2-数据存储" class="headerlink" title="1.2.2 数据存储"></a>1.2.2 数据存储</h4><p>1.计算机内部使用二进制 0 和 1来表示数据。</p>
<p>2.所有数据，包括文件、图片等最终都是以二进制数据（0 和 1）的形式存放在硬盘中的。</p>
<p>3.所有程序，包括操作系统，本质都是各种数据，也以二进制数据的形式存放在硬盘中。平时我们所说的安装软件，其实就是把程序文件复制到硬盘中。</p>
<p>4.硬盘、内存都是保存的二进制数据。</p>
<h4 id="1-2-3-存储单位"><a href="#1-2-3-存储单位" class="headerlink" title="1.2.3 存储单位"></a>1.2.3 存储单位</h4><p>bit &lt; byte &lt; kb &lt; GB &lt; TB&lt;…..</p>
<ul>
<li>位(bit)：   1bit 可以保存一个 0 或者 1 （最小的存储单位）</li>
<li>字节(Byte)：1B = 8b</li>
<li>千字节(KB)：1KB = 1024B</li>
<li>兆字节(MB)：1MB = 1024KB</li>
<li>吉字节(GB):  1GB = 1024MB</li>
<li>太字节(TB):  1TB = 1024GB</li>
<li>……</li>
</ul>
<h4 id="1-2-4-程序运行"><a href="#1-2-4-程序运行" class="headerlink" title="1.2.4 程序运行"></a>1.2.4 程序运行</h4><p><img src="../img/25/3.png" alt="3"></p>
<p>1.打开某个程序时，先从硬盘中把程序的代码加载到内存中<br>2.CPU执行内存中的代码</p>
<p>==注意==：之所以要内存的一个重要原因，是因为 cpu 运行太快了，如果只从硬盘中读数据，会浪费cpu性能，所以，才使用存取速度更快的内存来保存运行时的数据。（内存是电，硬盘是机械）</p>
<hr>
<h2 id="2-初识JavaScript"><a href="#2-初识JavaScript" class="headerlink" title="2. 初识JavaScript"></a>2. 初识JavaScript</h2><p>1.目标：</p>
<p> 能够说出 JavaScript 是什么<br> 能够知道 JavaScript 的发展历史<br> 能够说出浏览器执行 JavaScript 的原理<br> 能够说出 JavaScript 由哪三部分组成<br> 能够写出 JavaScript 三个输入输出语句</p>
<hr>
<h3 id="2-1-初识js"><a href="#2-1-初识js" class="headerlink" title="2.1 初识js"></a>2.1 初识js</h3><h4 id="2-1-1-JavaScript-历史"><a href="#2-1-1-JavaScript-历史" class="headerlink" title="2.1.1 JavaScript 历史"></a>2.1.1 JavaScript 历史</h4><ul>
<li>布兰登·艾奇（Brendan Eich，1961年～）。</li>
<li>神奇的大哥用10天完成 JavaScript 设计。</li>
<li>最初命名为 LiveScript，后来在与 Sun 合作之后将其改名为 JavaScript。</li>
</ul>
<hr>
<h4 id="2-1-2-JavaScript-是什么"><a href="#2-1-2-JavaScript-是什么" class="headerlink" title="2.1.2 JavaScript 是什么"></a>2.1.2 JavaScript 是什么</h4><ul>
<li>JavaScript 是世界上最流行的语言之一，是一种运行在客户端的脚本语言 （Script 是脚本的意思）<ul>
<li>自己的电脑，客户端；远程接收请求的是服务器；</li>
</ul>
</li>
<li>脚本语言：不需要编译，运行过程中由 js 解释器( js 引擎）逐行来进行解释并执行</li>
<li>现在也可以基于 Node.js 技术进行服务器端编程<ul>
<li>既可以做前端，也可以做后端；</li>
</ul>
</li>
</ul>
<p><img src="../img/25/4.png" alt="4"></p>
<hr>
<h4 id="2-1-3-JS的作用"><a href="#2-1-3-JS的作用" class="headerlink" title="2.1.3 JS的作用"></a>2.1.3 JS的作用</h4><ul>
<li>表单动态校验（密码强度检测）  （ JS 产生最初的目的 ）<ul>
<li>以前，输入不合格的数据，例如：要求数字结构，输入字母；</li>
<li>也要送往后台，后台验证后，把不合格打回</li>
<li>增加了后端的压力；</li>
</ul>
</li>
<li>网页特效</li>
<li>服务端开发(Node.js)</li>
<li>桌面程序(Electron)</li>
<li>App(Cordova) </li>
<li>控制硬件-物联网(Ruff)</li>
<li>游戏开发(cocos2d-js)</li>
</ul>
<hr>
<h4 id="2-1-4-HTML-CSS-JS-的关系"><a href="#2-1-4-HTML-CSS-JS-的关系" class="headerlink" title="2.1.4 HTML/CSS/JS 的关系"></a>2.1.4 HTML/CSS/JS 的关系</h4><p>1.HTML/CSS 标记语言–描述类语言</p>
<ul>
<li>HTML 决定网页结构和内容( 决定看到什么 )，相当于人的身体</li>
<li>CSS 决定网页呈现给用户的模样( 决定好不好看 )，相当于给人穿衣服、化妆</li>
</ul>
<p>2.JS 脚本语言–编程类语言 </p>
<ul>
<li>实现业务逻辑和页面控制( 决定功能 )，相当于人的各种动作 </li>
</ul>
<hr>
<h4 id="2-1-5-浏览器执行js简介"><a href="#2-1-5-浏览器执行js简介" class="headerlink" title="2.1.5 浏览器执行js简介"></a>2.1.5 浏览器执行js简介</h4><p>浏览器分成两部分：渲染引擎和 JS 引擎</p>
<ul>
<li>渲染引擎：用来解析HTML与CSS，俗称内核，比如 chrome 浏览器的 blink ，老版本的 webkit</li>
<li>JS 引擎：也称为 JS 解释器。 用来读取网页中的JavaScript代码，对其处理后运行，比如 chrome 浏览器的 V8</li>
</ul>
<p>浏览器本身并不会执行JS代码，而是通过内置 JavaScript 引擎(解释器) 来执行 JS 代码 。JS 引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，</p>
<p>所以 JavaScript 语言归为脚本语言，会逐行解释执行。</p>
<p><img src="../img/25/5.png" alt="5"></p>
<hr>
<h4 id="2-1-6-JS的组成"><a href="#2-1-6-JS的组成" class="headerlink" title="2.1.6 JS的组成"></a>2.1.6 JS的组成</h4><p><img src="../img/25/6.png" alt="6"></p>
<p>1.JS基础，学习的是ECMAScript，js语法</p>
<p>2.JS-API，学习的是dom与bom；</p>
<hr>
<h5 id="1-ECMA"><a href="#1-ECMA" class="headerlink" title="1. ECMA"></a>1. ECMA</h5><p>1.什么是ECMA？</p>
<ul>
<li>ECMAScript 是由ECMA 国际（ 原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为 JavaScript 或 JScript，但实际上后两者是 ECMAScript 语言的实现和扩展。</li>
</ul>
<p><img src="../img/25/7.png" alt="7"></p>
<ul>
<li>ECMAScript：ECMAScript 规定了JS的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套JS语法工业标准。</li>
<li>更多参看MDN:  <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview</a></li>
</ul>
<hr>
<h5 id="2-DOM"><a href="#2-DOM" class="headerlink" title="2. DOM"></a>2. DOM</h5><p>1.DOM ——文档对象模型</p>
<p>2.文档对象模型（Document Object Model，简称DOM），是==W3C==组织推荐的处理可扩展标记语言的==标准编程接口==。通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</p>
<hr>
<h5 id="3-BOM"><a href="#3-BOM" class="headerlink" title="3. BOM"></a>3. BOM</h5><ul>
<li>BOM ——浏览器对象模型</li>
<li>BOM (Browser Object Model，简称BOM) 是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。<ul>
<li>例如，滑动右侧滚动条，到一定的地方（或者说滑到一定的高度）弹出一个窗口</li>
</ul>
</li>
</ul>
<hr>
<h4 id="2-1-7-JS初体验"><a href="#2-1-7-JS初体验" class="headerlink" title="2.1.7 JS初体验"></a>2.1.7 JS初体验</h4><p>JS 有3种书写位置，分别为行内、内嵌和外部。 </p>
<h5 id="1-行内式-JS"><a href="#1-行内式-JS" class="headerlink" title="1. 行内式 JS"></a>1. 行内式 JS</h5><p><code>&lt;input type=&quot;button&quot; value=&quot;点我试试&quot; onclick=&quot;alert(&#39;Hello World&#39;)&quot; /&gt;</code></p>
<ul>
<li>可以将单行或少量 JS 代码写在HTML标签的事件属性中（以 on 开头的属性），如：onclick</li>
<li>注意单双引号的使用：在HTML中我们推荐使用双引号, JS 中我们推荐使用单引号</li>
<li>可读性差， 在html中编写JS大量代码时，不方便阅读；</li>
<li>引号易错，引号多层嵌套匹配时，非常容易弄混；</li>
<li>特殊情况下使用</li>
</ul>
<h5 id="2-内嵌-JS"><a href="#2-内嵌-JS" class="headerlink" title="2. 内嵌 JS"></a>2. 内嵌 JS</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   alert(<span class="string">&#x27;Hello  World~!&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>可以将多行JS代码写到 <code>&lt;script&gt;</code> 标签中</li>
<li>内嵌 JS 是学习时常用的方式</li>
</ul>
<h5 id="3-外部-JS文件"><a href="#3-外部-JS文件" class="headerlink" title="3. 外部 JS文件"></a>3. 外部 JS文件</h5><p><code>&lt;script src=&quot;my.js&quot;&gt;&lt;/script&gt;</code></p>
<ul>
<li>利于HTML页面代码结构化，把大段 JS代码独立到 HTML 页面之外，既美观，也方便文级别的复用</li>
<li>引用外部 JS文件的 script 标签中间不可以写代码<ul>
<li><code>&lt;script src=&quot;my.js&quot;&gt;1123&lt;/script&gt;</code>不能在这个地方写1123，当然其他的也不能写</li>
</ul>
</li>
<li>适合于JS 代码量比较大的情况</li>
</ul>
<hr>
<h3 id="2-2-JS注释"><a href="#2-2-JS注释" class="headerlink" title="2.2 JS注释"></a>2.2 JS注释</h3><h4 id="2-2-1-单行注释"><a href="#2-2-1-单行注释" class="headerlink" title="2.2.1 单行注释"></a>2.2.1 单行注释</h4><p>为了提高代码的可读性，JS与CSS一样，也提供了注释功能。JS中的注释主要有两种，分别是单行注释和多行注释。</p>
<p>单行注释的注释方式如下：</p>
<p><code>// 我是一行文字，不想被 JS引擎 执行，所以 注释起来</code></p>
<p>//  用来注释单行文字（  快捷键   ctrl  +  /   ）</p>
<hr>
<h4 id="2-2-2-多行注释"><a href="#2-2-2-多行注释" class="headerlink" title="2.2.2 多行注释"></a>2.2.2 多行注释</h4><p>多行注释的注释方式如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  获取用户年龄和姓名</span></span><br><span class="line"><span class="comment">  并通过提示框显示出来</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>/* */  用来注释多行文字（ 默认快捷键  alt +  shift  + a ） </p>
<p>快捷键修改为：   ctrl + shift  +  /  </p>
<p>vscode → 首选项按钮  →  键盘快捷方式 →  查找 原来的快捷键  → 修改为新的快捷键 → 回车确认</p>
<hr>
<h3 id="2-3-JavaScript-输入输出语句"><a href="#2-3-JavaScript-输入输出语句" class="headerlink" title="2.3 JavaScript 输入输出语句"></a>2.3 JavaScript 输入输出语句</h3><p>为了方便信息的输入输出，JS中提供了一些输入输出语句，其常用的语句如下：</p>
<table>
<thead>
<tr>
<th><strong>方法</strong></th>
<th><strong>说明</strong></th>
<th><strong>归属</strong></th>
</tr>
</thead>
<tbody><tr>
<td>alert(msg)</td>
<td>浏览器弹出警示框</td>
<td>浏览器</td>
</tr>
<tr>
<td>console.log(msg)</td>
<td>浏览器控制台打印输出信息</td>
<td>浏览器</td>
</tr>
<tr>
<td>prompt(info)</td>
<td>浏览器弹出输入框，用户可以输入</td>
<td>浏览器</td>
</tr>
</tbody></table>
<p>注意：alert() 主要用来显示消息给用户，console.log() 用来给程序员自己看运行时的消息。</p>
<hr>
<h2 id="3-变量"><a href="#3-变量" class="headerlink" title="3. 变量"></a>3. 变量</h2><p>目标：</p>
<p> 能够说出变量的主要作用<br> 能够写出变量的初始化<br> 能够说出变量的命名规范<br> 能够画出变量是如何在内存中存储的<br> 能够写出交换变量案例</p>
<hr>
<h3 id="3-1-变量的概述"><a href="#3-1-变量的概述" class="headerlink" title="3.1 变量的概述"></a>3.1 变量的概述</h3><h4 id="3-1-1-什么是变量"><a href="#3-1-1-什么是变量" class="headerlink" title="3.1.1 什么是变量"></a>3.1.1 什么是变量</h4><p>白话：变量就是一个装东西的盒子。<br>通俗：变量是用于存放数据的==容器==。 我们通过 ==变量名== 获取数据，甚至数据可以修改。</p>
<hr>
<h4 id="3-1-2-变量在内存中的存储"><a href="#3-1-2-变量在内存中的存储" class="headerlink" title="3.1.2 变量在内存中的存储"></a>3.1.2 变量在内存中的存储</h4><p>本质：变量是程序在<strong>内存</strong>中申请的一块用来存放数据的<strong>空间</strong>。</p>
<p>类似我们酒店的房间，一个房间就可以看做是一个变量。  </p>
<img src="../img/25/8.png" alt="8" style="zoom:80%;" />

<ul>
<li>变量由：num2（变量名）+ 6（向内存申请的空间）组成的；</li>
</ul>
<hr>
<h3 id="3-2-变量的使用"><a href="#3-2-变量的使用" class="headerlink" title="3.2 变量的使用"></a>3.2 变量的使用</h3><p>变量在使用时分为两步： 1. 声明变量   2. 赋值 </p>
<h4 id="3-2-1-声明变量"><a href="#3-2-1-声明变量" class="headerlink" title="3.2.1 声明变量"></a>3.2.1 声明变量</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  声明变量  </span></span><br><span class="line"><span class="keyword">var</span> age; <span class="comment">//  声明一个 名称为age 的变量     </span></span><br></pre></td></tr></table></figure>

<ul>
<li>==var== 是一个 JS关键字，用来声明变量( <a href="https://fanyi.baidu.com/translate?aldtype=16047&query=ECMA&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/variable">variable</a> 变量的意思 )。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管</li>
<li>age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</li>
</ul>
<h4 id="3-2-2-赋值"><a href="#3-2-2-赋值" class="headerlink" title="3.2.2 赋值"></a>3.2.2 赋值</h4><p><code>age = 10; // 给 age  这个变量赋值为 10</code></p>
<ul>
<li>= 用来把右边的值赋给左边的变量空间中，此处代表赋值的意思</li>
<li>变量值是程序员保存到变量空间里的值</li>
</ul>
<h4 id="3-2-3-变量的初始化"><a href="#3-2-3-变量的初始化" class="headerlink" title="3.2.3 变量的初始化"></a>3.2.3 变量的初始化</h4><p><code>var age  = 18;  // 声明变量同时赋值为 18</code></p>
<p>声明一个变量并赋值， 我们称之为==变量的初始化==。</p>
<hr>
<h4 id="3-2-4-案例"><a href="#3-2-4-案例" class="headerlink" title="3.2.4 案例"></a>3.2.4 案例</h4><p>1.弹出一个输入框，提示用户输入姓名。<br>2.弹出一个对话框，输出用户刚才输入的姓名。</p>
<p>3.代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myname = prompt (<span class="string">&#x27;请输入姓名&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&#x27;欢迎&#x27;</span> + myname);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="3-3-变量语法扩展"><a href="#3-3-变量语法扩展" class="headerlink" title="3.3 变量语法扩展"></a>3.3 变量语法扩展</h3><h4 id="3-3-1-更新变量"><a href="#3-3-1-更新变量" class="headerlink" title="3.3.1 更新变量"></a>3.3.1 更新变量</h4><p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line">age = <span class="number">81</span>;   <span class="comment">// 最后的结果就是81因为18 被覆盖掉了          </span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>声明过的变量不需要再次声明。</p>
<p>原理：内存空间已经开辟与分配，并取名为age，所以再次使用这片空间，直接用变量名 age 即可；</p>
</li>
</ul>
<br />

<h4 id="3-3-2-同时声明多个变量"><a href="#3-3-2-同时声明多个变量" class="headerlink" title="3.3.2 同时声明多个变量"></a>3.3.2 同时声明多个变量</h4><p>同时声明多个变量时，只需要写一个 var， 多个变量名之间使用英文逗号隔开。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">/* var age = 18;</span></span><br><span class="line"><span class="comment">    var address = &#x27;或影城&#x27;;</span></span><br><span class="line"><span class="comment">    var gz = 2000; */</span></span><br><span class="line">    <span class="keyword">var</span> age = <span class="number">18</span>,</span><br><span class="line">        address = <span class="string">&#x27;火隐村&#x27;</span>,</span><br><span class="line">        gz = <span class="number">2000</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>逗号隔开</li>
</ul>
<p>也可以一排：</p>
<p><code>var age = 10,  name = &#39;zs&#39;, sex = 2;</code></p>
<hr>
<h4 id="3-3-3-声明变量的特殊情况"><a href="#3-3-3-声明变量的特殊情况" class="headerlink" title="3.3.3 声明变量的特殊情况"></a>3.3.3 声明变量的特殊情况</h4><table>
<thead>
<tr>
<th><strong>情况</strong></th>
<th><strong>说明</strong></th>
<th><strong>结果</strong></th>
</tr>
</thead>
<tbody><tr>
<td>var age ; console.log (age);</td>
<td>只声明 不赋值</td>
<td>undefined</td>
</tr>
<tr>
<td>console.log(age)</td>
<td>不声明 不赋值 直接使用</td>
<td>报错</td>
</tr>
<tr>
<td>age  = 10; console.log (age);</td>
<td>不声明 只赋值</td>
<td>10</td>
</tr>
</tbody></table>
<ul>
<li><p>只声明 不赋值，程序也不知道是什么 = 未定义(undefined)</p>
</li>
<li><p>不声明 不赋值 直接使用 , vscode里不会保存，F12里能看到会报错</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">Uncaught ReferenceError: tset <span class="literal">is</span><span class="built_in"> not</span> defined</span><br><span class="line">    <span class="keyword">at</span> index3.html:<span class="number">13</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>不声明 只赋值，可以使用，默认为全局变量；</p>
</li>
</ul>
<hr>
<h3 id="3-4-变量命名规范"><a href="#3-4-变量命名规范" class="headerlink" title="3.4 变量命名规范"></a>3.4 变量命名规范</h3><ol>
<li><p>由字母(A-Za-z)、数字(0-9)、下划线(_)、美元符号( $ )组成，如：usrAge, num01, _name</p>
</li>
<li><p>严格区分大小写。var app; 和 var App; 是两个变量</p>
</li>
<li><p>不能 以数字开头。  18age   是错误的</p>
</li>
<li><p>不能 是关键字、保留字。例如：var、for、while</p>
</li>
</ol>
<ul>
<li>它们本身已经有了特殊的意义，能被申明就会破坏语言逻辑；</li>
</ul>
<ol start="5">
<li>变量名必须有意义： nl(nianling)   →     age  </li>
</ol>
<ul>
<li>如果要写中文，就得拼全:  xb = xiaBan;</li>
</ul>
<ol start="6">
<li><p>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。 myFirstName</p>
</li>
<li><p>不要用name作为变量名。</p>
<ul>
<li><p>虽然不是关键字 或 保留字，但本身不是未定义；</p>
</li>
<li><p>验证：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">console</span>.log(tel);</span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>只有console.log(tel)报错：<code>Uncaught ReferenceError: tset is not defined</code></p>
</li>
</ul>
</li>
</ol>
<p>7.1 而且百度一下，有很多 使用 name 作为 变量名，出错的情况；</p>
<ul>
<li><a href="https://blog.csdn.net/line233/article/details/82838686">做表单验证时</a></li>
<li><a href="https://blog.csdn.net/Shore_W/article/details/19004831?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param">数组名时</a></li>
</ul>
<hr>
<h4 id="3-4-2-案例"><a href="#3-4-2-案例" class="headerlink" title="3.4.2 案例"></a>3.4.2 案例</h4><p>一下哪些是合法的变量名？</p>
<p><img src="../img/25/9.png" alt="9"></p>
<p>1-2. 不能数字开头</p>
<p>1-4. 不能数字开头</p>
<p>2-4. 没有安排&amp;符号，估计不是开头也不行</p>
<p>3-2. 中间不能空格</p>
<p>3-4. 关键字了</p>
<table>
<thead>
<tr>
<th>第一组</th>
<th>第二组</th>
<th>第三组</th>
</tr>
</thead>
<tbody><tr>
<td>var a</td>
<td>var userName</td>
<td>var thwWorld</td>
</tr>
<tr>
<td>var 1==×==</td>
<td>var $name</td>
<td>var the world==×==</td>
</tr>
<tr>
<td>var age18</td>
<td>var _sex</td>
<td>var the_world</td>
</tr>
<tr>
<td>var 18age==×==</td>
<td>var &amp;sex==×==</td>
<td>var for==×==</td>
</tr>
</tbody></table>
<br />

<hr>
<h3 id="3-5-案例"><a href="#3-5-案例" class="headerlink" title="3.5 案例"></a>3.5 案例</h3><p>要求：交换两个变量的值 ( 实现思路：使用一个 临时变量 用来做中间存储 )</p>
<p>1.自写：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> age = <span class="number">18</span>,</span></span><br><span class="line">            gz = 2000,</span><br><span class="line">            zhongjian;</span><br><span class="line">        zhongjian = age;</span><br><span class="line">        age = gz;</span><br><span class="line">        gz = zhongjian;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;age:&#x27;</span>+ age, <span class="string">&#x27;zhongjian:&#x27;</span> + zhongjian, <span class="string">&#x27;gz:&#x27;</span> + gz);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.资料：</p>
<img src="../img/25/10.png" alt="10" style="zoom:90%;" />

<br />

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// js 是编程语言有很强的逻辑性在里面： 实现这个要求的思路 先怎么做后怎么做 </span></span><br><span class="line">    <span class="comment">// 1. 我们需要一个临时变量帮我们</span></span><br><span class="line">    <span class="comment">// 2. 把apple1 给我们的临时变量 temp </span></span><br><span class="line">    <span class="comment">// 3. 把apple2 里面的苹果给 apple1 </span></span><br><span class="line">    <span class="comment">// 4. 把临时变量里面的值 给 apple2 </span></span><br><span class="line">    <span class="keyword">var</span> temp; <span class="comment">// 声明了一个临时变量为空</span></span><br><span class="line">    <span class="keyword">var</span> apple1 = <span class="string">&#x27;青苹果&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> apple2 = <span class="string">&#x27;红苹果&#x27;</span>;</span><br><span class="line">    temp = apple1; <span class="comment">// 把右边给左边</span></span><br><span class="line">    apple1 = apple2;</span><br><span class="line">    apple2 = temp;</span><br><span class="line">    <span class="built_in">console</span>.log(apple1);</span><br><span class="line">    <span class="built_in">console</span>.log(apple2);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<br />

<hr>
<h3 id="3-6-小结"><a href="#3-6-小结" class="headerlink" title="3.6 小结"></a>3.6 小结</h3><table>
<thead>
<tr>
<th>为什么需要变量？</th>
<th>因为我们一些数据需要保存，所以需要变量</th>
</tr>
</thead>
<tbody><tr>
<td>变量是什么？</td>
<td>变量就是一个容器，用来存放数据的。方便我们以后使用里面的数据</td>
</tr>
<tr>
<td>变量的本质是什么?</td>
<td>变量是内存里的一块空间，用来存储数据。</td>
</tr>
<tr>
<td>变量怎么使用的？</td>
<td>1.我们使用变量的时候，一定要声明变量，然后赋值<br />2.声明变量本质是去内存申请空间。</td>
</tr>
<tr>
<td>什么是变量的初始化？</td>
<td>声明变量并赋值我们称之为变量的初始化</td>
</tr>
<tr>
<td>变量命名规范有哪些？</td>
<td>这个多了，详见上面3.4 变量命名规范</td>
</tr>
<tr>
<td>交换2个变量值的思路？</td>
<td>1. 我们需要一个临时变量帮我们<br/>2. 把 a 给我们的临时变量 c <br/>3. 把 b 里面的苹果给 a <br/>4. 把 c 里面的值 给 b</td>
</tr>
</tbody></table>
<br />

<hr>
<h3 id="3-x-参考资料"><a href="#3-x-参考资料" class="headerlink" title="3.x 参考资料"></a>3.x 参考资料</h3><ul>
<li>PPT 与 PDF：<a href="https://wws.lanzous.com/itsU2gol10h">https://wws.lanzous.com/itsU2gol10h</a></li>
</ul>
<hr>
<h2 id="4-数据类型"><a href="#4-数据类型" class="headerlink" title="4. 数据类型"></a>4. 数据类型</h2><h3 id="4-1-目标"><a href="#4-1-目标" class="headerlink" title="4.1 目标"></a>4.1 目标</h3><p> 能够说出5种简单数据类型<br> 能够使用 typeof 获取变量的类型<br> 能够说出1<del>2种转换为数值型的方法<br> 能够说出1</del>2种转换为字符型的方法<br> 能够说出什么是隐式转换</p>
<hr>
<h3 id="4-2-数据类型简介"><a href="#4-2-数据类型简介" class="headerlink" title="4.2 数据类型简介"></a>4.2 数据类型简介</h3><h4 id="4-2-1-为何需要数据类型"><a href="#4-2-1-为何需要数据类型" class="headerlink" title="4.2.1 为何需要数据类型"></a>4.2.1 为何需要数据类型</h4><p>1.在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不，同的数据，充分利用存储空间，于是定义了不同的数据类型。</p>
<p>2.简单来说，数据类型就是数据的类别型号。比如姓名“张三”，年龄18，这些数据的类型是不一样的。</p>
<hr>
<h4 id="4-2-2-变量的数据类型"><a href="#4-2-2-变量的数据类型" class="headerlink" title="4.2.2 变量的数据类型"></a>4.2.2 变量的数据类型</h4><p>1.变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。==JavaScript 是一种弱类型或者说动态语言==。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">10</span>;        <span class="comment">// 这是一个数字型</span></span><br><span class="line"><span class="keyword">var</span> areYouOk = <span class="string">&#x27;是的&#x27;</span>;   <span class="comment">// 这是一个字符串     </span></span><br></pre></td></tr></table></figure>

<p>2.在代码运行时，变量的数据类型是由 JS引擎 <strong>根据 = 右边变量值的数据类型来判断</strong> 的，运行完毕之后， 变量就确定了数据类型。</p>
<p>3.JavaScript 拥有动态类型，同时也意味着相同的变量可用作不同的类型：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">6</span>;           <span class="comment">// x 为数字</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;Bill&quot;</span>;      <span class="comment">// x 为字符串   </span></span><br></pre></td></tr></table></figure>

<ul>
<li>即使刚才给了6（数字），也能马上换一个”bill”（字符串）</li>
</ul>
<p>4.无法提前确认变量是什么类型，如果没有值。不像java，申明时就确定了类型：</p>
<p><code>int num = 10; java</code></p>
<br />

<hr>
<h4 id="4-2-3-分类"><a href="#4-2-3-分类" class="headerlink" title="4.2.3 分类"></a>4.2.3 分类</h4><p>1.JS 把数据类型分为两类：</p>
<ul>
<li>简单数据类型 （Number,String,Boolean,Undefined,Null）</li>
<li>复杂数据类型 （object)</li>
</ul>
<hr>
<h3 id="4-3-简单数据类型"><a href="#4-3-简单数据类型" class="headerlink" title="4.3 简单数据类型"></a>4.3 简单数据类型</h3><h4 id="4-3-1-基本数据类型"><a href="#4-3-1-基本数据类型" class="headerlink" title="4.3.1 基本数据类型"></a>4.3.1 基本数据类型</h4><p>1.简单数据类型也可以称为基本数据类型</p>
<p>2.JavaScript 中的简单数据类型及其说明如下：</p>
<table>
<thead>
<tr>
<th>简单数据类型</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>Number</td>
<td>数字型，包含 整型值 和 浮点型值，如21、0.21</td>
<td>0</td>
</tr>
<tr>
<td>Boolean</td>
<td>布尔值类型，只有true、false，等价于1和0</td>
<td>false</td>
</tr>
<tr>
<td>String</td>
<td>字符串类型，如“张三” 。注意js里面，字符串都带引号</td>
<td>“”</td>
</tr>
<tr>
<td>Undefined</td>
<td>var a; 声明变量a但没有给值，此时 a = undefined</td>
<td>undefined</td>
</tr>
<tr>
<td>Null</td>
<td>var a = null; 声明了变量a 为空值</td>
<td>null</td>
</tr>
</tbody></table>
<br />

<hr>
<h4 id="4-3-2-数字型-Number"><a href="#4-3-2-数字型-Number" class="headerlink" title="4.3.2 数字型 Number"></a>4.3.2 数字型 Number</h4><p>JavaScript 数字类型既可以用来保存整数值，也可以保存小数(浮点数）。  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">21</span>;       <span class="comment">// 整数</span></span><br><span class="line"><span class="keyword">var</span> Age = <span class="number">21.3747</span>;  <span class="comment">// 小数     </span></span><br></pre></td></tr></table></figure>

<br  />

<h5 id="1-进制"><a href="#1-进制" class="headerlink" title="1. 进制"></a>1. 进制</h5><p>最常见的进制有二进制、八进制、十进制、十六进制。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 1.八进制数字序列范围：0~7</span></span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">07</span>;   <span class="comment">// 对应十进制的7</span></span><br><span class="line"><span class="keyword">var</span> num11 = <span class="number">010</span>; <span class="comment">// 十进制的8</span></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">012</span>; <span class="comment">// 十进制的10</span></span><br><span class="line"> <span class="comment">// 2.十六进制数字序列范围：0~9以及A~F</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0xA</span>; <span class="comment">// 十进制的10   </span></span><br></pre></td></tr></table></figure>

<p>现阶段我们只需要记住，在JS中八进制前面加0，十六进制前面加 0x  </p>
<ul>
<li>好像A~F，也可以小写。没有强求吧？</li>
</ul>
<h5 id="2-数字型范围"><a href="#2-数字型范围" class="headerlink" title="2. 数字型范围"></a>2. 数字型范围</h5><p>1.JavaScript中数值的最大和最小值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="built_in">Number</span>.MAX_VALUE); <span class="comment">// 1.7976931348623157e+308</span></span><br><span class="line">alert(<span class="built_in">Number</span>.MIN_VALUE); <span class="comment">// 5e-324</span></span><br></pre></td></tr></table></figure>

<p>最大值：Number.MAX_VALUE，这个值为： 1.7976931348623157e+308</p>
<ul>
<li>E数是在科学计数上的一种数量控制,能够将数据计数并表示，使计数更加的规律性和代表性，即7×10^4=7E4。用指数表示法显示数字，以 E+n 替换部分数字，其中 E（代表指数）表示将前面的数字乘以 10 的 n 次幂。</li>
</ul>
<p>最小值：Number.MIN_VALUE，这个值为：5e-32</p>
<h5 id="3-三个特殊值"><a href="#3-三个特殊值" class="headerlink" title="3. 三个特殊值"></a>3. 三个特殊值</h5><p>1.数字型的三个特殊值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="literal">Infinity</span>);  <span class="comment">// Infinity</span></span><br><span class="line">alert(-<span class="literal">Infinity</span>); <span class="comment">// -Infinity</span></span><br><span class="line">alert(<span class="literal">NaN</span>);       <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure>

<p><a href="https://fanyi.baidu.com/translate?aldtype=16047&query=alert&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/infinity">Infinity</a> ，代表无穷大，大于任何数值<br>-Infinity ，代表无穷小，小于任何数值<br>NaN ，Not a number，代表一个非数值</p>
<h5 id="4-isNaN"><a href="#4-isNaN" class="headerlink" title="4. isNaN()"></a>4. isNaN()</h5><p>用来判断一个变量是否为非数字的类型，返回 true 或者 false</p>
<p><img src="../img/25/11.png" alt="11"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> usrAge = <span class="number">21</span>;</span><br><span class="line"><span class="keyword">var</span> isOk = <span class="built_in">isNaN</span>(userAge);</span><br><span class="line"><span class="built_in">console</span>.log(isOk);            <span class="comment">// false ，21 不是一个非数字</span></span><br><span class="line"><span class="keyword">var</span> usrName = <span class="string">&quot;andy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">isNaN</span>(userName));  <span class="comment">// true ，&quot;andy&quot;是一个非数字</span></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-3-字符串型-String"><a href="#4-3-3-字符串型-String" class="headerlink" title="4.3.3 字符串型 String"></a>4.3.3 字符串型 String</h4><p>0.别叫成字符型了；</p>
<p>字符串型可以是引号中的任意文本，其语法为 双引号 “” 和 单引号’’</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> strMsg = <span class="string">&quot;我爱北京天安门~&quot;</span>;  <span class="comment">// 使用双引号表示字符串</span></span><br><span class="line"><span class="keyword">var</span> strMsg2 = <span class="string">&#x27;我爱吃猪蹄~&#x27;</span>;    <span class="comment">// 使用单引号表示字符串</span></span><br><span class="line"><span class="comment">// 常见错误</span></span><br><span class="line"><span class="keyword">var</span> strMsg3 = 我爱大肘子;       <span class="comment">// 报错，没使用引号，会被认为是js代码，但js没有这些语法</span></span><br></pre></td></tr></table></figure>

<ul>
<li>用了字符串，不加引号是不行的，代码语法里面没有分类这些数据，会被以为是代码</li>
<li>简称，无效代码；</li>
</ul>
<p>因为 HTML 标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号。</p>
<p>1.即使是’12’，’true’。</p>
<ul>
<li>原本是其他类型的数据，加了单引号或双引号，也是字符串类型；</li>
</ul>
<hr>
<h5 id="1-嵌套"><a href="#1-嵌套" class="headerlink" title="1. 嵌套"></a>1. 嵌套</h5><p>1.字符串引号嵌套</p>
<p>2.JS 可以用单引号嵌套双引号 ，或者用双引号嵌套单引号 (外双内单，外单内双)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> strMsg = <span class="string">&#x27;我是&quot;高帅富&quot;程序猿&#x27;</span>;   <span class="comment">// 可以用&#x27;&#x27;包含&quot;&quot;</span></span><br><span class="line"><span class="keyword">var</span> strMsg2 = <span class="string">&quot;我是&#x27;高帅富&#x27;程序猿&quot;</span>;  <span class="comment">// 也可以用&quot;&quot; 包含&#x27;&#x27;</span></span><br><span class="line"><span class="comment">//  常见错误</span></span><br><span class="line"><span class="keyword">var</span> badQuotes = <span class="string">&#x27;What on earth?&quot;; // 报错，不能 单双引号搭配</span></span><br></pre></td></tr></table></figure>

<br />

<h5 id="2-字符串转义符"><a href="#2-字符串转义符" class="headerlink" title="2. 字符串转义符"></a>2. 字符串转义符</h5><p>类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。<br>转义符都是 \ 开头的，常用的转义符及其说明如下：</p>
<table>
<thead>
<tr>
<th><strong>转义符</strong></th>
<th><strong>解释说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>\n</td>
<td>换行符，n 是 newline 的意思</td>
</tr>
<tr>
<td>\ \</td>
<td>斜杠 \</td>
</tr>
<tr>
<td>\‘</td>
<td>‘  单引号</td>
</tr>
<tr>
<td>\“</td>
<td>”双引号</td>
</tr>
<tr>
<td>\t</td>
<td>tab 缩进</td>
</tr>
<tr>
<td>\b</td>
<td>空格 ，b 是 blank 的意思</td>
</tr>
</tbody></table>
<ul>
<li><p>html的空格是<code>&amp;nbsp</code></p>
</li>
<li><p>2.1 案例-弹出网页警示框</p>
<p><img src="../img/25/12.png" alt="12"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    alert(<span class="string">&#x27;酷热难耐，火辣的太阳底下，我挺拔的身姿，成为了最为独特的风景。\n我审视四周，这里，是我的舞台，我就是天地间的王者。\n这一刻，我豪气冲天，终于大喊一声：&quot;收破烂啦～&quot;&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<br />

<h5 id="3-字符串长度"><a href="#3-字符串长度" class="headerlink" title="3. 字符串长度"></a>3. 字符串长度</h5><ul>
<li><p>1.字符串是由若干字符组成的，这些字符的数量就是字符串的长度。通过字符串的 length 属性可以获取整个字符串的长度。</p>
</li>
<li><pre><code class="js"><span class="keyword">var</span> strMsg = <span class="string">"我是帅气多金的程序猿！"</span>;
alert(strMsg.length); <span class="comment">// 显示 11</span>
&lt;!--hexoPostRenderEscape:&lt;figure class="highlight awk"&gt;&lt;table&gt;&lt;tr&gt;&lt;td class="gutter"&gt;&lt;pre&gt;&lt;span class="line"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="comment"&gt;##### 4. 字符串拼接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;+ &lt;span class="number"&gt;1&lt;/span&gt;.多个字符串之间可以使用 + 进行拼接，其拼接方式为 字符串 + 任何类型 = 拼接之后的字符串&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;+ &lt;span class="number"&gt;2&lt;/span&gt;.拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;```js&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.1&lt;/span&gt; 字符串 &lt;span class="string"&gt;&amp;quot;相加&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27;world&amp;#x27;&lt;/span&gt;); &lt;span class="regexp"&gt;//&lt;/span&gt; hello world&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.2&lt;/span&gt; 数值字符串 &lt;span class="string"&gt;&amp;quot;相加&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;100&amp;#x27;&lt;/span&gt; + &lt;span class="string"&gt;&amp;#x27;100&amp;#x27;&lt;/span&gt;); &lt;span class="regexp"&gt;//&lt;/span&gt; &lt;span class="number"&gt;100100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;&lt;span class="regexp"&gt;//&lt;/span&gt;&lt;span class="number"&gt;1.3&lt;/span&gt; 数值字符串 + 数值&lt;/span&gt;&lt;br&gt;&lt;span class="line"&gt;alert(&lt;span class="string"&gt;&amp;#x27;11&amp;#x27;&lt;/span&gt; + &lt;span class="number"&gt;12&lt;/span&gt;);     &lt;span class="regexp"&gt;//&lt;/span&gt; &lt;span class="number"&gt;1112&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;
</code></pre>
</li>
</ul>
<p>+ 号总结口诀：数值相加 ，字符相连</p>
<hr>
<h5 id="5-字符串拼接加强"><a href="#5-字符串拼接加强" class="headerlink" title="5. 字符串拼接加强"></a>5. 字符串拼接加强</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + <span class="number">18</span>);           <span class="comment">// 只要有字符就会相连 </span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line"><span class="comment">// console.log(&#x27;pink老师age岁啦&#x27;);       // 这样不行哦</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + age);          <span class="comment">// pink老师18</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;pink老师&#x27;</span> + age + <span class="string">&#x27;岁啦&#x27;</span>);  <span class="comment">// pink老师18岁啦</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我们经常会将字符串和变量来拼接，因为变量可以很方便地修改里面的值</li>
<li>变量是不能添加引号的，因为加引号的变量会变成字符串</li>
<li>如果变量两侧都有字符串拼接，口诀“引引加加 ”，删掉数字，变量写加中间</li>
</ul>
<br />

<h5 id="6-案例"><a href="#6-案例" class="headerlink" title="6. 案例"></a>6. 案例</h5><p>1.弹出一个输入框，需要用户输入年龄，之后弹出一个警示框显示“您今年 xx 岁啦”（xx 表示刚才输入的年龄）</p>
<p><img src="../img/25/13.png" alt="13"></p>
<p>2.案例分析</p>
<p>交互编程的三个基本要素：</p>
<ul>
<li>用户输入 </li>
<li>程序内部处理   </li>
<li>这是 输出结果  </li>
</ul>
<p>3.那么在程序中要如何实现呢？</p>
<p>3.1 弹出一个输入框（prompt)，让用户输入年龄（用户输入）<br>3.2 把用户输入的值用变量保存起来,把刚才输入的年龄与所要输出的字符串拼接 （程序内部处理）<br>3.3 使用alert语句弹出警示框（输出结果）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> yourAge = prompt(<span class="string">&#x27;请输入你的年龄&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        alert(<span class="string">&#x27;你今年&#x27;</span> + yourAge + <span class="string">&#x27;岁啦&#x27;</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-4-布尔型"><a href="#4-3-4-布尔型" class="headerlink" title="4.3.4 布尔型"></a>4.3.4 布尔型</h4><p>1.布尔型 Boolean</p>
<p>2.布尔类型有两个值：true 和 false ，其中 true 表示真（对），而 false 表示假（错）。<br>布尔型和数字型相加的时候， true 的值为 1 ，false 的值为 0。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + <span class="number">1</span>);  <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">false</span> + <span class="number">1</span>); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>

<br />

<h4 id="4-3-5-Undefined-和-Null"><a href="#4-3-5-Undefined-和-Null" class="headerlink" title="4.3.5 Undefined 和 Null"></a>4.3.5 Undefined 和 Null</h4><p>一个声明后没有被赋值的变量会有一个默认值 undefined ( 如果进行相连或者相加时，注意结果）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> variable;</span><br><span class="line"><span class="built_in">console</span>.log(variable);           <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span> + variable);  <span class="comment">// 你好undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">11</span> + variable);     <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + variable);   <span class="comment">//  NaN</span></span><br></pre></td></tr></table></figure>

<p>一个声明变量给 null 值，里面存的值为空（学习对象时，我们继续研究null)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> vari = <span class="literal">null</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;你好&#x27;</span> + vari);  <span class="comment">// 你好null</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">11</span> + vari);     <span class="comment">// 11</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> + vari);   <span class="comment">//  1</span></span><br></pre></td></tr></table></figure>

<ul>
<li>null可以与数值运算，这也是</li>
</ul>
<hr>
<h3 id="4-4-获取变量数据类型"><a href="#4-4-获取变量数据类型" class="headerlink" title="4.4 获取变量数据类型"></a>4.4 获取变量数据类型</h3><h3 id="4-5-数据类型转换"><a href="#4-5-数据类型转换" class="headerlink" title="4.5 数据类型转换"></a>4.5 数据类型转换</h3>]]></content>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>26-电脑软件</title>
    <url>/1-(0~50)/26-PC_softWare/</url>
    <content><![CDATA[<h2 id="1-小丸工具箱"><a href="#1-小丸工具箱" class="headerlink" title="1. 小丸工具箱"></a>1. 小丸工具箱</h2><p>1.是压制视频的</p>
<p>2.B站发布的视频有严格的要求，很容易被B站二压</p>
<a id="more"></a>

<p><img src="../img/26/1.png" alt="1"></p>
<p>3.软件资源：</p>
<p><a href="https://pan.baidu.com/s/1VHonGHoZ0DmQBNZaRjML2A">https://pan.baidu.com/s/1VHonGHoZ0DmQBNZaRjML2A</a><br>提取码: crhu</p>
<ul>
<li>百度的是不是最新版，作者没有更新，说是网站问题。大概</li>
<li>要找最新版，要去搜索 微博@小丸酱</li>
</ul>
<p>4.软件预览：</p>
<img src="../img/26/2.png" alt="2" style="zoom:100%;" />

<hr>
<h3 id="1-2-B站投稿限制"><a href="#1-2-B站投稿限制" class="headerlink" title="1.2 B站投稿限制"></a>1.2 B站投稿限制</h3><p>1.以前分辨率最高是1080P；</p>
<img src="../img/26/3.png" alt="3" style="zoom:90%;" />

<ul>
<li>这是别人2019-08-24 13:05:13投稿的教学视频</li>
<li>网址：<a href="https://www.bilibili.com/video/BV1L4411R75X?t=268">https://www.bilibili.com/video/BV1L4411R75X?t=268</a><ul>
<li>里面讲解是用pr导出+MediaCoder压制，我不用这些。</li>
<li>虽然软件讲解白搭，但有一些数据讲解可以学习。不过能学习的都在上图了</li>
</ul>
</li>
</ul>
<p>1.2 这里的视频码率应该不是目标码率，应该是视频总码率；</p>
<ul>
<li>视频目标码率+音频目标码率(只是自己得出的假设概念)</li>
</ul>
<p>2.现在可以4k了；2020-9-19 03:12:46</p>
<img src="../img/26/1.png" alt="1" style="zoom:90%;" />

<ul>
<li>不知道什么时候改版</li>
<li>但我屏幕就只有1080P，不过我也不需要录制2K及以上的视频</li>
</ul>
<br />

<p>3.以前因为目标码率≤6000Kbps。</p>
<ul>
<li>那么，什么是目标码率？什么是最高码率？</li>
<li>为什么最高码率可以大于目标码率？</li>
</ul>
<br />

<p>3.1</p>
<p>目标码率：视频的最低码率(也就是说视频的最低码率不低于这个设定的目标码率)</p>
<p>最大码率：画面复杂时，可以达到的最大码率</p>
<p>不知道你注意到没，有一个比特率编码选项，一般是 VBR。VBR 就是动态码率编码，在画面复杂的情况下码率比较高，不复杂的时候码率就比较低，以达到充分利用数据资源的目的。要是把最大码率设置的很大，在画面复杂时，数据量就很大，硬件可能带不动，播放起来就容易卡。</p>
<p>比特率大了图像就更清晰，同时导出体积也会变大，但大到一定程度清晰度就不会再提高了。</p>
<p>H.264 视频编码建议码率</p>
<p>视频大小       分辨率           建议码率 </p>
<p>480P            720x480        1800Kbps </p>
<p>720P           1280x720       3500Kbps </p>
<p>1080P        1920x1080      8500Kbps</p>
<p>作者：吱吱吱果冻柠檬<br>链接：<a href="https://www.zhihu.com/question/401033586/answer/1295057660">https://www.zhihu.com/question/401033586/answer/1295057660</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
<ul>
<li><p>可是小丸工具箱里面只有一个码率设置。不知道是固定码率，还是最高码率啊</p>
<p><img src="../img/26/4.png" alt="4"></p>
</li>
<li><p>百度一下，看能百度到不；2020-9-19 03:20:33</p>
<p>没有百度到</p>
</li>
</ul>
<br />

<p>3.2 自定义数据，一部分解析</p>
<p><a href="https://www.bilibili.com/read/cv4430814/">https://www.bilibili.com/read/cv4430814/</a></p>
<ul>
<li>虽然没百度到，但才5900Kbps，明显是固定码率</li>
</ul>
<br />

<p>3.3 接着主题问题：以前因为目标码率≤6000Kbps。所以我们设置往往接近6000Kbps，例如5900Kbps；</p>
<ul>
<li><p>往往会多200Kbps。例如5900Kbps，可能有6100，保险点5700好点。也许我被提醒码率高就是因为我设置成5900</p>
</li>
<li><p>现在可以2wKbps了，岂不是可以设置19000Kbps？</p>
<ul>
<li>如上面小黑点所说，5900就被提醒了，更别说19000。</li>
<li>1.目标码率徒有虚名，根本无法支持到2w，还是现在6k的上限</li>
<li>2.可能是其他参数出现了需要压制的数据，而不是目标码率的错</li>
<li>3.音频那边的参数全是上限之下，所以我也没法。只能假设是目标码率的问题，上限码率又不知道是多少。</li>
</ul>
</li>
</ul>
<p>3.4 找到最高码率</p>
<ul>
<li><p>1.Bandicam游戏录像下来的视频，在小丸工具箱的MediaTinfo里面看不到最高码率的参数与数据</p>
</li>
<li><p>2.但被小丸压制过的视频，有这个参数与数据</p>
<p><img src="../img/26/5.png" alt="5"></p>
<p>2.2 在最下面的详细信息里面</p>
</li>
</ul>
<br />

<p>4.什么是总码率？</p>
<ul>
<li><p>1.一个视频文件由图像部分和音频部分组成，总比特率=视频比特率+音频比特率。</p>
</li>
<li><p>2.用数据计算，看是不是这样</p>
<p>2.1 5900+196，接近总码率，看来这就是3.3-第一个黑点的答案了；</p>
</li>
</ul>
<p>5.</p>
<br />

<hr>
]]></content>
  </entry>
  <entry>
    <title>99-Hello World</title>
    <url>/1-(0~50)/99-hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
